{"version":3,"sources":["assets/script/framework/decorator/Decorators.ts"],"names":[],"mappings":";;;;;;;AAMA,SAAgB,aAAa,CAAC,OAAgB;IAC1C,OAAO,UAAU,MAAW;QACxB,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG;YACtB,IAAK,QAAQ;gBAAG,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACpF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAA;IACL,CAAC,CAAA;AACL,CAAC;AATD,sCASC;AAED;;;;EAIE;AACF,SAAgB,OAAO,CAAC,OAAe;IACnC,IAAI,GAAG,GAAG,IAAI,OAAO,GAAG,CAAC;IACzB,OAAO,GAAG,CAAC;AACf,CAAC;AAHD,0BAGC","file":"","sourceRoot":"/","sourcesContent":["\n/**\n * @description 各种装饰器定义\n */\nimport { Service } from \"../base/Service\";\n\nexport function injectService(service: Service) {\n    return function (target: any) {\n        let __load = target.prototype.onLoad;\n        target.prototype.onLoad = function () {\n            if ( CC_DEBUG ) cc.log(`[injectService] ${cc.js.getClassName(this)} ---onLoad----`);\n            this.service = service;\n            __load && __load.call(this);\n        }\n    }\n}\n\n/**\n* @description 生成key 如果需要改变请 连带decorators 中的protoHandle 方法一起改动，这两个地方使用的同一个生成规则\n* @param mainCmd \n* @param subCmd \n*/\nexport function makeKey(mainCmd: number): string {\n    let key = `[${mainCmd}]`;\n    return key;\n}\n"]}
{"version":3,"sources":["assets/script/framework/extentions/DateUtils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import TypeUtils from \"../../common/utils/TypeUtils\";\nimport { UtilMgr } from \"../../global/UtilMgr\";\n\n// 一天毫秒\nconst ONE_DAY_MS: number = 86400000;\n\nexport default class DateUtils {\n\n    /**\n     * 获取 月日\n     * @param timestamp {number} 时间戳\n     * @retrun {string} DD/MM\n     */\n    public static getMD(timestamp: number): string {\n        let date: Date = new Date(timestamp);\n        let md: string = \"\";\n        let m: number = date.getMonth() + 1;\n        let d: number = date.getDate();\n\n        let strM: string = m < 10 ? (\"0\" + m) : m.toString();\n        let strD: string = d < 10 ? (\"0\" + d) : d.toString();\n\n        md = `${strD}/${strM}`;\n        return md;\n    }\n\n    /**\n     * 获取 年月日\n     * @param timestamp {number} 时间戳\n     * @param symbol {string} 分隔符\n     * @return {string} YYYY/MM/DD \n     */\n    public static getYMD(timestamp: number | Long, symbol?: string): string {\n        let date: Date = new Date(Number(timestamp));\n        let ymd: string = \"\";\n        let y: number = date.getFullYear();\n        let m: number = date.getMonth() + 1;\n        let d: number = date.getDate();\n\n        if (TypeUtils.isNull(symbol)) {\n            symbol = \"/\";\n        }\n\n        let strM: string = m < 10 ? (\"0\" + m) : m.toString();\n        let strD: string = d < 10 ? (\"0\" + d) : d.toString();\n\n        ymd = `${y}${symbol}${strM}${symbol}${strD}`;\n        return ymd;\n    }\n\n    /**\n     * 获取 月日 时分\n     * @param timestamp {number} 时间戳\n     * @return {String} MM-DD HH:MM\n     */\n    public static getMDHM(timestamp: number): string {\n        let date: Date = new Date(timestamp);\n        let result: string = \"\";\n        let m: number = date.getMonth() + 1;\n        let d: number = date.getDate();\n        let hour: number = date.getHours();\n        let minute: number = date.getMinutes();\n\n\n        let strM: string = m < 10 ? (\"0\" + m) : m.toString();\n        let strD: string = d < 10 ? (\"0\" + d) : d.toString();\n        let strHour: string = hour < 10 ? (\"0\" + hour) : hour.toString();\n        let strMinute: string = minute < 10 ? (\"0\" + minute) : minute.toString();\n\n\n        result = `${strM}-${strD} ${strHour}:${strMinute}`;\n        return result;\n    }\n\n    /**\n     * 获取 月日 时分秒\n     * @param timestamp {number} 时间戳\n     * @return {String} MM-DD HH:MM:SS\n     */\n    public static getMDHMS(timestamp: number): string {\n        let date: Date = new Date(timestamp);\n        let result: string = \"\";\n        let m: number = date.getMonth() + 1;\n        let d: number = date.getDate();\n        let hour: number = date.getHours();\n        let minute: number = date.getMinutes();\n        let sec: number = date.getSeconds();\n\n\n        let strM: string = m < 10 ? (\"0\" + m) : m.toString();\n        let strD: string = d < 10 ? (\"0\" + d) : d.toString();\n        let strHour: string = hour < 10 ? (\"0\" + hour) : hour.toString();\n        let strMinute: string = minute < 10 ? (\"0\" + minute) : minute.toString();\n        let strSec: string = sec < 10 ? (\"0\" + sec) : sec.toString();\n\n\n        result = `${strM}-${strD} ${strHour}:${strMinute}:${strSec}`;\n        return result;\n    }\n\n    /**\n     * 获取 时分秒\n     * @param timestamp {number} 时间戳\n     * @return {String} HH:MM:SS\n     */\n    public static getHMS(timestamp: number): string {\n        let date: Date = new Date(timestamp);\n        let result: string = \"\";\n        let hour: number = date.getHours();\n        let minute: number = date.getMinutes();\n        let sec: number = date.getSeconds();\n\n\n        let strHour: string = hour < 10 ? (\"0\" + hour) : hour.toString();\n        let strMinute: string = minute < 10 ? (\"0\" + minute) : minute.toString();\n        let strSec: string = sec < 10 ? (\"0\" + sec) : sec.toString();\n\n\n        result = `${strHour}:${strMinute}:${strSec}`;\n        return result;\n    }\n\n    /**\n     * 获取 年月日 时分秒\n     * @param timestamp {number} 时间戳\n     * @return {String} YYYY.MM.DD HH:MM:SS\n     */\n    public static getYMDHMS(timestamp: number | Long): string {\n        let date: Date = new Date(Number(timestamp));\n        let ymd: string = \"\";\n        let y: number = date.getFullYear();\n        let m: number = date.getMonth() + 1;\n        let d: number = date.getDate();\n        let hour: number = date.getHours();\n        let minute: number = date.getMinutes();\n        let sec: number = date.getSeconds();\n\n        let strM: string = m < 10 ? (\"0\" + m) : m.toString();\n        let strD: string = d < 10 ? (\"0\" + d) : d.toString();\n\n        let strHour: string = hour < 10 ? (\"0\" + hour) : hour.toString();\n        let strMinute: string = minute < 10 ? (\"0\" + minute) : minute.toString();\n        let strSec: string = sec < 10 ? (\"0\" + sec) : sec.toString()\n\n        ymd = `${y}.${strM}.${strD} ${strHour}:${strMinute}:${strSec}`;\n        return ymd;\n    }\n\n    /**\n     * 获取剩余时间 日时\n     * @param currTimestamp {number} 当前时间戳\n     * @param endTimestamp {Date} 结束时间戳\n     * @return {string} 1D12H\n     */\n    public static getRemainTimeDH(currTimestamp: number, endTimestamp: number): string {\n        let result: string = \"\";\n\n        let distTimestamp: number = endTimestamp - currTimestamp;\n        let distSec: number = distTimestamp / 1000;\n        if (distSec <= 0) {\n            result = \"0H\";\n        } else {\n            const DAY_SEC: number = 86400;\n            const HOUR_SEC: number = 3600\n            let day: number = Math.floor(distSec / DAY_SEC);\n            let hour: number = Math.ceil((distSec % DAY_SEC) / HOUR_SEC);\n            if (day > 0) {\n                result = `${day}D`;\n            }\n            if (hour > 0) {\n                result += `${hour}H`;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * 获取剩余时间 时分秒\n     * @param currTimestamp {number} 当前时间戳\n     * @param endTimestamp {Date} 结束时间戳\n     * @return {string} HH:MM:SS\n     */\n    public static getRemainTimeHMS(currTimestamp: number, endTimestamp: number): string {\n        let result: string = \"\";\n\n        let ms: number = endTimestamp - currTimestamp;\n        if (ms <= 0) {\n            result = \"00:00:00\";\n        } else {\n            let hour = Math.floor(ms / 1000 / 60 / 60 % 24);\n            let minute = Math.floor(ms / 1000 / 60 % 60);\n            let sec = Math.floor(ms / 1000 % 60);\n            let strHour: string = hour < 10 ? (\"0\" + hour) : hour.toString();\n            let strMinute: string = minute < 10 ? (\"0\" + minute) : minute.toString();\n            let strSec: string = sec < 10 ? (\"0\" + sec) : sec.toString();\n            result = `${strHour}:${strMinute}:${strSec}`;\n        }\n\n        return result;\n    }\n\n    /**\n     * 获取剩余时间 分秒\n     * @param currTimestamp {number} 当前时间戳\n     * @param endTimestamp {Date} 结束时间戳\n     * @return {string} MMSS\n     */\n    public static getRemainTimeMS(currTimestamp: number, endTimestamp: number): string {\n        let result: string = \"\";\n\n        let ms: number = endTimestamp - currTimestamp;\n        if (ms <= 0) {\n            result = \"0000\";\n        } else {\n            let minute = Math.floor(ms / 1000 / 60 % 60);\n            let sec = Math.floor(ms / 1000 % 60);\n            let strMinute: string = minute < 10 ? (\"0\" + minute) : minute.toString();\n            let strSec: string = sec < 10 ? (\"0\" + sec) : sec.toString();\n            result = `${strMinute}${strSec}`;\n        }\n\n        return result;\n    }\n\n    /**\n     * 获取剩余时间 秒\n     * @param currTimestamp {number} 当前时间戳\n     * @param endTimestamp {Date} 结束时间戳\n     * @return {number} SS\n     */\n    public static getRemainTimeS(currTimestamp: number, endTimestamp: number): number {\n        let result: number = null;\n\n        let ms: number = endTimestamp - currTimestamp;\n        if (ms <= 0) {\n            result = 0;\n        } else {\n            let sec = Math.floor(ms / 1000);\n            result = sec;\n        }\n\n        return result;\n    }\n\n    /**\n     * 通过毫秒转换为秒\n     * @param ms {number} 毫秒\n     */\n    public static getMsToS(ms: number): string {\n        if (ms <= 0) {\n            return \"\";\n        }\n\n        let sec: number = ms / 1000;\n        return UtilMgr.toPadding(UtilMgr.toFixed(sec, 2), 2);\n    }\n\n    /**\n     * 精确毫秒时间戳 转换 精确天时间戳\n     * @param timestamp {number} 精确毫秒时间戳\n     * @returns {number} 精确天时间戳\n     */\n    public static getDayTimestamp(timestamp: number): number {\n        let strDate: string = new Date(timestamp).format(\"yyyy-MM-dd\");\n        return this.getTimestampByDate(strDate);\n    }\n\n    /**\n     * 获取时间戳 通过时间格式\n     * @param strDate {string} 字符串日期\n     */\n    public static getTimestampByDate(strDate: string): number {\n        return (new Date(strDate)).getTime();\n    }\n\n    /**\n     * 获取当前时间戳 前后天数 的日期\n     * @param timestamp {number} 精确毫秒时间戳\n     * @param baDay {number} 前后天数\n     * @param format {string} 格式\n     * @returns {number} 精确天时间戳\n     */\n    public static getDayBeforeAfter(timestamp: number, baDay: number = 0, format: string = \"yyyy-MM-dd\"): string {\n        let zeroTimestamp: number = this.getDayTimestamp(timestamp);\n        let targetTimestamp: number = zeroTimestamp + (ONE_DAY_MS * baDay)\n        let strDate: string = new Date(targetTimestamp).format(format);\n        return strDate;\n    }\n\n    /**\n     * 获取日期时间通过时间戳\n     * @param timestamp {number} 时间戳\n     * @param format {string} 格式\n     */\n    public static getDateByTimestamp(timestamp: number | Long, format: string = \"yyyy-MM-dd\"): string {\n        return new Date(Number(timestamp)).format(format);\n    }\n}"]}
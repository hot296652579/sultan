{"version":3,"sources":["assets/script/framework/assetManager/ResourceLoader.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ResourceData, ResourceCacheData, ResourceInfo } from \"../base/Defines\";\nimport { Manager } from \"../Framework\";\n\nexport enum ResourceLoaderError {\n    /**@description 加载中 */\n    LOADING,\n    /** @description 未找到或设置加载资源*/\n    NO_FOUND_LOAD_RESOURCE,\n    /**@description 完美加载 */\n    SUCCESS,\n}\n\n/**\n * @description 资源加载器\n */\nexport default class ResourceLoader {\n\n    /** @description 加载资源数据 */\n    private _resources: Map<string,ResourceData> = new Map<string,ResourceData>();\n    /**@description 当前已经加载的资源数量 */\n    private _loadedCount: number = 0;\n\n    /**@description 加载完成后的数据，为了方便释放时精准释放，没加载成功的资源，不在做释放的判断 */\n    private _loadedResource: Map<string,ResourceInfo>  = new Map<string,ResourceInfo>();\n\n    /**@description 当前是否正在加载资源 */\n    private _isLoading: boolean = false;\n\n    /**@description 标识 */\n    private _tag: string = null;\n    public get tag() {\n        return this._tag;\n    }\n    public set tag(tag: string) {\n        this._tag = tag;\n    }\n\n    /**@description 加载完成回调 */\n    private _onLoadComplete: (error: ResourceLoaderError) => void = null;\n    public set onLoadComplete(cb: (error: ResourceLoaderError) => void) {\n        this._onLoadComplete = cb;\n    }\n    public get onLoadComplete() {\n        return this._onLoadComplete;\n    }\n\n    /**@description 加载进度 */\n    public _onLoadProgress: (loadedCount: number, toatl: number, data: ResourceCacheData) => void;\n    public set onLoadProgress(value: (loadedCount: number, toatl: number, data: ResourceCacheData) => void) {\n        this._onLoadProgress = value;\n    }\n    public get onLoadProgress() {\n        return this._onLoadProgress;\n    }\n\n\n    /**\n     * @description 实现类必须给个需要加载资源\n     */\n    private _getLoadResource: () => ResourceData[] = null;\n    public set getLoadResources(func: () => ResourceData[]) {\n        this._getLoadResource = func;\n    }\n    public get getLoadResources(): () => ResourceData[] {\n        return this._getLoadResource;\n    }\n\n    /**\n     * @description 加载资源\n     */\n    public loadResources() {\n\n        if (!this.getLoadResources) {\n            if (CC_DEBUG) cc.error(\"未指定 getLoadResources 函数\");\n            this.onLoadComplete && this.onLoadComplete(ResourceLoaderError.NO_FOUND_LOAD_RESOURCE);\n            return;\n        }\n\n        let res = this.getLoadResources();\n        if (!res) {\n            if (CC_DEBUG) cc.error(`未指定加载资源`);\n            this.onLoadComplete && this.onLoadComplete(ResourceLoaderError.NO_FOUND_LOAD_RESOURCE);\n            return;\n        }\n        if (res.length <= 0) {\n            if (CC_DEBUG) cc.warn(`加载的资源为空`);\n            this.onLoadComplete && this.onLoadComplete(ResourceLoaderError.NO_FOUND_LOAD_RESOURCE);\n            return;\n        }\n\n        //如果正在加载中，防止重复调用\n        if (this._isLoading) {\n            if (CC_DEBUG) cc.warn(`资源加载中，未完成加载`);\n            this.onLoadComplete && this.onLoadComplete(ResourceLoaderError.LOADING);\n            return;\n        }\n\n        if ( this._resources.size > 0 && this.isLoadComplete() ){\n            if ( CC_DEBUG ) cc.warn(`资源已经加载完成，使用已经加载完成的资源`);\n            this.onLoadComplete && this.onLoadComplete(ResourceLoaderError.SUCCESS);\n            this.onLoadResourceComplete();\n            return;\n        }\n\n        this._isLoading = true;\n        //为防止重复，这里把资源放在一个map中\n        res.forEach((value,index)=>{\n            if ( value.url ){\n                this._resources.set(value.url,value);\n            }else{\n                if ( value.preloadView) this._resources.set(value.preloadView.getPrefabUrl(),value);\n            }\n        });\n\n        this._loadedCount = 0;\n        this._resources.forEach((value: ResourceData,key,source) => {\n            if ( value.preloadView ){\n                Manager.uiManager.preload(value.preloadView,value.bundle).then((view)=>{\n                    let cache = new ResourceCacheData();\n                    cache.isLoaded = true;\n                    cache.data = <any>view;\n                    cache.url = value.preloadView.getPrefabUrl();\n                    cache.bundle = value.bundle;\n                    this._onLoadResourceComplete(cache);\n                })\n            }else{\n                Manager.assetManager.load(value.bundle,value.url,value.type,null,this._onLoadResourceComplete.bind(this));\n            }\n        });\n    }\n\n    /**\n     * @description 卸载已经加载资源资源\n     */\n    public unLoadResources() {\n        this._unLoadResources();\n    }\n\n    private _unLoadResources() {\n        if (this._isLoading || this._resources.size <= 0 ) {\n            //当前正在加载中\n            if (this._isLoading) {\n                cc.log(\"resources is loading , waiting for unload!!!\");\n            }\n            return;\n        }\n        if (this._resources.size > 0) {\n            this._resources.forEach((value: ResourceData) => {\n                if ( value.url ){\n                    if( this._loadedResource.has(value.url)){\n                        let data = this._loadedResource.get(value.url);\n                        if( data ){\n                            Manager.assetManager.releaseAsset(data);\n                        }\n                        this._loadedResource.delete(value.url);\n                    }\n                }\n            });\n        }\n        //重置标记\n        this._isLoading = false;\n        this._loadedCount = 0;\n        this._resources.clear();\n    }\n\n    private _onLoadResourceComplete(data: ResourceCacheData) {\n        this._loadedCount++;\n\n        if (this._onLoadProgress) {\n            if (this._loadedCount > this._resources.size) {\n                this._loadedCount = this._resources.size;\n            }\n            //cc.log(`----------loadprogress ${this._loadedCount} / ${this._resources.length}--------------`);\n            this._onLoadProgress(this._loadedCount, this._resources.size, data);\n        }\n\n        if (data && data.data instanceof cc.Asset ) {\n            //排除掉界面管理器\n            let info = new ResourceInfo;\n            info.url = data.url;\n            info.type = data.assetType;\n            info.data = data.data;\n            info.bundle = data.bundle;\n            this._loadedResource.set(info.url,info);\n        }\n\n        this.checkLoadResourceComplete();\n    }\n    /**\n     * @description 资源加载完成\n     */\n    protected checkLoadResourceComplete() {\n        //抛出事件给业务逻辑处理\n        if (this.isLoadComplete()) {\n            //加载完成\n            this._isLoading = false;\n\n            this.onLoadComplete && this.onLoadComplete(ResourceLoaderError.SUCCESS);\n            this.onLoadResourceComplete();\n        }\n    }\n\n    /**@description 加载资源完成 */\n    protected onLoadResourceComplete() {\n\n    }\n\n    public isLoadComplete(): boolean {\n        return this._loadedCount >= this._resources.size;\n    }\n\n}"]}
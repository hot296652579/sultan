{"version":3,"sources":["assets/script/framework/adaptor/Adaptor.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { getSingleton } from \"../base/Singleton\";\nimport { Manager } from \"../Framework\";\n\ntype DeviceDirection = \"\" | \"Landscape\" | \"Portrait\";\n\nenum ScreenAdaptType {\n    /**@description 无处理 */\n    None,\n    /**@description 放大 */\n    Increase,\n    /**@description 缩小 */\n    Decrease,\n    /**@description 最大化，不能在进行拉伸扩大了 */\n    Max,\n}\n\nfunction instance() {\n    return getSingleton(Adaptor);\n}\n\nexport class Adaptor {\n    private _logTag = \"[Adaptor]\";\n    private static _instance: Adaptor = null;\n    public static Instance() { return this._instance || (this._instance = new Adaptor()); }\n    public canvas: cc.Canvas = null;\n    /**@description 是否需要进行全屏幕适配 */\n    private screenAdaptType: ScreenAdaptType = ScreenAdaptType.None;\n    private node: cc.Node = null;\n\n    /**最大允许屏幕比率 */\n    private readonly MAX_RATE = 2.4;\n\n    private designResolution: cc.Size = null;\n    private landscapeHeight = 0;\n    private protraitHeight = 0;\n    private waitScorllY = null;\n    private isFirstResize = true;\n    private _isShowKeyboard = false;\n    private _maxLandscapeHeight = 0;\n    public get isShowKeyboard() {\n        return instance()._isShowKeyboard;\n    }\n    public set isShowKeyboard(value) {\n        let me = instance();\n        //let content = value ? \"键盘显示!!!\" : \"键盘隐藏!!!\";\n        //cc.log(me._logTag,`${content}`);\n        me._isShowKeyboard = value;\n\n        if (!value) {\n            me._onResize(true);\n        }\n    }\n\n    /**@description 全屏适配 */\n    public fullScreenAdapt(node: cc.Node, adapter?: IFullScreenAdapt) {\n        let me = instance();\n        if (node && me.isNeedAdapt) {\n            //这里，做下优化，只有该节点有选配组件，才适配到全屏\n            let widget = node.getComponent(cc.Widget);\n            if (!widget) return;\n            node.setContentSize(cc.winSize);\n            //这里可能父节点还没有，就不管了，按当前节点大小，把子节点做布局\n            me.updateAlignment(node);\n            if (adapter !== undefined && adapter !== null) {\n                adapter.onFullScreenAdapt();\n            }\n        }\n    }\n\n    /**@description 是否需要做适配操作，当分辨率发生变化，只要ScreenAdaptType 不是None的情况 */\n    public get isNeedAdapt() {\n        let me = instance();\n        if (me.screenAdaptType != ScreenAdaptType.None) {\n            return true;\n        }\n        return false;\n    }\n\n    private updateAlignment(node: cc.Node) {\n        let me = instance();\n        let ch = node.children;\n        for (let i = 0; i < ch.length; i++) {\n            let child = ch[i];\n            cc.updateAlignment(child);\n            me.updateAlignment(child);\n        }\n    }\n\n    public onLoad(node: cc.Node) {\n        let me = instance();\n        me.node = node;\n        me.canvas = node.getComponent(cc.Canvas);\n        me.designResolution = me.canvas.designResolution.clone();\n        me.onResize();\n    }\n\n    public onDestroy() {\n        let me = instance();\n        me.node = null;\n        me.isFirstResize = false;\n    }\n\n    /**@description 做屏幕适配 */\n    private doChangeResolution() {\n        let me = instance();\n        if (me.screenAdaptType == ScreenAdaptType.Increase) {\n            let winsize = me.getWinsize();\n            me.canvas.designResolution = winsize;\n        } else if (me.screenAdaptType == ScreenAdaptType.Max) {\n            let winsize = me.getMaxWinsize();\n            if (CC_DEBUG) cc.log(`max winsize : ${winsize.width} * ${winsize.height}`);\n            me.canvas.designResolution = winsize;\n        } else {\n            me.canvas.designResolution = me.designResolution;\n        }\n        if (me.isNeedAdapt) {\n            // dispatch(td.Adaptor.ADAPT_SCREEN);\n            Manager.uiManager.fullScreenAdapt();\n        }\n    }\n\n\n    /**@description 浏览器适配初始化 */\n    public initBrowserAdaptor() {\n        let me = instance();\n        if (me.isBrowser && !CC_EDITOR) {\n            cc.view.resizeWithBrowserSize(true);\n\n            //调试浏览器\n            if (CC_PREVIEW || cc.sys.platform == cc.sys.WECHAT_GAME) {\n                me.recordHeight();\n            } else {\n                window.addEventListener(\"load\", () => {\n                    me.recordHeight();\n                    window.addEventListener(\"resize\", me.onResize, false);\n                    window.addEventListener(\"orientationchange\", me.onOrientationChange, false);\n                }, false);\n            }\n        }\n    }\n\n    public get isBrowser() {\n        if (cc.sys.isBrowser) {\n            return true;\n        }\n        return false;\n    }\n\n    private get isSafari() {\n        let me = instance();\n        if (me.isBrowser && cc.sys.OS_IOS == cc.sys.os && cc.sys.browserType == cc.sys.BROWSER_TYPE_SAFARI) {\n            return true;\n        }\n        return false;\n    }\n\n    private onOrientationChange() {\n        let me = instance();\n        me.recordHeight();\n        me.isFirstResize = false;\n        //cc.log(me._logTag,`onOrientationChange`);\n    }\n\n    private onResize() {\n        let me = instance();\n        me._onResize(false);\n    }\n\n    private _onResize(isHideKeyboard: boolean) {\n        let me = instance();\n        //cc.log(me._logTag,`onResize`);\n        if (me.node) {\n            if (CC_PREVIEW || cc.sys.platform == cc.sys.WECHAT_GAME) {\n                me.recordHeight();\n                me.doAdapt();\n            }\n            else {\n\n                if (me.isShowKeyboard) {\n                    //cc.log(`键盘显示，不做重新适配处理`);\n                    me.recordHeight();\n                    return;\n                }\n\n                if (me.dviceDirection == \"Landscape\") {\n                    let height = me.landscapeHeight;\n                    let offsetY = 0;\n                    me.recordHeight();\n                    if (me.landscapeHeight != 0) {\n                        offsetY = me.landscapeHeight - height;//Math.abs(me.landscapeHeight - height);\n                        if (me.isFirstResize) {\n                            if (CC_DEBUG) cc.log(me._logTag, `在有导行条情况下进行刷新操作`);\n                            me.waitScorllY = offsetY;\n                            me.doAdapt();\n                            me.isFirstResize = false;\n                            return;\n                        }\n                    }\n                }\n\n                if (isHideKeyboard && me.dviceDirection == \"Landscape\") {\n                    //cc.log(`maxHeigth : ${me._maxLandscapeHeight} curHeigth : ${me.landscapeHeight}`);\n                    me.waitScorllY = Math.abs(me._maxLandscapeHeight - me.landscapeHeight);\n                }\n\n                me.isFirstResize = false;\n                me.doAdapt();\n\n                setTimeout(() => {\n                    if (me.isShowKeyboard) {\n                        //cc.log(`键盘显示11，不做重新适配处理`);\n                        return;\n                    }\n                    if (me.dviceDirection == \"Landscape\") {\n                        me.recordHeight();\n                        cc.log(`cur scrolly : ${window.scrollY}`);\n                        if (window.scrollY > 0 || me.isSafari) {\n                            if (CC_DEBUG) cc.log(me._logTag, me.dviceDirection);\n                            if (me.isSafari) {\n                                //在safari浏览器下，做一个强制移动，让浏览器的导行条显示出来,不然在ios13之前，最顶部分按钮无法点击\n                                me.waitScorllY = window.scrollY > 0 ? -window.scrollY : -50;\n                            } else {\n                                me.waitScorllY = -window.scrollY;\n                            }\n                            if (CC_DEBUG) cc.log(me._logTag, `scrollY : ${me.waitScorllY}`);\n                            me.doAdapt();\n                        } else {\n                            me.doAdapt();\n                        }\n                    } else if (me.dviceDirection == \"Portrait\") {\n                        if (me.protraitHeight > window.innerHeight) {\n                            me.waitScorllY = (me.protraitHeight - window.innerHeight);\n                        }\n                        me.recordHeight();\n                        me.doAdapt();\n                    }\n                }, 505);\n            }\n        }\n    }\n\n    private doAdapt() {\n        let me = instance();\n        if (me.canvas) {\n            if (me.waitScorllY != null) {\n                let top = me.waitScorllY;\n                if (CC_DEBUG) cc.log(me._logTag, `scroll top : ${top}`);\n                if (window.scrollTo) {\n                    window.scrollTo(0, top);\n                }\n                me.waitScorllY = null;\n            }\n            me.calculateNeedFullScreenAdapt();\n            me.doChangeResolution();\n        }\n        else {\n            if (CC_DEBUG) cc.log(me._logTag, `等待场景加载完成做适配`);\n        }\n    }\n\n    //记录屏幕高度\n    private recordHeight() {\n        if (window.innerWidth && window.innerHeight) {\n            let me = instance();\n            if (me.dviceDirection == \"Landscape\") {\n                me.landscapeHeight = window.innerHeight;\n                me._maxLandscapeHeight = Math.max(me._maxLandscapeHeight, me.landscapeHeight);\n            } else if (me.dviceDirection == \"Portrait\") {\n                me.protraitHeight = Math.max(window.innerWidth, window.innerHeight);\n\n            }\n        }\n    }\n\n    private getWinsize() {\n        let me = instance();\n        let frameSize = me.getFrameSize();\n        let width = frameSize.width * me.designResolution.height / frameSize.height;\n        let height = me.designResolution.height;\n        return cc.size(width, height);\n    }\n\n    /**@description 最大化窗口大小 */\n    private getMaxWinsize() {\n        let me = instance();\n        //实际当前窗口的宽度\n        let height = me.designResolution.height;\n        let width = height * me.MAX_RATE;\n        return cc.size(width, height);\n    }\n\n    private getFrameSize() {\n        let me = instance();\n        let frameSize = cc.view.getFrameSize();\n        let innerSize = me.windowInnerSize;\n        let size = frameSize.clone();\n        if (!CC_JSB && !CC_PREVIEW) {\n            size = innerSize;\n        }\n        return size;\n    }\n\n    /**计算是否需要进行全屏幕适配 */\n    private calculateNeedFullScreenAdapt() {\n        let me = instance();\n        //当前设计分辨率的宽高比\n        let design = me.designResolution.width / me.designResolution.height;\n        let frameSize = me.getFrameSize();\n        let rate = frameSize.width / frameSize.height;\n        if (me.dviceDirection == \"Portrait\" || (me.dviceDirection == '' && design < 1)) {\n            design = 1 / design;\n            rate = 1 / rate;\n        }\n        if (CC_DEBUG) cc.log(me._logTag, `design : ${design} real : ${rate}`);\n\n        me.screenAdaptType = ScreenAdaptType.None;\n        if (design == rate) {\n            //相等比率，\n            if (CC_DEBUG) cc.log(me._logTag, `相等比率`);\n        } else if (rate < design) {\n            me.screenAdaptType = ScreenAdaptType.Decrease;\n            if (CC_DEBUG) cc.log(me._logTag, `当前设计比率大于实际比率，按宽进行适配，上下有黑边`);\n        } else {\n            if (CC_DEBUG) cc.log(me._logTag, `当前设计比率小于实际比率，将会对支持全屏的界面进行重重布局`);\n            if (rate >= me.MAX_RATE) {\n                if (CC_DEBUG) cc.log(me._logTag, `超过上限比率，按最大值来`)\n                me.screenAdaptType = ScreenAdaptType.Max;\n            } else {\n                me.screenAdaptType = ScreenAdaptType.Increase;\n            }\n        }\n    }\n\n    /**@description 当前是否处于横屏状态 */\n    private get dviceDirection(): DeviceDirection {\n        if ((window.orientation != undefined || window.orientation != null) && (window.orientation == 90 || window.orientation == -90)) {\n            return \"Landscape\";\n        }\n        if ((window.orientation != undefined || window.orientation != null) && (window.orientation == 0 || window.orientation == 180)) {\n            return \"Portrait\";\n        }\n        return \"\";\n    }\n\n    private get windowInnerSize() {\n        let size = cc.Size.ZERO.clone();\n        if (window.innerHeight && window.innerWidth) {\n            let w = window.innerWidth;\n            let h = window.innerHeight;\n            let isLandscape = w >= h;\n            if (!cc.sys.isMobile || isLandscape) {\n                size.width = w;\n                size.height = h;\n            } else {\n                size.width = h;\n                size.height = w;\n            }\n        }\n        return size;\n    }\n}"]}
{"version":3,"sources":["assets/script/msgbox/NativePopUpToolTip.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { i18n } from \"../common/language/LanguageImpl\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { USING_LAN_KEY } from \"../framework/base/Defines\";\n\nconst NativePopUpToolTipClassName = \"com/PopUpTipTool/PopUpTipTool\"\nclass _NativePopUpToolTip {\n    constructor() {\n        window[\"onPopSelectCall\"] = this.onPopSelectCall.bind(this)\n        window[\"onServerOutTimeCall\"] = this.onServerOutTimeCall.bind(this)\n    }\n    init() {\n\n    }\n    confirmCall = null;\n    cancleCall = null;\n    onPopSelectCall(isConfirm) {\n        let call = isConfirm ? this.confirmCall : this.cancleCall\n        if (call) call();\n        this.confirmCall = null;\n        this.cancleCall = null;\n    }\n    onServerOutTimeCall() {\n        dispatch(\"serverOutTime\");\n    }\n    showTip(string) {\n        if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n        } else if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\n            jsb.reflection.callStaticMethod(NativePopUpToolTipClassName, \"showToask\", \"(Ljava/lang/String;)V\", string);\n        }\n    }\n\n    showDialog(title, content, next?, cancel?, cancleText?, conmfirmText?, showclose = true, autoclose = true) {\n        title = this.chackLanguageStr(title);\n        content = this.chackLanguageStr(content);\n        cancleText = this.chackLanguageStr(cancleText);\n        conmfirmText = this.chackLanguageStr(conmfirmText);\n\n        if (title == '') {\n            title = i18n.MSG_BOX.tips;\n        }\n        if (!conmfirmText) {\n            conmfirmText = i18n.MSG_BOX.Confirm;\n        }\n        if (!cancleText) {\n            cancleText = i18n.MSG_BOX.Cancel;\n        } else if (\"false\" == cancleText) {\n            cancleText = '';\n        }\n        let info = { title, content, conmfirmText, cancleText }\n        this.cancleCall = cancleText;\n        this.confirmCall = next;\n        let string = JSON.stringify(info)\n        if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n        } else if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\n            jsb.reflection.callStaticMethod(NativePopUpToolTipClassName, \"showDialog\", \"(Ljava/lang/String;)V\", string);\n        }\n    }\n    showMsgBox(title, content, next?, confirm_label?, showclose = true, autoclose = true) {\n        this.showDialog(title, content, next, null, 'false', confirm_label);\n    }\n    showLoading(content, outTime = 10000) {\n        content = this.chackLanguageStr(content);\n        if (content == '') content = i18n.WAIT.LOADING;\n        let jsonStr = JSON.stringify({ content, outTime })\n        if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n        } else if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\n            jsb.reflection.callStaticMethod(NativePopUpToolTipClassName, \"showLoading\", \"(Ljava/lang/String;)V\", jsonStr);\n        }\n    }\n    hideLoading() {\n        if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n        } else if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\n            jsb.reflection.callStaticMethod(NativePopUpToolTipClassName, \"hideLoading\", \"()V\");\n        }\n    }\n    showDisconnectWait() {\n        let content = Manager.makeLanguage(\"WAIT.DISCONNECT\");\n        this.showLoading(content, 20000);\n    }\n    hideDisconnectWait() {\n        this.hideLoading();\n    }\n    // 检测是不是多语言的字符串\n    chackLanguageStr(content: string) {\n        if (content == undefined) {\n            content = '';\n        } else if (content.startsWith(USING_LAN_KEY)) {\n            content = Manager.language.get([content]);\n        }\n        return content\n    }\n}\nexport let NativePopUpToolTip = new _NativePopUpToolTip()"]}
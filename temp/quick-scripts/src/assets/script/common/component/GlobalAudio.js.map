{"version":3,"sources":["assets/script/common/component/GlobalAudio.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;GAOG;AACH,yFAAiE;AAEjE,gDAA6C;AAE7C;;GAEG;AAEH,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAC,IAAI,EAAC,GAAG,EAAE,CAAC,UAAU,CAAC;AAI/C,IAAqB,WAAW,GAAhC,MAAqB,WAAY,SAAQ,wBAAc;IAE5C,SAAS,CAAC,GAAW,EAAE,MAAmB,EAAE,OAAgB,IAAI;QACnE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,OAAO,IAAI,OAAO,CAAsC,CAAC,OAAO,EAAE,EAAE;YAChE,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,GAAG,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC;gBAClC,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;oBAC1B,iBAAO,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;wBACzE,IAAI,IAAI,EAAE;4BACN,EAAE,CAAC,SAAS,EAAE,CAAC;4BACf,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;4BACrC,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;yBAC1C;6BAAM;4BACH,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;yBAC3C;oBACL,CAAC,CAAC,CAAC;iBACN;aACJ;QAEL,CAAC,CAAC,CAAC;IAEP,CAAC;IAEM,UAAU,CAAC,GAAW,EAAE,MAAkB,EAAE,OAAgB,KAAK;QACpE,OAAO,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;oBAC3B,iBAAO,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;wBACzE,IAAI,IAAI,CAAC,SAAS,EAAE;4BAChB,IAAI,IAAI,EAAE;gCACN,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gCACnE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;6BACvC;iCAAM;gCACH,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;6BACvC;yBACJ;oBAEL,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;oBAChC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACf;aACJ;QAEL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;IAClD,CAAC;CACJ,CAAA;AArDoB,WAAW;IAF/B,OAAO;IACP,IAAI,CAAC,8BAA8B,CAAC;GAChB,WAAW,CAqD/B;kBArDoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["/*\n * @Author: your name\n * @Date: 2019-11-20 19:04:21\n * @LastEditTime: 2020-04-10 15:27:19\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ddz\\assets\\common\\component\\GlobalAudio.ts\n */\nimport AudioComponent from \"../../framework/base/AudioComponent\";\nimport { BUNDLE_TYPE, BUNDLE_RESOURCES } from \"../../framework/base/Defines\";\nimport { Manager } from \"../manager/Manager\";\n\n/**\n * @description 全局音频播放组棒\n */\n\nconst {ccclass, property,menu} = cc._decorator;\n\n@ccclass\n@menu(\"common/component/GlobalAudio\")\nexport default class GlobalAudio extends AudioComponent {\n\n    public playMusic(url: string, bundle: BUNDLE_TYPE, loop: boolean = true) {\n        let me = this;\n        return new Promise<{ url: string, isSuccess: boolean }>((resolve) => {\n            if (this.audioData) {\n                this.audioData.curMusicUrl = url;\n                this.audioData.curBundle = bundle;\n                if (this.audioData.isMusicOn) {\n                    Manager.cacheManager.getCacheByAsync(url, cc.AudioClip,bundle).then((data) => {\n                        if (data) {\n                            me.stopMusic();\n                            cc.audioEngine.playMusic(data, loop);\n                            resolve({ url: url, isSuccess: true });\n                        } else {\n                            resolve({ url: url, isSuccess: false });\n                        }\n                    });\n                }\n            }\n            \n        });\n\n    }\n\n    public playEffect(url: string, bundle:BUNDLE_TYPE, loop: boolean = false) {\n        return new Promise<number>((resolve) => {\n            if (this.audioData) {\n                if (this.audioData.isEffectOn) {\n                    Manager.cacheManager.getCacheByAsync(url, cc.AudioClip,bundle).then((data) => {\n                        if (this.audioData) {\n                            if (data) {\n                                this.audioData.curEffectId = cc.audioEngine.playEffect(data, loop);\n                                resolve(this.audioData.curEffectId);\n                            } else {\n                                resolve(this.audioData.curEffectId);\n                            }     \n                        }\n                        \n                    });\n                } else {\n                    this.audioData.curEffectId = -1;\n                    resolve(-1);\n                }\n            }\n            \n        });\n    }\n\n    onLoad(){\n        this.effectVolume = this.audioData.effectVolume;\n        this.musicVolume = this.audioData.musicVolume;\n    }\n}\n"]}
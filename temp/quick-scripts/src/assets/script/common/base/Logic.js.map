{"version":3,"sources":["assets/script/common/base/Logic.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,oDAAgE;AAChE,yFAAiE;AACjE,0DAAuG;AACvG,iGAAkG;AAClG,6DAA0D;AAC1D,6CAA0C;AAG1C;;EAEE;AAEF,MAAa,KAAM,SAAQ,wBAAc;IAOrC;QACI,KAAK,EAAE,CAAC;QANF,WAAM,GAAG,SAAS,CAAC;QACnB,YAAO,GAAmB,IAAI,CAAC;QAE/B,cAAS,GAAc,sBAAS,CAAC,OAAO,CAAC;QAK/C,IAAI,CAAC,OAAO,GAAG,IAAI,wBAAc,EAAE,CAAC;QAEpC,cAAc;QACd,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,eAAe;QACf,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzE,CAAC;IAES,aAAa;QACnB,KAAK,CAAC,aAAa,EAAE,CAAC;QACtB,IAAI,gCAAsB,EAAE;YACxB,IAAI,CAAC,aAAa,CAAC,mBAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACvE;IACL,CAAC;IAED,IAAc,MAAM;QAChB,EAAE,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAClE,OAAO,EAAE,CAAC;IACd,CAAC;IAED,4BAA4B;IACrB,eAAe,CAAC,IAAoB;IAE3C,CAAC;IAES,gBAAgB;IAE1B,CAAC;IAEM,IAAI,CAAC,IAAa;QACrB,IAAI,IAAI,CAAC,SAAS,IAAI,sBAAS,CAAC,OAAO,EAAE;YACrC,EAAE,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;YACf,eAAM,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;SACtD;aAAM;YACH,EAAE,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;SACrE;QACD,KAAK,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC;IAEM,SAAS;QACZ,KAAK,CAAC,SAAS,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,4BAA4B;IAClB,gBAAgB;QACtB,OAAO,EAAE,CAAC;IACd,CAAC;IAED,yBAAyB;IACf,sBAAsB,CAAC,GAAwB;IACzD,CAAC;IAED,wBAAwB;IACd,sBAAsB,CAAC,WAAmB,EAAE,KAAa,EAAE,IAAuB;IAC5F,CAAC;IAED,QAAQ;IACE,kBAAkB;IAE5B,CAAC;IAED,QAAQ;IACE,eAAe;IAEzB,CAAC;CACJ;AAnFD,sBAmFC","file":"","sourceRoot":"/","sourcesContent":["import { LogicEventData, LogicType } from \"../event/LogicEvent\";\nimport EventComponent from \"../../framework/base/EventComponent\";\nimport { ResourceData, ResourceCacheData, ENABLE_CHANGE_LANGUAGE } from \"../../framework/base/Defines\";\nimport ResourceLoader, { ResourceLoaderError } from \"../../framework/assetManager/ResourceLoader\";\nimport { EventApi } from \"../../framework/event/EventApi\";\nimport { Config } from \"../config/Config\";\nimport { Manager } from \"../../framework/Framework\";\n\n/**\n * @description 逻辑控制器 需要实现LogicInterface\n*/\n\nexport class Logic extends EventComponent {\n\n    protected logTag = `[Logic]`;\n    protected _loader: ResourceLoader = null;\n\n    protected logicType: LogicType = LogicType.UNKNOWN;\n\n    constructor() {\n        super();\n\n        this._loader = new ResourceLoader();\n\n        //绑定加载器获取资源的回调\n        this._loader.getLoadResources = this.getLoadResources.bind(this);\n        //绑定加载器加载资源完成回调\n        this._loader.onLoadComplete = this.onLoadResourceComplete.bind(this);\n        this._loader.onLoadProgress = this.onLoadResourceProgress.bind(this);\n    }\n\n    protected bindingEvents() {\n        super.bindingEvents();\n        if (ENABLE_CHANGE_LANGUAGE) {\n            this.registerEvent(EventApi.CHANGE_LANGUAGE, this.onLanguageChange);\n        }\n    }\n\n    protected get bundle(): string {\n        cc.error(`请子类重写protected get bundle,返回游戏的包名,即 asset bundle name`);\n        return \"\";\n    }\n\n    /**@description 进入各模块完成回调 */\n    public onEnterComplete(data: LogicEventData) {\n\n    }\n\n    protected onLanguageChange() {\n\n    }\n\n    public init(data: cc.Node) {\n        if (this.logicType == LogicType.UNKNOWN) {\n            cc.error(`未对正确的对logicType赋值`);\n        }\n        this.node = data;\n    }\n\n    public onLoad() {\n        if (!!this.bundle) {\n            Config.assetBundle[`${this.bundle}`] = this.bundle;\n        } else {\n            cc.error(`请子类重写protected get bundle,返回游戏的包名,即 asset bundle name`);\n        }\n        super.onLoad();\n    }\n\n    public onDestroy() {\n        super.onDestroy();\n        this.node = null;\n    }\n\n    /**@description 获取需要加载的资源 */\n    protected getLoadResources(): ResourceData[] {\n        return [];\n    }\n\n    /**@description 资源加载完成 */\n    protected onLoadResourceComplete(err: ResourceLoaderError) {\n    }\n\n    /**@description 资源加载中 */\n    protected onLoadResourceProgress(loadedCount: number, total: number, data: ResourceCacheData) {\n    }\n\n    //移除网络组件\n    protected removeNetComponent() {\n\n    }\n\n    //添加网络组件\n    protected addNetComponent() {\n\n    }\n}"]}
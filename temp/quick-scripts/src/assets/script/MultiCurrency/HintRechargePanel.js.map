{"version":3,"sources":["assets/script/MultiCurrency/HintRechargePanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,oEAA4C;AAC5C,+CAA4C;AAC5C,yCAAsC;AACtC,kEAAuD;AACvD,uDAA6D;AAE7D,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,iBAAiB,GAAtC,MAAqB,iBAAkB,SAAQ,gBAAM;IAArD;;QAGI,YAAO,GAAa,IAAI,CAAC;QAEzB,YAAO,GAAa,IAAI,CAAC;IAgC7B,CAAC;IA9BG,MAAM,CAAC,YAAY;QACf,OAAO,yCAAyC,CAAA;IACpD,CAAC;IAED,IAAI,CAAC,IAAI;QACL,IAAI,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAO,CAAC,WAAW,CAAC,WAAI,CAAC,KAAK,CAAC,CAAA;QACrD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,mBAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,mBAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;IAC3H,CAAC;IACD,iBAAiB,CAAC,IAAI,GAAG,EAAE;QACvB,QAAQ,IAAI,EAAE;YACV,KAAK,MAAM,CAAC;YACZ,KAAK,SAAS;gBACV,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,0BAA0B,EAAE,0BAAgB,CAAC,CAAC;gBAC1E,MAAM;YACV;gBAAS,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAA;gBAClC,MAAM;SACb;IACL,CAAC;IACD,OAAO,CAAC,IAAI;QACR,QAAQ,IAAI,EAAE;YACV,KAAK,UAAU;gBACX,MAAM;YACV,KAAK,SAAS;gBACV,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBAC7B,MAAM;SACb;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;CACJ,CAAA;AAlCG;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;kDACM;AAEzB;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;kDACM;AALR,iBAAiB;IADrC,OAAO;GACa,iBAAiB,CAqCrC;kBArCoB,iBAAiB","file":"","sourceRoot":"/","sourcesContent":["import UIView from \"../framework/ui/UIView\";\nimport { UtilMgr } from \"../global/UtilMgr\";\nimport { User } from \"../global/User\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class HintRechargePanel extends UIView {\n\n    @property(cc.Label)\n    lbl_god: cc.Label = null;\n    @property(cc.Label)\n    lbl_hit: cc.Label = null;\n\n    static getPrefabUrl() {\n        return \"MultiCurrency/prefabs/HintRechargePanel\"\n    }\n\n    show(args) {\n        let goldTypeExchange = args[0];\n        this.scheduleOnce(this.close, 3)\n        this.lbl_god.string = UtilMgr.changeMoney(User._gold)\n        this.lbl_hit.string = goldTypeExchange == 1 ? i18n.EXPERIENCE_FIELD.hintRecharge : i18n.EXPERIENCE_FIELD.hintChipCount;\n    }\n    playDefaultEffect(name = \"\") {\n        switch (name) {\n            case 'shop':\n            case 'addGold':\n                this.audioHelper.playEffect(\"common/audio/RechargeBtn\", BUNDLE_RESOURCES);\n                break;\n            default: super.playDefaultEffect(name)\n                break;\n        }\n    }\n    onClick(name) {\n        switch (name) {\n            case \"continue\":\n                break;\n            case \"addGold\":\n                dispatch(\"openRechargeView\");\n                break;\n        }\n        this.close();\n    }\n}\n"]}
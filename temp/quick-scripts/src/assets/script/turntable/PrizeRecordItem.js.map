{"version":3,"sources":["assets/script/turntable/PrizeRecordItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,4FAAoE;AACpE,uDAAoD;AACpD,uDAA6D;AAE7D,gEAAwC;AAExC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,eAAe,GAApC,MAAqB,eAAgB,SAAQ,0BAAgB;IAA7D;;QAKI,SAAI,GAAa,IAAI,CAAC;QAGtB,UAAK,GAAa,IAAI,CAAC;QAGvB,WAAM,GAAa,IAAI,CAAC;QAGxB,gBAAW,GAAY,IAAI,CAAC;IAkDhC,CAAC;IA/CG,UAAU,CAAC,IAAI,EAAE,MAAM;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC1D,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,QAAQ,IAAI,CAAC,MAAM,EAAE,EAAC,gEAAgE;YAClF,KAAK,CAAC;gBACF,MAAM,GAAG,GAAG,CAAC;gBACb,MAAM;YACV,KAAK,CAAC;gBACF,MAAM,GAAG,aAAa,CAAC;gBACvB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC/B,MAAM;YACV,KAAK,CAAC;gBACF,MAAM,GAAG,oBAAoB,CAAC;gBAC9B,MAAM;YACV,KAAK,CAAC;gBACF,MAAM,GAAG,UAAU,CAAC;gBACpB,MAAM;YACV;gBACI,MAAM;SACb;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IAChC,CAAC;IACD,OAAO,CAAC,KAAK;QACT,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QACnC,iBAAO,CAAC,WAAW,CAAC,UAAU,CAAC,oBAAoB,EAAE,0BAAgB,CAAC,CAAC;QACvE,QAAQ,UAAU,EAAE;YAChB,KAAK,aAAa;gBAAE,iBAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,qBAAW,EAAE,MAAM,EAAE,0BAAgB,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAAC,MAAM;YACpI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;SAC9D;IACL,CAAC;IACD;;OAEG;IACH,iBAAiB;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,gBAAgB;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IAC1B,CAAC;CAEJ,CAAA;AA3DG;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACG;AAGtB;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;8CACI;AAGvB;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;+CACK;AAGxB;IADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACU;AAdX,eAAe;IADnC,OAAO;GACa,eAAe,CAgEnC;kBAhEoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["import ScroViewBaseItem from \"../common/component/ScroViewBaseItem\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { com } from \"../framework/external/protoc\";\nimport AddressView from \"./AddressView\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PrizeRecordItem extends ScroViewBaseItem {\n\n\n\n    @property(cc.Label)\n    time: cc.Label = null;\n\n    @property(cc.Label)\n    prize: cc.Label = null;\n\n    @property(cc.Label)\n    status: cc.Label = null;\n\n    @property(cc.Node)\n    btn_address: cc.Node = null;\n\n    private turntableRecord: com.bt.game.proto.hall.ITurntableRecord;\n    updateItem(data, itemId) {\n        this.time.string = new Date(data.time).format(\"yy/MM/dd\");\n        this.prize.string = data.prize;\n        let status = '';\n        this.btn_address.active = false;\n        this.turntableRecord = data;\n        switch (data.status) {//奖品状态(0=未中奖,1=未领取（not receive）,2=待发放（Waiting to Receive）,3=已领取)\n            case 0:\n                status = \"-\";\n                break;\n            case 1:\n                status = \"Not Receive\";\n                this.btn_address.active = true;\n                break;\n            case 2:\n                status = \"Waiting to Receive\";\n                break;\n            case 3:\n                status = \"Received\";\n                break;\n            default:\n                break;\n        }\n        this.status.string = status;\n    }\n    onClick(event) {\n        let buttonName = event.target.name;\n        Manager.globalAudio.playEffect(\"common/audio/click\", BUNDLE_RESOURCES);\n        switch (buttonName) {\n            case \"btn_address\": Manager.uiManager.open({ type: AddressView, bundle: BUNDLE_RESOURCES, args: [this.turntableRecord.id] }); break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n    }\n    /**\n     * 本Item进入ScrollView的时候回调\n     */\n    onEnterSrcollView() {\n        this.node.opacity = 255;\n    }\n\n    /**\n     * 本Item离开ScrollView的时候回调\n     */\n    onExitScrollView() {\n        this.node.opacity = 0;\n    }\n\n}\n"]}
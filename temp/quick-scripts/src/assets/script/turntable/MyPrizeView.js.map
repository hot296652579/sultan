{"version":3,"sources":["assets/script/turntable/MyPrizeView.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA,oFAA4D;AAC5D,kEAAuD;AACvD,+DAAuE;AACvE,6DAA0D;AAG1D,kEAA2E;AAE3E,oEAA4C;AAC5C,oEAA4C;AAE5C,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAI5C,IAAqB,WAAW,GAAhC,MAAqB,WAAY,SAAQ,gBAAM;IAIpC,MAAM,CAAC,YAAY;QACtB,OAAO,8BAA8B,CAAC;IAC1C,CAAC;IACD,MAAM;QACF,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAED,KAAK;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI,CAAC,IAAI;QACL,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAGD,aAAa;QACT,KAAK,CAAC,aAAa,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,oBAAO,CAAC,0BAAU,CAAC,KAAK,EAAE,4BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACrH,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAEvE,CAAC;IAED,OAAO,CAAC,IAAI,EAAE,IAAI;QACd,QAAQ,IAAI,EAAE;YACV,KAAK,OAAO;gBAAE,IAAI,CAAC,eAAe,EAAE,CAAC;gBAAC,MAAM;YAC5C,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;SAC9D;IACL,CAAC;IAED,kBAAkB;QACd,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE9C,IAAI,GAAG,GAAG,4BAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAA,kBAAkB;QACtG,IAAI,MAAM,GAAG,4BAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,0BAAU,CAAC,KAAK,EACjC,4BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAC1C,MAAM,CAAC,CAAC;IAChB,CAAC;IAED,oBAAoB,CAAC,IAAI;QACrB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5B,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;gBAC9B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACvD;SACJ;aAAM;YACH,mBAAS,CAAC,OAAO,CAAC,mBAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;SAC5D;IAEL,CAAC;IACK,uBAAuB,CAAC,gBAAgB;;YAC1C,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAA;YACrD,eAAe,CAAC,QAAQ,GAAG,gBAAgB,CAAA;YAC3C,MAAM,eAAe,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;YAChE,mBAAS,CAAC,WAAW,EAAE,CAAA;QAC3B,CAAC;KAAA;IACD,SAAS;QACL,KAAK,CAAC,SAAS,EAAE,CAAC;IACtB,CAAC;CACJ,CAAA;AAlEoB,WAAW;IAF/B,OAAO;IACP,0BAAa,CAAC,2BAAY,CAAC,QAAQ,CAAC;GAChB,WAAW,CAkE/B;kBAlEoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["\nimport ScroViewCtrl from \"../common/component/ScroViewCtrl\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { serverType, protoPackage } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { Manager } from \"../framework/Framework\";\nimport UIView from \"../framework/ui/UIView\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class MyPrizeView extends UIView implements IController<LobbyService> {\n\n    service: LobbyService;\n    turnTableType: number;\n    public static getPrefabUrl() {\n        return \"turntable/prefab/MyPrizeView\";\n    }\n    onLoad() {\n        super.onLoad();\n        this.content = this.node.getChildByName('content');\n    }\n\n    start() {\n        this.reqTurntableRecord();\n    }\n\n    show(args) {\n        super.show(args);\n        this.showWithAction(true);\n        this.turnTableType = args && args[0] ? args[0] : 0;\n    }\n\n\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.Turntable_Record), this.onNetTurntableRecord);\n        this.registerEvent(\"UPDATE_PRIZE_RECORD\", this.reqTurntableRecord);\n\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case \"close\": this.closeWithAction(); break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n    }\n\n    reqTurntableRecord() {\n        G.Logger.log(\"请求record列表\",this.turnTableType);\n\n        let req = protoPackage.hall.TurntableRecordReq.create({ type: this.turnTableType });//转盘类型 1签到转盘 2充值转盘\n        let buffer = protoPackage.hall.TurntableRecordReq.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.Turntable_Record,\n            buffer);\n    }\n\n    onNetTurntableRecord(data) {\n        if (data.statusMsg.status == 0) {\n            if (data.turntableRecords.length) {\n                this.turntableRecordListView(data.turntableRecords);\n            }\n        } else {\n            PanelHelp.showTip(i18n.ERRORCODE[data.statusMsg.status]);\n        }\n\n    }\n    async turntableRecordListView(turntableRecords) {\n        let scroViewCtrlCom = this.getComponent(ScroViewCtrl)\n        scroViewCtrlCom.dataList = turntableRecords\n        await scroViewCtrlCom.framingLoad(turntableRecords.length, true)\n        PanelHelp.hideLoading()\n    }\n    onDestroy() {\n        super.onDestroy();\n    }\n}\n\n"]}
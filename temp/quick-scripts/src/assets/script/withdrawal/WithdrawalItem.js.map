{"version":3,"sources":["assets/script/withdrawal/WithdrawalItem.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,sDAAiD;AACjD,+CAA4C;AAE5C,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,cAAc,GAAnC,MAAqB,cAAe,SAAQ,EAAE,CAAC,SAAS;IAAxD;;QAGI,aAAQ,GAAa,IAAI,CAAA;QAGzB,YAAO,GAAa,IAAI,CAAA;QAGxB,gBAAW,GAAc,IAAI,CAAA;QAE7B,uBAAkB,GAAQ,IAAI,CAAA;QAE9B,YAAO,GAAW,CAAC,CAAA;QAEnB,cAAS,GAAW,IAAI,CAAA;QAqCxB,iBAAiB;IACrB,CAAC;IAnCG,MAAM;IACN,CAAC;IAED,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,iBAAiB;QAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAA;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAA;QAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAA;QACpC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACnE,4CAA4C;QAE5C,IAAI,SAAS,GAAG,mBAAO,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAA;QAC/D,IAAI,CAAC,SAAS,EAAE;YACZ,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,CAAA;YACxC,IAAI,MAAM,IAAI,CAAC,EAAE;gBACb,mBAAO,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAA;aACrD;SACJ;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,MAAM,IAAI,SAAS,CAAA;SACnD;IACL,CAAC;IAED,WAAW,CAAC,KAAK,EAAE,IAAI;QACnB,mBAAO,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QAC7D,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;SACxC;IACL,CAAC;IAED,oBAAoB,CAAC,KAAK,EAAE,IAAI;QAC5B,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACjE,CAAC;CAGJ,CAAA;AAlDG;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;gDACM;AAGzB;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;+CACK;AAGxB;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;mDACS;AATZ,cAAc;IADlC,OAAO;GACa,cAAc,CAqDlC;kBArDoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["import { Manager } from \"../framework/Framework\";\nimport { UtilMgr } from \"../global/UtilMgr\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class WithdrawalItem extends cc.Component {\n\n    @property(cc.Label)\n    bankName: cc.Label = null\n\n    @property(cc.Label)\n    account: cc.Label = null\n\n    @property(cc.Toggle)\n    checkToggle: cc.Toggle = null\n\n    _itemClickCallback: any = null\n\n    _itemId: number = 0\n\n    _changeId: number = null\n    _data: any;\n\n    onLoad() {\n    }\n\n    init(data, itemId, itemClickCallback) {\n        this._itemId = itemId\n        this._changeId = data.id\n        this._data = data\n        this._itemClickCallback = itemClickCallback\n        this.bankName.string = data.bankName\n        this.account.string = UtilMgr.setBankCardStringCover(data.bankCard)\n        //this.checkToggle.node.active = itemId == 0\n\n        let bankIndex = Manager.localStorage.getItem(\"selectBankIndex\")\n        if (!bankIndex) {\n            this.checkToggle.isChecked = itemId == 0\n            if (itemId == 0) {\n                Manager.localStorage.setItem(\"selectBankIndex\", 0)\n            }\n        } else {\n            this.checkToggle.isChecked = itemId == bankIndex\n        }\n    }\n\n    onItemClick(event, type) {\n        Manager.localStorage.setItem(\"selectBankIndex\", this._itemId)\n        if (this._itemClickCallback) {\n            this._itemClickCallback(this._itemId)\n        }\n    }\n\n    onClickChangeAccount(event, type) {\n        dispatch(\"openBindChangeWithdrawalAccount\", [2, this._data]);\n    }\n\n    // update (dt) {}\n}\n"]}
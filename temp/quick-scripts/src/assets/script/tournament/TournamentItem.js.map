{"version":3,"sources":["assets/script/tournament/TournamentItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ScroViewBaseItem from \"../common/component/ScroViewBaseItem\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { injectService } from \"../framework/decorator/Decorators\";\nimport { com } from \"../framework/external/protoc\";\nimport UIView from \"../framework/ui/UIView\";\nimport { User } from \"../global/User\";\nimport { UtilMgr } from \"../global/UtilMgr\";\nimport TournamentData from \"./TournamentData\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class TournamentItem extends UIView {\n    service: LobbyService;\n\n    @property(cc.Sprite)\n    head: cc.Sprite = null;\n\n    @property(cc.Label)\n    creatorName: cc.Label = null;\n\n    @property(cc.Label)\n    onlinePeople: cc.Label = null;\n\n    @property(cc.Label)\n    championReward: cc.Label = null;\n\n    @property(cc.Node)\n    needPassWordNode: cc.Node = null;\n\n    @property(cc.Node)\n    detailNode: cc.Node = null;\n\n    @property(cc.Node)\n    signUpNode: cc.Node = null;\n\n    @property(cc.Label)\n    startTime: cc.Label = null;\n\n    @property(cc.Node)\n    startTimeNode: cc.Node = null;\n\n    @property(cc.Sprite)\n    tournamentType: cc.Sprite = null;\n\n    @property(cc.SpriteFrame)\n    tSprte: cc.SpriteFrame[] = [];\n\n    public _data: com.bt.game.proto.hall.ITournamentP = null;\n    onLoad() {\n        this.signUpNode.active = false;\n        this.detailNode.active = false;\n    }\n\n    updateItem(data: com.bt.game.proto.hall.ITournamentP) {\n        this._data = data;\n        this.creatorName.string = UtilMgr.setString(data.nickname);\n        this.onlinePeople.string = data.signNum + \"/\" + data.totalNum;\n        this.championReward.string = UtilMgr.changeMoney(data.championReward);\n        UtilMgr.loadHeadImg(this.head, this._data.headImg, data.userId + \"\", this);\n        this.needPassWordNode.active = !!this._data.enterPassword;\n        this.startTime.string = new Date(+this._data.startTime).format(\"yyyy-MM-dd hh:mm:ss\");\n        if (data.userId == 0) {//创房ID = 0 官方赛\n            data.signStatus == 0 ? this.signUpNode.active = true : this.detailNode.active = true;\n            this.tournamentType.spriteFrame = this.tSprte[1];\n            this.startTimeNode.active= true;\n        } else {//自建赛 \n            if (data.userId == User._userID) {//我创建的\n                this.detailNode.active = true;\n                this.tournamentType.spriteFrame = this.tSprte[0];\n            } else {//别人创建的\n                data.signStatus == 0 ? this.signUpNode.active = true : this.detailNode.active = true;\n                this.tournamentType.spriteFrame = null;\n            }\n            this.startTimeNode.active= false;\n        }\n\n    }\n\n\n    onClick(event) {\n        let name = event.target.name;\n        Manager.globalAudio.playEffect(\"common/audio/click\", BUNDLE_RESOURCES);\n        switch (name) {\n            case \"detailBtn\":\n            case \"signupBtn\":\n                TournamentData.getInstance().signStatus = this._data.signStatus;\n                this.reqTournamentDetail();\n                break;\n            default:\n                break;\n        }\n    }\n\n    reqTournamentDetail() {\n        let jsonData = {\n            tournamentId: this._data.tournamentId,\n        }\n        let req = protoPackage.hall.TournamentDetailReq.create(jsonData);\n        let buffer = protoPackage.hall.TournamentDetailReq.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.CMD_TournamentDetail,\n            buffer);\n\n    }\n    /**\n       * 本Item进入ScrollView的时候回调\n       */\n    onEnterSrcollView() {\n        this.node.opacity = 255;\n    }\n\n    /**\n     * 本Item离开ScrollView的时候回调\n     */\n    onExitScrollView() {\n        this.node.opacity = 0;\n    }\n\n}\n"]}
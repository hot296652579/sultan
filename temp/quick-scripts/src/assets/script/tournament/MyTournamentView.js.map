{"version":3,"sources":["assets/script/tournament/MyTournamentView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ScroViewLogic from \"../common/component/ScroViewLogic\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { com } from \"../framework/external/protoc\";\nimport UIView from \"../framework/ui/UIView\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class MyTournamentView extends UIView implements IController<LobbyService> {\n\n    service: LobbyService;\n\n    @property(cc.Node)\n    myTournament:cc.Node = null;\n\n    @property(cc.Node)\n    myCreation:cc.Node = null;\n\n    public static getPrefabUrl() {\n        return \"tournament/prefabs/MyTournamentView\";\n    }\n    onLoad() {\n        super.onLoad();\n        this.content = this.node.getChildByName('content');\n    }\n\n    start() {\n     \n    }\n\n    show(args) {\n        super.show(args);\n        this.showWithAction(true,()=>{\n            this.reqMyTournament();\n        });\n   \n    }\n\n\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.CMD_MyTournament), this.onNetMyTournament);\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case \"close\":\n                this.closeWithAction();\n                break;\n            case \"myTournament\":\n                this.myTournament.color = new cc.Color().fromHEX('#FFFFFF');\n                this.myCreation.color = new cc.Color().fromHEX('#AE9F96');\n                this.reqMyTournament();\n                break;\n            case \"myCreation\":\n                this.myTournament.color = new cc.Color().fromHEX('#AE9F96');\n                this.myCreation.color = new cc.Color().fromHEX('#FFFFFF');\n                this.reqMyTournament(1);\n                break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n    }\n\n    reqMyTournament(tournamentType = 0) {\n        let jsonData = {\n            type: tournamentType,\n        }\n        let req = protoPackage.hall.MyTournamentReq.create(jsonData);\n        let buffer = protoPackage.hall.MyTournamentReq.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.CMD_MyTournament,\n            buffer);\n\n    }\n    onNetMyTournament(data: com.bt.game.proto.hall.ITournamentListRes) {\n        if (data.statusMsg.status == 0) {\n            this.getComponent(ScroViewLogic).initUI(data.tournaments);\n        } else {\n            PanelHelp.showTip(i18n.ERRORCODE[data.statusMsg.status]);\n        }\n\n    }\n    onDestroy() {\n        super.onDestroy();\n    }\n}\n"]}
{"version":3,"sources":["assets/script/tournament/NoticeTournamentView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { i18n } from \"../common/language/LanguageImpl\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService } from \"../framework/decorator/Decorators\";\nimport { com } from \"../framework/external/protoc\";\nimport UIView from \"../framework/ui/UIView\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport TournamentData from \"./TournamentData\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class NoticeTournamentView extends UIView implements IController<LobbyService> {\n\n    @property(cc.RichText)\n    noticeText: cc.RichText = null;\n\n    @property(cc.Node)\n    joinNode: cc.Node = null;\n\n    service: LobbyService;\n\n    private data: com.bt.game.proto.hall.INoticeTournamentStart;\n    timeInterval: any;\n    public static getPrefabUrl() {\n        return \"tournament/prefabs/NoticeTournamentView\";\n    }\n    onLoad() {\n        super.onLoad();\n\n    }\n\n    start() {\n        this.joinNode.active = Manager.uiManager.isInHall() && !Manager.uiManager.isInGame();\n        this.updateView();\n    }\n\n    show(args) {\n        super.show(args);\n        if (args && args[0]) {\n            this.data = args[0];\n        }\n    }\n\n\n    bindingEvents() {\n        super.bindingEvents();\n\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case \"joinBtn\":\n                if (this.timeInterval) {\n                    clearInterval(this.timeInterval)\n                    this.timeInterval = null;\n                }\n                this.close();\n                PanelHelp.showLoading(i18n.Waiting.EnterGame)\n                TournamentData.getInstance().isTournamentGame = true;\n                TournamentData.getInstance().tournamentID = this.data.tournamentId;\n                TournamentData.getInstance().toServerId = this.data.serverId;\n                TournamentData.getInstance().serverType = this.data.serverType;\n                dispatch(\"JoinTournament\", { serviceType: this.data.serverType, toServerId: this.data.serverId });\n                break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n    }\n\n    updateView() {\n        let t = this.data.gameStartCountDown;\n        TournamentData.getInstance().isCountDownDate = new  Date().getTime() + t * 1000;\n        this.noticeText.string = Manager.getLanguage([\"Tournament.NoticeTournamentText\", t]);\n        this.timeInterval = setInterval(() => {\n            t--;\n            this.noticeText.string = Manager.getLanguage([\"Tournament.NoticeTournamentText\", t]);\n            if (t <= 0) {\n                clearInterval(this.timeInterval)\n                this.close();\n            }\n        }, 1000);\n    }\n\n    onDestroy() {\n        super.onDestroy();\n        if (this.timeInterval) {\n            clearInterval(this.timeInterval)\n            this.timeInterval = null;\n        }\n    }\n}\n"]}
{"version":3,"sources":["assets/script/tournament/TournamentRoomView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ScroViewCtrl from \"../common/component/ScroViewCtrl\";\nimport { Config } from \"../common/config/Config\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { serverType, protoPackage } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { com } from \"../framework/external/protoc\";\nimport { Manager } from \"../framework/Framework\";\nimport UIView from \"../framework/ui/UIView\";\nimport { User } from \"../global/User\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport CreateTournamentView from \"./CreateTournamentView\";\nimport MyTournamentView from \"./MyTournamentView\";\nimport TournamentData from \"./TournamentData\";\nimport TournamentDetailView from \"./TournamentDetailView\";\nimport TournamentEndDetailView from \"./TournamentEndDetailView \";\nimport TournamentItem from \"./TournamentItem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class TournamentRoomView extends UIView implements IController<LobbyService> {\n\n    service: LobbyService;\n\n    @property(cc.EditBox)\n    gameEditBox: cc.EditBox = null;\n\n    @property(cc.Label)\n    lb_myTournamentTip: cc.Label = null;\n\n    @property(cc.Label)\n    lb_myTournamentStep: cc.Label = null;\n\n    @property(cc.Label)\n    lb_createTournamentTip: cc.Label = null;\n\n    private tournamentList: com.bt.game.proto.hall.ITournamentP[] = null;\n    private searchId: number = null;\n    public static getPrefabUrl() {\n        return \"tournament/prefabs/TournamentRoomView\";\n    }\n    onLoad() {\n        super.onLoad();\n\n    }\n\n    start() {\n\n    }\n\n    show(args) {\n        super.show(args);\n        this.reqTournamentList();\n    }\n\n\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.CMD_TournamentList), this.onNetTournamentList);\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.CMD_TournamentDetail), this.onNetTournamentDetailRes);\n        this.registerEvent(\"UpdateTournamentList\", this.reqTournamentList);\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case 'btnBack':\n                // dispatch(LogicEvent.ENTER_HALL);\n                this.close();\n                break;\n            case \"createToutnamentBtn\":\n                Manager.uiManager.open({ type: CreateTournamentView, bundle: BUNDLE_RESOURCES });\n                break;\n            case \"myTournamentBtn\":\n                Manager.uiManager.open({ type: MyTournamentView, bundle: BUNDLE_RESOURCES });\n                break;\n            case \"searchTournamentBtn\":\n                let searchTournamentId = this.gameEditBox.string;\n                if(searchTournamentId.length == 0){\n                    this.reqTournamentList();\n                    return;\n                }\n                let tournamentItemData = this.tournamentList.find(item => { return item.tournamentId == +searchTournamentId });\n                if (tournamentItemData) {\n                    this.getComponent(ScroViewCtrl).scroViewPlus.content.removeAllChildren();\n                    this.tournamentListView([tournamentItemData]);\n                }else{\n                    PanelHelp.showTip(i18n.Tournament.NotTournament);\n                }\n                this.searchId = tournamentItemData ? tournamentItemData.tournamentId : null;\n                break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n    }\n\n    reqTournamentList() {\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.CMD_TournamentList,\n            null);\n    }\n\n    onNetTournamentList(data: com.bt.game.proto.hall.ITournamentListRes) {\n        if (data.statusMsg.status == 0) {\n            this.tournamentList = data.tournaments;\n            this.tournamentListView(this.tournamentList);\n            this.updateSelfTournament();\n        } else {\n            PanelHelp.showTip(i18n.ERRORCODE[data.statusMsg.status]);\n        }\n        PanelHelp.hideLoading();\n    }\n\n    async tournamentListView(tournamentList: com.bt.game.proto.hall.ITournamentP[]) {\n        if (this.searchId && TournamentData.getInstance().flushItmeID && this.searchId == TournamentData.getInstance().flushItmeID) {\n            let index = tournamentList.findIndex(item => { return item.tournamentId == TournamentData.getInstance().flushItmeID });\n            if (index != -1) tournamentList = tournamentList.splice(index, 1);\n            TournamentData.getInstance().flushItmeID = null;\n        }\n\n        let scroViewCtrlCom = this.getComponent(ScroViewCtrl)\n        scroViewCtrlCom.dataList = tournamentList\n        await scroViewCtrlCom.framingLoad(tournamentList.length)\n        PanelHelp.hideLoading()\n    }\n\n    updateSelfTournament() {\n        //my tournament  找到自己报名的比赛\n        let mytournament = this.tournamentList.find(t => { return t.signStatus == 1 });\n        if (mytournament) {\n            this.lb_myTournamentTip.string = \"Rummy tournamenth created by \" + mytournament.nickname;\n            this.lb_myTournamentStep.string = mytournament.tournamentStatus == 0 ? \"About to start\" : \"\";\n        } else {\n            this.lb_myTournamentTip.string = \"You are not participating in the tournament\";\n            this.lb_myTournamentStep.node.active = false;\n        }\n\n        //create tournament 找到自己创建的比赛\n        let selfId = User._userID;\n        let myCreateTournament = this.tournamentList.find(t => { return t.userId == selfId });\n        if (myCreateTournament) {\n            this.lb_createTournamentTip.string = \"You created a Rummy tournament \" + Config.games[myCreateTournament.gameId].disName;\n        } else {\n            this.lb_createTournamentTip.string = \"You have not created a tournament\";\n        }\n\n    }\n    onNetTournamentDetailRes(data: com.bt.game.proto.hall.ITournamentDetailRes) {\n        if (data.statusMsg.status == 0) {\n            if (TournamentData.getInstance().tournamentStatus == 3) {\n                Manager.uiManager.open({ type: TournamentEndDetailView, bundle: BUNDLE_RESOURCES, args: [data] });\n            } else {\n                Manager.uiManager.open({ type: TournamentDetailView, bundle: BUNDLE_RESOURCES, args: [data] });\n            }\n            TournamentData.getInstance().tournamentStatus = null;\n        } else {\n            PanelHelp.showTip(i18n.ERRORCODE[data.statusMsg.status]);\n        }\n    }\n\n    onDestroy() {\n        super.onDestroy();\n    }\n}\n\n"]}
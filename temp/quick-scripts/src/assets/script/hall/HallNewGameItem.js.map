{"version":3,"sources":["assets/script/hall/HallNewGameItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { gameManager } from \"../common/manager/GameManager\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { GameConfig, HotUpdate } from \"../common/base/HotUpdate\";\nimport { BUNDLE_RESOURCES, ENABLE_CHANGE_LANGUAGE, ResourceCacheStatus } from \"../framework/base/Defines\";\nimport UIView from \"../framework/ui/UIView\";\nimport { Config } from \"../common/config/Config\";\nimport { HallEvent } from \"./HallEvent\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { UtilMgr } from \"../global/UtilMgr\";\nimport { reStartGame } from \"../global/Global\";\nimport { MST } from \"../framework/external/protoc\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class HallNewGameItem extends UIView {\n    service: LobbyService;\n\n    @property(cc.Sprite)\n    icon: cc.Sprite = null;\n\n    @property(cc.Sprite)\n    gameIcon: cc.Sprite = null;\n\n    @property(sp.Skeleton)\n    gameSpine: sp.Skeleton = null;\n\n    @property(cc.Label)\n    gameLabel: cc.Label = null;\n\n    @property(cc.Sprite)\n    picName: cc.Sprite = null;\n\n    @property(cc.Node)\n    install: cc.Node = null;\n    @property(cc.Node)\n    newVersion: cc.Node = null;\n    @property(cc.Node)\n    loading: cc.Node = null;\n    @property(cc.Node)\n    iconWait: cc.Node = null;\n\n    _itemId = 0;\n\n    // _sortId = 0\n\n    _gameInfo = null;\n\n    _path = \"hall/images/dt_game_icon_\";\n    _pathEN = \"hall/images/dt_game_name_\";\n    _pathHI = \"languageRes/hindi/hall/dt_game_name_\";\n\n    _language: string = '';\n    onLoad() {\n        super.onLoad()\n        cc.tween(this.iconWait)\n            .repeatForever(cc.tween().by(0.3, { angle: 30 })\n                .delay(0.01))\n            .start()\n        this.loading.active = false\n        this._language = Manager.language.getLanguage();\n    }\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(HallEvent.DOWNLOAD_PROGRESS, this.onDownloadProgess);\n        this.registerEvent(\"onCheckUpdateGameStart\", this.onCheckUpdateGameStart);\n        this.registerEvent(\"onCheckUpdateGameEnd\", this.onCheckUpdateGameEnd);\n        this.registerEvent('M2C_TransferMap_Res', this.M2C_TransferMap_Res);\n        if (ENABLE_CHANGE_LANGUAGE) {\n            // this.registerEvent(EventApi.CHANGE_LANGUAGE, this.onLanguageChange);\n        }\n    }\n    private onCheckUpdateGameStart(gameName) {\n        let games = Config.games\n        if (this._gameInfo) {\n            let configGName = this._gameInfo\n            let game = games[configGName]\n            if (game) {\n                if (game.name && game.name == gameName) {\n                    this.loading.active = true\n                }\n            }\n        }\n    }\n    private onCheckUpdateGameEnd(gameName) {\n        let games = Config.games\n        if (this._gameInfo) {\n            let configGName = this._gameInfo\n            let game = games[configGName]\n            if (game) {\n                if (game.name && game.name == gameName) {\n                    this.loading.active = false\n                }\n            }\n        }\n    }\n    private onDownloadProgess(data: { progress: number, config: GameConfig }) {\n        G.Logger.log(\"onDownloadProgess == \", data.progress);\n        if (this._gameInfo && data.config.gameName == Config.games[this._gameInfo].name) {\n            let progressBar: cc.ProgressBar = cc.find(`Background/progressBar`, this.node).getComponent(cc.ProgressBar);\n            let progressLabel: cc.Label = cc.find(`Background/progressBar/progress`, this.node).getComponent(cc.Label);\n            if (data.progress == -1) {\n                progressBar.node.active = false;\n                PanelHelp.showTip(i18n.TIPS.DOWNLOADFAILED)\n            } else if (data.progress <= 1) {\n                progressBar.node.active = true;\n                if (data.progress > progressBar.progress) {\n                    progressBar.progress = data.progress;\n                    progressLabel.string = \"\" + Math.floor(data.progress * 100) + \"%\";\n                }\n\n            } else {\n                progressBar.node.active = false;\n                if (this.install) this.install.active = false\n                if (this.newVersion) this.newVersion.active = false\n                PanelHelp.showTip(i18n.TIPS.DOWNLOADSUCCEED)\n\n            }\n        }\n    }\n    onLanguageChange(language) {\n        this._language = language;\n        // this.updateItem(this._gameInfo, this._itemId);\n    }\n    updateItem(data, itemId) {\n        cc.log(data, \"HallNewGameItem\")\n        this._gameInfo = data\n        // this._sortId = data.showSort\n        this._itemId = itemId;\n        if (this.install) this.install.active = false\n        if (this.newVersion) this.newVersion.active = false\n        let gameConfig = Config.games[data]\n        if (CC_JSB) {\n            if (gameConfig) {\n                let install = UtilMgr.checkGameInstall(gameConfig.subName)\n                if (this.install) this.install.active = !install\n                G.Logger.log(\"==install==\", install);\n\n                if (install) {\n                    let version = UtilMgr.getGameManifestVersion(gameConfig.subName)\n                    if (version) {\n                        G.Logger.log(\"==version==\", version);\n                        if (this._gameInfo.gameVersionCode && this._gameInfo.gameVersionCode > version) {\n                            if (this.newVersion) this.newVersion.active = true\n                        }\n                    } else {\n                        if (this.newVersion) this.newVersion.active = true\n                    }\n                }\n\n                // this.refreshGameIcon()\n                this.refreshGameSpine()\n            }\n        }\n\n        // this.refreshGameIcon()\n        this.refreshGameSpine()\n    }\n\n    refreshGameIcon() {\n        let games = Config.games\n        let _gameName = games[this._gameInfo].name\n        this.icon.loadImage({ url: `hall/images/domino/btn_${_gameName}`, view: this, bundle: BUNDLE_RESOURCES })\n        this.gameIcon.loadImage({ url: `hall/images/domino/icon_${_gameName}`, view: this, bundle: BUNDLE_RESOURCES })\n        this.gameLabel.string = _gameName\n    }\n\n    refreshGameSpine() {\n        let self = this\n        let games = Config.games\n        let _gameName = games[this._gameInfo].subName\n        this.gameSpine.loadSkeleton({\n            url: `hall/anim/btnEff/${_gameName}/${_gameName}`, view: this, bundle: BUNDLE_RESOURCES, completeCallback: (data) => {\n                if (data) {\n                    self.gameSpine.animation = \"animation\";\n                    self.gameSpine.loop = true;\n                    self.gameSpine.premultipliedAlpha = false;\n                }\n            }\n        });\n    }\n\n    onBtnClick(event, type) {\n        this.jumpToGame()\n    }\n\n    jumpToGame() {\n        let req = MST.C2M_TransferMap_Req.create({\n            RpcId: Manager.netManager.getNewSeqId(),\n            RoomName: this._gameInfo\n        })\n        let buffer = MST.C2M_TransferMap_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2M_TransferMap_Req, MST.OuterOpcode_Map.C2M_TransferMap_Req, buffer);\n\n        this.audioHelper.playEffect(\"common/audio/click\", BUNDLE_RESOURCES);\n    }\n\n    M2C_TransferMap_Res(data: MST.M2C_TransferMap_Res) {\n        if (data && data.RoomName) {\n            this._gameInfo = data.RoomName;\n            let version = UtilMgr.getGameManifestVersion(Config.games[this._gameInfo].subName)\n            G.Logger.log(\"JoinGame\", version)\n            if (version) {//游戏已包含\n                if (this._gameInfo.gameVersionCode && parseInt(this._gameInfo.gameVersionCode) > parseInt(version)) {//有新版本\n                    let versionInfo = HotUpdate.allGameConfig[Config.games[this._gameInfo].subName];\n                    if (versionInfo && versionInfo.isLoaded) {//游戏加载过\n                        PanelHelp.showDialog(\"\", i18n.TIPS.GAMENEWVERSION, () => {\n                            reStartGame()\n                        }, () => {\n                            this.enterGame()\n                        })\n                    } else {\n                        this.enterGame()\n                    }\n                } else {//不更新\n                    G.Logger.log(\"跳过更新\")\n                    this.enterGame(true)//跳过更新\n\n                }\n            } else {\n                this.enterGame()\n            }\n        }\n    }\n\n    /**\n     * \n     * @param noUpdate 是否跳过更新\n     */\n    private enterGame(noUpdate?) {\n        // PanelHelp.showLoading(i18n.WAIT.LOADING)\n        let config = new GameConfig(Config.games[this._gameInfo].name, Config.games[this._gameInfo].subName, this._itemId);\n        if (noUpdate) {\n            gameManager().enterGameNoUpdate(config);\n        } else {\n            gameManager().enterGame(config);\n        }\n\n    }\n\n    /**\n     * 本Item进入ScrollView的时候回调\n     */\n    onEnterSrcollView() {\n        this.node.opacity = 255;\n    }\n\n    /**\n     * 本Item离开ScrollView的时候回调\n     */\n    onExitScrollView() {\n        this.node.opacity = 0;\n    }\n}\n"]}
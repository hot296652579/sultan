{"version":3,"sources":["assets/games/roulette/script/view/RouletteView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport { LobbyService } from \"../../../../script/common/net/LobbyService\";\nimport { dispatchEnterComplete, LogicEvent, LogicType } from \"../../../../script/common/event/LogicEvent\";\nimport UIView from \"../../../../script/framework/ui/UIView\";\nimport AppData from \"../../../../script/data/AppData\";\nimport UserData from \"../../../../script/data/UserData\";\nimport { injectService } from \"../../../../script/framework/decorator/Decorators\";\nimport { IController } from \"../../../../script/framework/controller/Controller\";\nimport { MST } from \"../../../../script/framework/external/protoc\";\nimport { Manager } from \"../../../../script/common/manager/Manager\";\nimport { Config } from \"../../../../script/common/config/Config\";\nimport PanelHelp from \"../../../../script/msgbox/PanelHelp\";\nimport { BUNDLE_RESOURCES, ENABLE_CHANGE_LANGUAGE } from \"../../../../script/framework/base/Defines\";\nimport { EventApi } from \"../../../../script/framework/event/EventApi\";\nimport RouletteRecordItem from \"./RouletteRecordItem\";\nimport RouletteData from \"../data/RouletteData\";\nimport DateUtils from \"../../../../script/framework/extentions/DateUtils\";\nimport Operation from \"../../../../script/framework/extentions/Operation\";\nimport { RouletteConfig } from \"../config/RouletteConfig\";\nimport TitleItemPageUser from \"../../../../script/common/item/TitleItemPageUser\";\nimport { RouletteColorDefine } from \"../define/RouletteColorDefine\";\nimport NumberUtils from \"../../../../script/common/utils/NumberUtils\";\nimport RouletteMyRecordItem from \"./RouletteMyRecordItem\";\nimport RouletteBigWinItem from \"./RouletteBigWinItem\";\nimport RouletteTotalRecordView from \"./RouletteTotalRecordView\";\nimport RouletteMyBetRecordView from \"./RouletteMyBetRecordView\";\nimport { Roulette } from \"../data/RouletteGameData\";\nimport LoginNewView from \"../../../../script/login/LoginNewView\";\n\nconst { ccclass, property } = cc._decorator;\n// 最小下注金额\nconst MIN_BET_GOLD: number = 2000;\n// 最大下注金额\nconst MAX_BET_GOLD: number = 3300000;\n@ccclass\n@injectService(LobbyService.instance)\nexport default class RouletteView extends UIView implements IController<LobbyService> {\n    service: LobbyService;\n\n    // 应用数据\n    private _appData: AppData = null;\n    // 用户数据\n    private _userData: UserData = null;\n    // 游戏数据\n    private _rouletteData: RouletteData = null;\n\n    @property(cc.Prefab)\n    groupNode: cc.Prefab = null;\n\n    @property(TitleItemPageUser)\n    private titleItemPageUser: TitleItemPageUser = null;\n\n    @property(cc.Node)\n    groupParent: cc.Node = null;\n\n    @property(cc.Node)\n    gemstoneSpine: cc.Node = null;\n    @property(cc.Label)\n    endNumLabel: cc.Label = null;\n\n    @property(cc.Node)\n    upPointer: cc.Node = null;\n    @property(cc.Node)\n    downPointer: cc.Node = null;\n    @property(cc.Label)\n    labStartCountDown: cc.Label = null;\n    @property(cc.EditBox)\n    private edbBetGold: cc.EditBox = null;\n\n    @property(cc.Layout)\n    private latRecord: cc.Layout = null;\n\n    @property(cc.Label)\n    private labCurRound: cc.Label = null;\n    @property(cc.Label)\n    private labBigWin: cc.Label = null;\n    @property(cc.Toggle)\n    private tggCurRound: cc.Toggle = null;\n    @property(cc.Toggle)\n    private tggBigWin: cc.Toggle = null;\n    @property(cc.Node)\n    private nodCurRoundList: cc.Node = null;\n    @property(cc.Node)\n    private nodBigWinList: cc.Node = null;\n\n    @property(cc.Node)\n    private latManual: cc.Node = null;\n    @property(cc.Node)\n    private lsvBetPlayer: cc.Node = null;\n    @property(cc.Node)\n    private nodVerify: cc.Node = null;\n\n    @property(cc.Label)\n    labMyRecord: cc.Label = null;\n    @property(cc.Label)\n    labHistoryTitle: cc.Label = null;\n    @property(cc.Label)\n    labWorldRecord: cc.Label = null;\n    @property(cc.Label)\n    labFairGame: cc.Label = null;\n    @property(cc.Label)\n    labCopyCheck: cc.Label = null;\n\n    maxNum: number = 2;\n    minNum: number = 0;\n    //播放时间\n    time = 0;\n    //播放总时间\n    totalTime = 0;\n    // label 行宽\n    lineWidth = 0;\n    // label 总宽度\n    totalWidth = 0;\n    rolling = false;\n    numArray = [];\n    curNum: number = 0;\n    rollRound: number = 2;\n    groupMax: number = 9;\n    /**一个宝石的宽度*/\n    itemWidth: number = 112;\n    dialTime: number = 6;\n    /**一个Item总个数29*/\n    itemTotal: number = 29;\n    groupWidth: number = 0;\n    endNum: number = 0;\n\n    public static getPrefabUrl() {\n        return \"prefabs/RouletteView\";\n    }\n\n    onLoad() {\n        super.onLoad();\n        dispatchEnterComplete({ type: LogicType.GAME, views: [this] });\n\n        this.initData();\n        this.initView();\n        this.refreshDefaultByPos();\n        this.playPointerByNum();\n\n        this.startCountDown();\n        this.audioHelper.playMusic(Roulette.SOUNDS.BGM, this.bundle);\n    }\n\n\n    bindingEvents() {\n        super.bindingEvents();\n\n        if (ENABLE_CHANGE_LANGUAGE) {\n            this.registerEvent(EventApi.CHANGE_LANGUAGE, this.onLanguageChange);\n        }\n        this.registerEvent(\"Event_M2C_TransferMap_Res\", this.onEvent_M2C_TransferMap_Res);\n        this.registerEvent(\"Event_M2C_GetRouletteInfo_Res\", this.onEvent_M2C_GetRouletteInfo_Res);\n        this.registerEvent(\"Event_M2C_RouletteStartBet_Mes\", this.onEvent_M2C_RouletteStartBet_Mes);\n        this.registerEvent(\"Event_M2C_RouletteStart_mes\", this.onEvent_M2C_RouletteStart_mes);\n        this.registerEvent(\"Event_R2C_PaybackPhase_Mes\", this.onEvent_R2C_PaybackPhase_Mes);\n        this.registerEvent(\"Event_R2C_Bet_Mes\", this.onEvent_R2C_Bet_Mes);\n        this.registerEvent(\"Event_R2C_GetBetRandInfo_Res\", this.onEvent_R2C_GetBetRandInfo_Res);\n    }\n\n    show(args) {\n        super.show(args);\n        this.onLanguageChange();\n        this.requestGetRouletteInfo();\n    }\n\n    requestGetRouletteInfo() {\n        let req = MST.C2M_GetRouletteInfo_Req.create({\n            RpcId: Manager.netManager.getNewSeqId()\n        })\n        let buffer = MST.C2M_GetRouletteInfo_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2M_GetRouletteInfo_Req, MST.OuterOpcode_Roulette.C2M_GetRouletteInfo_Req, buffer);\n    }\n\n    onLanguageChange() {\n        this.titleItemPageUser.languagePageName(Manager.makeLanguage(\"labPageName\", true));\n        this.labCurRound.language = Manager.makeLanguage(\"labCurRound\", true);\n        this.labBigWin.language = Manager.makeLanguage(\"labBigWin\", true);\n        this.labHistoryTitle.language = Manager.makeLanguage(\"history\", true);\n        this.labMyRecord.language = Manager.makeLanguage(\"myHistory\", true);\n        this.labWorldRecord.language = Manager.makeLanguage(\"worldHistory\", true);\n        this.labFairGame.language = Manager.makeLanguage(\"fairGame\", true);\n        this.labCopyCheck.language = Manager.makeLanguage(\"labCopyCheck\", true);\n    }\n\n    private initData(): void {\n        this._appData = G.DataMgr.get(AppData);\n        this._userData = G.DataMgr.get(UserData);\n        this._rouletteData = G.DataMgr.get(RouletteData);\n\n        this.groupWidth = this.itemTotal * this.itemWidth;\n    }\n\n    private initView(): void {\n\n    }\n\n    refreshDefaultByPos() {\n        this.groupParent.removeAllChildren()\n        this.groupParent.setPosition(0, 0);\n        for (let index = 0; index < this.groupMax; index++) {\n            let groupPre = cc.instantiate(this.groupNode);\n            groupPre.name = 'groupPre' + index;\n            this.groupParent.addChild(groupPre);\n        }\n\n        this.groupParent.getComponent(cc.Layout).updateLayout();\n\n        let curNum = this.curNum\n        let diffX = 0;\n        switch (curNum) {\n            case 0:\n                diffX = this.itemWidth * 6;\n                break;\n            case 1:\n                diffX = this.itemWidth * 5 - (this.itemWidth * 0.5) + 10;\n                break;\n            case 2:\n                diffX = 25;\n                break;\n        }\n        this.groupParent.x += diffX;\n    }\n\n    onEvent_M2C_RouletteStart_mes() {\n        let self = this;\n        let rouletteData = G.DataMgr.get(RouletteData);\n\n        this.dialTime = (rouletteData.StopTimeStamp - this._appData.getServerTimestamp()) / 1000;\n        this.endNum = rouletteData.endIndex;\n        console.log('--------滚动时间------->:' + this.dialTime);\n        //自己查看结果\n        let color = ['purpler', 'red', 'green']\n        this.endNumLabel.string = `结果颜色:${color[this.endNum]}`;\n        this.gemstoneSpine.active = false;\n\n        let diffX = this.getDiffX();\n        let s = this.rollRound * this.groupWidth + diffX;\n        cc.tween(this.groupParent)\n            .by(this.dialTime, {\n                position: cc.v2(-s, 0)\n            }, cc.easeInOut(2))\n            .call(function () {\n                self.rolling = false;\n                self.curNum = self.endNum;\n                self.refreshDefaultByPos();\n                self.playPointerByNum();\n                self.playGemstoneSpine();\n                self.hideCurItem();\n                self.audioHelper.playEffect(Roulette.SOUNDS.RESULT, self.bundle);\n            })\n            .start();\n        this.rolling = true;\n        this.showCurItem();\n        this.loopPointerSpine();\n        this.resumeRate();\n        this.audioHelper.playEffect(Roulette.SOUNDS.RUN, this.bundle);\n    }\n\n    getDiffX() {\n        let self = this;\n        let midCount = this.itemTotal / 2 + 0.5;\n        let spacingX = 50;\n        let distance = ((midCount - 1) - 2) * this.itemWidth;\n        let gap = 0;\n\n        if (this.curNum == 0) {\n            switch (this.endNum) {\n                case 0:\n                    gap = distance + 2 * this.itemWidth + 35;  //--item10\n                    break;\n                case 1:\n                    gap = distance - (3 * this.itemWidth) - spacingX - 5; //--item11\n                    break;\n                case 2:\n                    gap = distance + 20 * this.itemWidth - 35;  //-- item14\n                    break;\n            }\n        } else if (this.curNum == 1) {\n            switch (this.endNum) {\n                case 0:\n                    gap = distance + this.itemWidth - 10;\n                    break;\n                case 1:\n                    gap = distance - (5 * this.itemWidth) + 15;\n                    break;\n                case 2:\n                    gap = distance + 18 * this.itemWidth + 30;\n                    break;\n            }\n        } else {\n            switch (this.endNum) {\n                case 0:\n                    gap = distance + (2 * this.itemWidth) + 35;\n                    break;\n                case 1:\n                    gap = distance + this.itemWidth - 15;\n                    break;\n                case 2:\n                    gap = distance + 14 * this.itemWidth - 10;\n                    break;\n            }\n        }\n        return gap;\n    }\n\n    hideCurItem() {\n        let hideIndex;\n        switch (this.endNum) {\n            case 0:\n                hideIndex = 10;\n                break;\n            case 1:\n                hideIndex = 11;\n                break;\n            case 2:\n                hideIndex = 14;\n                break;\n        }\n        for (let index = 0; index < this.groupMax; index++) {\n            let gemStoneItem = this.groupParent.getChildByName('groupPre' + index);\n            gemStoneItem.getChildByName(`item${hideIndex}`).active = false;\n        }\n    }\n\n    showCurItem() {\n        for (let index = 0; index < this.groupMax; index++) {\n            let gemStoneItem = this.groupParent.getChildByName('groupPre' + index);\n            gemStoneItem.getChildByName(`item10`).active = true;\n            gemStoneItem.getChildByName(`item11`).active = true;\n            gemStoneItem.getChildByName(`item14`).active = true;\n        }\n    }\n\n    playGemstoneSpine() {\n        let color = ['zi', 'hong', 'lu']\n        this.gemstoneSpine.active = true;\n        let node = this.gemstoneSpine.getChildByName('spine');\n        let ske = node.getComponent(sp.Skeleton);\n        ske.setAnimation(0, `${color[this.endNum]}`, false);\n    }\n\n    loopPointerSpine() {\n        let upSke = this.upPointer.getComponent(sp.Skeleton);\n        upSke.setAnimation(0, 'animation', true);\n        let downSke = this.downPointer.getComponent(sp.Skeleton);\n        downSke.setAnimation(0, 'animation', true);\n    }\n\n    playPointerByNum() {\n        let color = ['zi', 'hong', 'lu']\n        let upSke = this.upPointer.getComponent(sp.Skeleton);\n        upSke.setAnimation(0, `${color[this.endNum]}`, true);\n        let downSke = this.downPointer.getComponent(sp.Skeleton);\n        downSke.setAnimation(0, `${color[this.endNum]}`, true);\n    }\n\n    onClick(ButtonName: any, btnNode: any) {\n        switch (ButtonName) {\n            case 'testChou':\n                if (this.rolling) return;\n                let num = Math.floor(Math.random() * ((this.maxNum + 1) - this.minNum)) + this.minNum;\n                this.endNum = num;\n\n                let color = ['purpler', 'red', 'green']\n                this.endNumLabel.string = `结果颜色:${color[this.endNum]}`;\n                // this.onEvent_M2C_RouletteStart_mes();\n                break;\n            case \"btnClose\":\n                this.reqEnterLobby();\n                break;\n            case \"btnBet0\":\n                if (this.checkLogined())\n                    this.addBetGold(RouletteConfig.BetGoldButton[0], this.edbBetGold);\n                break;\n            case \"btnBet1\":\n                if (this.checkLogined())\n                    this.addBetGold(RouletteConfig.BetGoldButton[1], this.edbBetGold);\n                break;\n            case \"btnBet2\":\n                if (this.checkLogined())\n                    this.addBetGold(RouletteConfig.BetGoldButton[2], this.edbBetGold);\n                break;\n            case \"btnBet3\":\n                if (this.checkLogined())\n                    this.mulBetGold(RouletteConfig.BetGoldButton[3], this.edbBetGold);\n                break;\n            case \"btnBet4\":\n                if (this.checkLogined())\n                    this.mulBetGold(RouletteConfig.BetGoldButton[4], this.edbBetGold);\n                break;\n            case \"tggCurRound\":\n                this.clickMyRecord();\n                break;\n            case \"tggBigWin\":\n                this.clickWordRecord()\n                break;\n\n            case \"btnPurple\":\n                if (this.checkLogined())\n                    this.onC2M_MyRouletteBet_Req(0)\n                break;\n            case \"btnGreen\":\n                if (this.checkLogined())\n                    this.onC2M_MyRouletteBet_Req(2)\n                break;\n            case \"btnRed\":\n                if (this.checkLogined())\n                    this.onC2M_MyRouletteBet_Req(1)\n                break;\n            case \"btnWorldRecord\":\n                Manager.uiManager.open({ type: RouletteTotalRecordView, bundle: this.bundle })\n                break;\n            case \"btnMyRecord\":\n                Manager.uiManager.open({ type: RouletteMyBetRecordView, bundle: this.bundle })\n                break;\n            case \"btnCopyNo\":\n                let labRoundHash = this.nodVerify.getChildByName('roundHashNode').getChildByName('labRoundHash').getComponent(cc.Label);\n                window['platformUtil'].copyToClip(labRoundHash.string);\n                break;\n            default:\n                break;\n        }\n    }\n\n    checkLogined() {\n        if (!this._userData.id) {\n            PanelHelp.showTip(Manager.makeLanguage(\"toLogin\", true));\n            Manager.uiManager.open({ type: LoginNewView, bundle: BUNDLE_RESOURCES });\n            return false;\n        }\n        return true;\n    }\n\n    private getEditboxBetGold(edbBetGold: cc.EditBox): number {\n        let content: string = edbBetGold.string;\n        let numBetGold: number = 0;\n        if (content.length > 0) {\n            numBetGold = Number(content);\n        }\n        return numBetGold;\n    }\n\n    onC2M_MyRouletteBet_Req(BetIndex) {\n        let betGold: number = this.getEditboxBetGold(this.edbBetGold);\n        if (betGold < MIN_BET_GOLD || betGold > MAX_BET_GOLD) {\n            PanelHelp.showTip(Manager.makeLanguage([\"InputBetGold\", MIN_BET_GOLD, MAX_BET_GOLD], true));\n            return;\n        }\n\n        //判断是否在下注阶段\n        let status = this._rouletteData.Status;\n        if (status != MST.RouletteStatus.BetPhase) {\n            PanelHelp.showTip(Manager.makeLanguage(\"NotBetState\", true));\n            return;\n        }\n\n        let req = MST.C2M_MyRouletteBet_Req.create({\n            RpcId: Manager.netManager.getNewSeqId(),\n            BetGold: NumberUtils.converToS(betGold),\n            BetIndex\n        });\n        let buffer = MST.C2M_MyRouletteBet_Req.encode(req).finish();\n        this.service.sendMsg(MST.C2M_MyRouletteBet_Req, MST.OuterOpcode_Roulette.C2M_MyRouletteBet_Req, buffer);\n    }\n\n    clickMyRecord() {\n        this.nodBigWinList.active = false;\n        this.nodCurRoundList.active = true;\n    }\n\n    clickWordRecord() {\n        this.nodBigWinList.active = true;\n        this.nodCurRoundList.active = false;\n\n        this.requestGetBetRankInfo();\n    }\n\n    requestGetBetRankInfo() {\n        let req = MST.C2R_GetBetRankInfo_Req.create({\n            RpcId: Manager.netManager.getNewSeqId()\n        })\n        let buffer = MST.C2R_GetBetRankInfo_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2R_GetBetRankInfo_Req, MST.OuterOpcode_Roulette.C2R_GetBetRankInfo_Req, buffer);\n    }\n\n    private onChangedBetGold(content: string, edb: cc.EditBox): void {\n        let arrContent: string[] = content.split('');\n        for (let i = arrContent.length - 1; i >= 0; --i) {\n            let reg: RegExp = /[0-9]/g;\n            if (!reg.test(arrContent[i])) {\n                arrContent.splice(i, 1);\n            }\n        }\n\n        let legalContent: string = arrContent.join(\",\").replace(/,/g, \"\");\n        let numContent: number = Number(legalContent);\n\n        if (numContent <= 0) {\n            content = \"\";\n        } else {\n            content = numContent.toString();\n        }\n        edb.string = content;\n    }\n\n    private addBetGold(gold: number, edbBetGold: cc.EditBox): void {\n        let numBetGold: number = 0;\n        if (edbBetGold.string.length > 0) {\n            numBetGold = Number(edbBetGold.string);\n        }\n        edbBetGold.string = Operation.add(gold, numBetGold).toString();\n    }\n\n    private mulBetGold(gold: number, edbBetGold: cc.EditBox): void {\n        let numBetGold: number = 0;\n        if (edbBetGold.string.length > 0) {\n            numBetGold = Number(edbBetGold.string);\n        }\n        edbBetGold.string = Math.floor(Operation.mul(gold, numBetGold)).toString();\n    }\n\n    public reqEnterLobby(): void {\n        let req = MST.C2M_TransferMap_Req.create({\n            RpcId: Manager.netManager.getNewSeqId(),\n            RoomName: Config.GameId.Lobby,\n        })\n        let buffer = MST.C2M_TransferMap_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2M_TransferMap_Req, MST.OuterOpcode_Map.C2M_TransferMap_Req, buffer);\n    }\n\n    private onEvent_M2C_TransferMap_Res(data: MST.IM2C_TransferMap_Res): void {\n        if (data.Error === 0) {\n            dispatch(LogicEvent.ENTER_HALL);\n        } else {\n            PanelHelp.showErrTip(data.Error);\n        }\n    }\n\n    onEvent_M2C_RouletteStartBet_Mes() {\n        this.startCountDown();\n        this.resumeRate();\n        this.onEvent_R2C_PaybackPhase_Mes();\n        this.refreshCurRoomBetsList();\n        this.refreshTotalBaoshi();\n    }\n\n    /**\n     * 启动游戏倒计时\n     */\n    private startCountDown() {\n        this.stopCountDown();\n        this.schedule(this.updateCountDonw);\n    }\n\n    /**\n     * 停止游戏倒计时\n     */\n    private stopCountDown() {\n        this.labStartCountDown.string = \"0.00\";\n        this.unschedule(this.updateCountDonw);\n    }\n\n    /**\n     * 刷新游戏倒计时\n     */\n    private updateCountDonw(): void {\n        let ms = this._rouletteData.stopBetTimeStamp - this._appData.getServerTimestamp();\n        // console.log('下注剩余时间ms:' + ms);\n        if (ms <= 0) {\n            ms = 0;\n            this.stopCountDown();\n            this.labStartCountDown.string = \"0.00\";\n            return;\n        }\n        this.labStartCountDown.string = DateUtils.getMsToS(ms);\n    }\n\n    private refreshGame(): void {\n        switch (this._rouletteData.Status) {\n            case MST.RouletteStatus.BetPhase: {\n                this.startCountDown();\n            }\n                break;\n            case MST.RouletteStatus.AnimationPhase: {\n\n            }\n                break;\n            case MST.RouletteStatus.PaybackPhase: {\n\n            }\n                break;\n        }\n    }\n\n    onEvent_M2C_GetRouletteInfo_Res() {\n        this.refreshGame();\n        this.resumeRate();\n        this.refreshCurRoomBetsList();\n        this.onEvent_R2C_PaybackPhase_Mes();\n        this.refreshTotalBaoshi();\n        this.refreshMultipleRecord();\n    }\n\n    private resumeRate() {\n        let status = this._rouletteData.Status == MST.RouletteStatus.BetPhase;\n        this.enableEditboxRate(this.edbBetGold, status);\n        this.enableBtnBetRate(status);\n\n        if (!status)\n            this.labStartCountDown.string = \"0.00\";\n    }\n\n    private enableBtnBetRate(isEnable: boolean) {\n        let imgBetBg = this.latManual.getChildByName('nodBetRaise').getChildByName('imgBetBg');\n\n        for (let index = 0; index < 5; index++) {\n            let btnBet = imgBetBg.getChildByName('btnBet' + index).getComponent(cc.Button)\n            btnBet.enabled = isEnable;\n        }\n\n        let noBetBtn = this.latManual.getChildByName('noBetBtn');\n\n        let btnPurple = noBetBtn.getChildByName('btnPurple').getComponent(cc.Button);\n        let btnGreen = noBetBtn.getChildByName('btnGreen').getComponent(cc.Button);\n        let btnRed = noBetBtn.getChildByName('btnRed').getComponent(cc.Button);\n        btnPurple.enabled = isEnable;\n        btnGreen.enabled = isEnable;\n        btnRed.enabled = isEnable;\n    }\n\n    private enableEditboxRate(edbChangeRate: cc.EditBox, isEnable: boolean): void {\n        edbChangeRate.enabled = isEnable;\n        let nodContent: cc.Node = edbChangeRate.node.getChildByName(\"TEXT_LABEL\");\n        let nodPlaceholder: cc.Node = edbChangeRate.node.getChildByName(\"PLACEHOLDER_LABEL\");\n        if (isEnable) {\n            nodContent.color = RouletteColorDefine.EnableRate.ENABLE;\n            nodPlaceholder.color = RouletteColorDefine.EnableRate.ENABLE;\n        } else {\n            nodContent.color = RouletteColorDefine.EnableRate.DISABLE;\n            nodPlaceholder.color = RouletteColorDefine.EnableRate.DISABLE;\n        }\n    }\n\n    onEvent_R2C_PaybackPhase_Mes() {\n        let rouletteData = this._rouletteData;\n        let labGameNo = this.nodVerify.getChildByName('labGameNo').getComponent(cc.Label);\n        let labHash = this.nodVerify.getChildByName('hashNode').getChildByName('labHash').getComponent(cc.Label);\n        let labRoundNum = this.nodVerify.getChildByName('roundNode').getChildByName('labRoundNum').getComponent(cc.Label);\n        let labRoundHash = this.nodVerify.getChildByName('roundHashNode').getChildByName('labRoundHash').getComponent(cc.Label);\n        labGameNo.string = `Game No.${rouletteData.curRound}`;\n        labHash.string = rouletteData.hashSalt;\n        labRoundNum.string = String(rouletteData.randomNum);\n        labRoundHash.string = rouletteData.roundHash;\n\n        this.refreshMultipleRecord();\n    }\n\n    refreshTotalBaoshi() {\n        let rouletteData = this._rouletteData;\n        let onRoomTotalBet = rouletteData.onRoomTotalBet;\n        if (!onRoomTotalBet || onRoomTotalBet.length <= 0) return;\n        let labPurpChips = this.nodCurRoundList.getChildByName('latBaoshi').getChildByName('purp').getChildByName('labChips');\n        let labRedChips = this.nodCurRoundList.getChildByName('latBaoshi').getChildByName('red').getChildByName('labChips');\n        let labGreenChips = this.nodCurRoundList.getChildByName('latBaoshi').getChildByName('green').getChildByName('labChips');\n\n        for (let index = 0; index < onRoomTotalBet.length; index++) {\n            const data = onRoomTotalBet[index];\n            if (data.color == 0) {\n                labPurpChips.getComponent(cc.Label).string = NumberUtils.converToC(data.chips);\n            } else if (data.color == 1) {\n                labRedChips.getComponent(cc.Label).string = NumberUtils.converToC(data.chips);\n            } else {\n                labGreenChips.getComponent(cc.Label).string = NumberUtils.converToC(data.chips);\n            }\n        }\n    }\n\n    onEvent_R2C_Bet_Mes() {\n        this.refreshCurRoomBetsList();\n        this.refreshTotalBaoshi();\n    }\n\n    onEvent_R2C_GetBetRandInfo_Res() {\n        let rouletteData = this._rouletteData;\n        let content = this.nodBigWinList.getChildByName('lsvBetPlayer').getChildByName('view').getChildByName('content');\n        let betBigRankInfo = rouletteData.betBigRankInfo;\n        for (let index = 0; index < 9; index++) {\n            let curItem = content.getChildByName(`RouletteBigWinItem${index}`);\n            let scriptComm = curItem.getComponent(RouletteBigWinItem);\n            const data = betBigRankInfo[index];\n            curItem.active = false;\n            if (index < betBigRankInfo.length) {\n                curItem.active = true;\n                scriptComm.updateItem(data, index);\n            }\n        }\n    }\n\n    refreshCurRoomBetsList() {\n        let lsvBetPlayer = this.lsvBetPlayer;\n        let content = lsvBetPlayer.getChildByName('view').getChildByName('content');\n        let rouletteData = this._rouletteData;\n\n        let onRoomBets = rouletteData.onRoomBets;\n        for (let index = 0; index < 6; index++) {\n            let curItem = content.getChildByName(`RouletteMyRecordItem${index}`);\n            let scriptComm = curItem.getComponent(RouletteMyRecordItem);\n            const data = onRoomBets[index];\n            curItem.active = false;\n            if (index < onRoomBets.length) {\n                curItem.active = true;\n                scriptComm.updateItem(data, index);\n\n                cc.tween(curItem)\n                    .set({ scaleY: 0 })\n                    .to(0.1, { scaleY: 1 })\n                    .start()\n            }\n        }\n    }\n\n    refreshMultipleRecord() {\n        let recordCount: number = this._rouletteData.gameRecordList.length;\n        let showRecordList: number[] = [];\n        if (recordCount <= this.latRecord.node.childrenCount) {\n            showRecordList = [].concat(this._rouletteData.gameRecordList);\n        } else {\n            showRecordList = this._rouletteData.gameRecordList.slice(-this.latRecord.node.childrenCount, recordCount);\n        }\n\n        let index: number = 0;\n        for (let v of this.latRecord.node.children) {\n            let color: number = showRecordList[index++];\n            let crashRecordItem = v.getComponent(RouletteRecordItem);\n\n            if (color === undefined) {\n                crashRecordItem.clear();\n            } else {\n                crashRecordItem.setColor(color);\n            }\n\n            if (index == showRecordList.length) {\n                cc.Tween.stopAllByTarget(v);\n                cc.tween(v)\n                    .set({ opacity: 0 })\n                    .to(0.5, { opacity: 255 })\n                    .start()\n            }\n        }\n    }\n\n    private stopAllSound(): void {\n        this.audioHelper.stopMusic();\n        this.audioHelper.stopEffectByPath(Roulette.SOUNDS.RUN);\n        this.audioHelper.stopEffectByPath(Roulette.SOUNDS.RESULT);\n    }\n\n    onDestroy(): void {\n        super.onDestroy();\n        this.stopAllSound();\n    }\n}\n"]}
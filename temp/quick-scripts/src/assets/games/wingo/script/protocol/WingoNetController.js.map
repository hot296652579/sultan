{"version":3,"sources":["assets/games/wingo/script/protocol/WingoNetController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,uEAAoE;AACpE,6EAA0E;AAC1E,6EAA0E;AAC1E,gFAAwD;AACxD,oGAA4E;AAC5E,kFAA2F;AAC3F,yEAAmE;AACnE,oFAA4D;AAC5D,kEAA0C;AAG1C;;GAEG;AACH,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAI5C,IAAqB,kBAAkB,GAAvC,MAAqB,kBAAmB,SAAQ,oBAAwB;IAE1D,aAAa;QACnB,KAAK,CAAC,aAAa,EAAE,CAAA;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,YAAG,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAChG,IAAI,CAAC,aAAa,CAAC,YAAG,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACtG,IAAI,CAAC,aAAa,CAAC,YAAG,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAChG,IAAI,CAAC,aAAa,CAAC,YAAG,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxF,IAAI,CAAC,aAAa,CAAC,YAAG,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC1F,IAAI,CAAC,aAAa,CAAC,YAAG,CAAC,eAAe,CAAC,mBAAmB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC5F,CAAC;IAEO,WAAW;QACf,2BAAY,CAAC,QAAQ,CAAC,YAAG,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,YAAG,CAAC,oBAAoB,CAAC,CAAC;QAChG,2BAAY,CAAC,QAAQ,CAAC,YAAG,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,YAAG,CAAC,uBAAuB,CAAC,CAAC;QACtG,2BAAY,CAAC,QAAQ,CAAC,YAAG,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,YAAG,CAAC,oBAAoB,CAAC,CAAC;QAChG,2BAAY,CAAC,QAAQ,CAAC,YAAG,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,YAAG,CAAC,gBAAgB,CAAC,CAAC;QACxF,2BAAY,CAAC,QAAQ,CAAC,YAAG,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,YAAG,CAAC,iBAAiB,CAAC,CAAC;QAC1F,2BAAY,CAAC,QAAQ,CAAC,YAAG,CAAC,eAAe,CAAC,mBAAmB,EAAE,YAAG,CAAC,mBAAmB,CAAC,CAAC;IAC5F,CAAC;IAEM,sBAAsB,CAAC,IAA+B;QACzD,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;YAClB,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,OAAO;SACV;QACD,IAAI,SAAS,GAAc,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAS,CAAC,CAAC;QAEpD,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,YAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAClG,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,YAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC1F,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,YAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE9F,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,QAAQ,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAEM,yBAAyB,CAAC,IAAkC;QAC/D,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;YAClB,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,OAAO;SACV;QACD,IAAI,SAAS,GAAc,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAS,CAAC,CAAC;QACpD,IAAI,SAAS,CAAC,OAAO,EAAE;YACnB,SAAS,CAAC,QAAQ,GAAG,YAAG,CAAC,SAAS,CAAC,SAAS,CAAC;SAChD;aAAM;YACH,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;SAClC;QACD,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,SAAS,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QAEvE,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,QAAQ,EAAE;YACxD,QAAQ,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;SACnD;IACL,CAAC;IAEM,sBAAsB,CAAC,IAA+B;QACzD,IAAI,SAAS,GAAc,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAS,CAAC,CAAC;QAEpD,IAAI,SAAS,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE;YAClC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChD;QAED,SAAS,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClE,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC1C,QAAQ,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAEM,kBAAkB,CAAC,IAA2B;QACjD,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;YAClB,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,OAAO;SACV;QACD,QAAQ,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAEM,mBAAmB,CAAC,IAA4B;QACnD,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YACjB,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,OAAO;SACV;QAED,uDAAuD;QACvD,yFAAyF;QACzF,sBAAsB;QAEtB,IAAI;QAEJ,QAAQ,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEM,qBAAqB,CAAC,IAA8B;QACvD,IAAI,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAQ,CAAC,CAAC;QACvC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,QAAQ,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;CAEJ,CAAA;AAjGoB,kBAAkB;IAFtC,OAAO;IACP,0BAAa,CAAC,2BAAY,CAAC,QAAQ,CAAC;GAChB,kBAAkB,CAiGtC;kBAjGoB,kBAAkB;AAmGvC,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC","file":"","sourceRoot":"/","sourcesContent":["import { Manager } from \"../../../../script/common/manager/Manager\";\nimport { CmdResStruct } from \"../../../../script/common/net/CmdResStruct\";\nimport { LobbyService } from \"../../../../script/common/net/LobbyService\";\nimport UserData from \"../../../../script/data/UserData\";\nimport Controller from \"../../../../script/framework/controller/Controller\";\nimport { injectService, makeKey } from \"../../../../script/framework/decorator/Decorators\";\nimport { MST } from \"../../../../script/framework/external/protoc\";\nimport PanelHelp from \"../../../../script/msgbox/PanelHelp\";\nimport WingoData from \"../data/WingoData\";\nimport { WingoInterface } from \"../interface/WingoInterface\";\n\n/**\n * @description 逻辑流程控制器  \n */\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class WingoNetController extends Controller<LobbyService> {\n\n    protected bindingEvents() {\n        super.bindingEvents()\n        this.registerRes();\n        this.registerEvent(MST.OuterOpcode_WingoGame.M2C_GetWingoInfo_Res, this.onM2C_GetWingoInfo_Res);\n        this.registerEvent(MST.OuterOpcode_WingoGame.M2C_GetWingoHistory_Res, this.onM2C_GetWingoHistory_Res);\n        this.registerEvent(MST.OuterOpcode_WingoGame.M2C_WingoLottery_Mes, this.onM2C_WingoLottery_Mes);\n        this.registerEvent(MST.OuterOpcode_WingoGame.M2C_WingoBet_Res, this.onM2C_WingoBet_Res);\n        this.registerEvent(MST.OuterOpcode_WingoGame.S2C_WingoMyRecord, this.onS2C_WingoMyRecord);\n        this.registerEvent(MST.OuterOpcode_Map.M2C_TransferMap_Res, this.onM2C_TransferMap_Res);\n    }\n\n    private registerRes() {\n        CmdResStruct.register(MST.OuterOpcode_WingoGame.M2C_GetWingoInfo_Res, MST.M2C_GetWingoInfo_Res);\n        CmdResStruct.register(MST.OuterOpcode_WingoGame.M2C_GetWingoHistory_Res, MST.M2C_GetWingoHistory_Res);\n        CmdResStruct.register(MST.OuterOpcode_WingoGame.M2C_WingoLottery_Mes, MST.M2C_WingoLottery_Mes);\n        CmdResStruct.register(MST.OuterOpcode_WingoGame.M2C_WingoBet_Res, MST.M2C_WingoBet_Res);\n        CmdResStruct.register(MST.OuterOpcode_WingoGame.S2C_WingoMyRecord, MST.S2C_WingoMyRecord);\n        CmdResStruct.register(MST.OuterOpcode_Map.M2C_TransferMap_Res, MST.M2C_TransferMap_Res);\n    }\n\n    public onM2C_GetWingoInfo_Res(data: MST.IM2C_GetWingoInfo_Res): void {\n        if (data.Error !== 0) {\n            PanelHelp.showErrTip(data.Error);\n            return;\n        }\n        let wingoData: WingoData = G.DataMgr.get(WingoData);\n\n        wingoData.lotteryMap.get(MST.WingoMode.CepatPlus).NextTimestamp = Number(data.CepatPlusTimestamp);\n        wingoData.lotteryMap.get(MST.WingoMode.Cepat).NextTimestamp = Number(data.CepatTimestamp);\n        wingoData.lotteryMap.get(MST.WingoMode.Standar).NextTimestamp = Number(data.StandarTimestamp);\n\n        wingoData.cost = data.Cost;\n        dispatch(\"Event_M2C_GetWingoInfo_Res\", data);\n    }\n\n    public onM2C_GetWingoHistory_Res(data: MST.IM2C_GetWingoHistory_Res): void {\n        if (data.Error !== 0) {\n            PanelHelp.showErrTip(data.Error);\n            return;\n        }\n        let wingoData: WingoData = G.DataMgr.get(WingoData);\n        if (wingoData.isFirst) {\n            wingoData.currMode = MST.WingoMode.CepatPlus;\n        } else {\n            wingoData.currMode = data.Mode;\n        }\n        wingoData.currIssue = Number(data.CurrIssue);\n        wingoData.historyLotteryMap.set(data.Mode, data.HistoryInfo.reverse());\n\n        if (!wingoData.isFirst || data.Mode === wingoData.currMode) {\n            dispatch(\"Event_M2C_GetWingoHistory_Res\", data);\n        }\n    }\n\n    public onM2C_WingoLottery_Mes(data: MST.IM2C_WingoLottery_Mes): void {\n        let wingoData: WingoData = G.DataMgr.get(WingoData);\n\n        if (wingoData.currMode === data.Mode) {\n            wingoData.currIssue = Number(data.NextIssue);\n        }\n\n        wingoData.historyLotteryMap.get(data.Mode).push(data.LotteryInfo);\n        wingoData.lotteryMap.set(data.Mode, data);\n        dispatch(\"Event_M2C_WingoLottery_Mes\", data);\n    }\n\n    public onM2C_WingoBet_Res(data: MST.IM2C_WingoBet_Res): void {\n        if (data.Error !== 0) {\n            PanelHelp.showErrTip(data.Error);\n            return;\n        }\n        dispatch(\"Event_M2C_WingoBet_Res\", data);\n    }\n\n    public onS2C_WingoMyRecord(data: MST.IS2C_WingoMyRecord): void {\n        if (data.code !== 0) {\n            PanelHelp.showErrTip(data.code);\n            return;\n        }\n\n        // let wingoData: WingoData = G.DataMgr.get(WingoData);\n        // let myRecordList: MST.IMyRecordInfo[] = wingoData.myRecordMap.get(wingoData.currMode);\n        // if (myRecordList) {\n\n        // }\n\n        dispatch(\"Event_S2C_WingoMyRecord\", data);\n    }\n\n    public onM2C_TransferMap_Res(data: MST.IM2C_TransferMap_Res) {\n        let userData = G.DataMgr.get(UserData);\n        userData.inGame = data.RoomName;\n        dispatch(\"Event_M2C_TransferMap_Res\", data);\n    }\n\n}\n\nManager.netManager.push(WingoNetController);\n"]}
{"version":3,"sources":["assets/games/crash/script/data/CrashData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gFAAwD;AACxD,0FAAkE;AAClE,8EAAsD;AACtD,2GAAmF;AAGnF,qEAA6C;AAG7C,IAAqB,SAAS,GAA9B,MAAqB,SAAU,SAAQ,kBAAQ;IAuB3C;QACI,KAAK,EAAE,CAAC;QAtBJ,aAAQ,GAAY,IAAI,CAAC;QAE1B,YAAO,GAA+B,IAAI,CAAC;QAC3C,WAAM,GAAoB,IAAI,CAAC;QAC/B,uBAAkB,GAAW,IAAI,CAAC;QAClC,sBAAiB,GAAW,IAAI,CAAC;QACjC,qBAAgB,GAAW,IAAI,CAAC;QAChC,kBAAa,GAAW,IAAI,CAAC;QAC7B,mBAAc,GAAa,IAAI,CAAC;QAChC,iBAAY,GAAW,IAAI,CAAC;QAC5B,cAAS,GAA+B,IAAI,CAAC;QAC7C,kBAAa,GAAW,IAAI,CAAC;QAC7B,gBAAW,GAA0B,IAAI,CAAC;QAC1C,aAAQ,GAAwB,IAAI,CAAC;QAC5C,SAAS;QACF,kBAAa,GAAW,IAAI,CAAC;QACpC,6BAA6B;QACtB,iBAAY,GAA0C,IAAI,CAAC;QAClE,UAAU;QACH,oBAAe,GAAiC,IAAI,CAAC;QAKxD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAO,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAA;QACxB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG;YACZ,UAAU,EAAE,EAAE;YACd,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,CAAC;SACX,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;IAClC,CAAC;IAEM,OAAO;IAEd,CAAC;IAEM,QAAQ;QACX,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEM,OAAO;QACV,IAAI,mBAAS,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE;YAC3C,OAAO,CAAC,CAAC;SACZ;QAED,IAAI,OAAO,GAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACrF,OAAO,oBAAU,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;CAEJ,CAAA;AAjEoB,SAAS;IAD7B,wBAAc,CAAC,SAAS;GACJ,SAAS,CAiE7B;kBAjEoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import BaseData from \"../../../../script/base/BaseData\";\nimport TypeUtils from \"../../../../script/common/utils/TypeUtils\";\nimport AppData from \"../../../../script/data/AppData\";\nimport ClassDecorator from \"../../../../script/framework/decorator/ClassDecorator\";\nimport { MST } from \"../../../../script/framework/external/protoc\";\nimport { CrashInterface } from \"../interface/CrashInterface\";\nimport CrashUtils from \"../utils/CrashUtils\";\n\n@ClassDecorator.classname\nexport default class CrashData extends BaseData {\n\n    private _appData: AppData = null;\n\n    public betList: CrashInterface.BetPlayer[] = null;\n    public status: MST.CrashStatus = null;\n    public startGameTimestamp: number = null;\n    public startBetTimestamp: number = null;\n    public stopBetTimestamp: number = null;\n    public bombTimestamp: number = null;\n    public rateRecordList: number[] = null;\n    public betTotalGold: number = null;\n    public myBetList: CrashInterface.BetPlayer[] = null;\n    public betTotalCount: number = null;\n    public autoBetData: MST.ICrashAutoBetInfo = null;\n    public hashInfo: CrashInterface.Hash = null;\n    // 本轮爆炸倍数\n    public roundBombRate: number = null;\n    // 下注玩家 Map<下注玩家节点下标, 下注玩家数据>\n    public betPlayerMap: Map<number, CrashInterface.BetPlayer> = null;\n    // 总历史记录数据\n    public totalRecordData: MST.IM2C_CrashHashRecord_Res = null;\n\n    constructor() {\n        super();\n\n        this._appData = G.DataMgr.get(AppData);\n        this.betList = [];\n        this.rateRecordList = []\n        this.myBetList = [];\n        this.hashInfo = {\n            serverSeed: \"\",\n            gameNo: 0,\n            publicSeed: \"\",\n            roundHash: \"\",\n            acak: 0,\n            point: 0,\n        };\n        this.betPlayerMap = new Map();\n    }\n\n    public destroy(): void {\n\n    }\n\n    public initNext(): void {\n        this.betList.length = 0;\n        this.status = null;\n        this.startGameTimestamp = null;\n        this.startBetTimestamp = null;\n        this.stopBetTimestamp = null;\n        this.betTotalGold = null;\n        this.myBetList.length = 0;\n        this.betTotalCount = null;\n    }\n\n    public getRate(): number {\n        if (TypeUtils.isNull(this.startGameTimestamp)) {\n            return 0;\n        }\n\n        let runTime: number = (this._appData.getServerTimestamp() - this.startGameTimestamp);\n        return CrashUtils.getRateByRunTime(runTime);\n    }\n\n}"]}
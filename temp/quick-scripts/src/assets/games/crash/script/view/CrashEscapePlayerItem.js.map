{"version":3,"sources":["assets/games/crash/script/view/CrashEscapePlayerItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,oFAA4D;AAC5D,+DAA4D;AAI5D,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,qBAAqB,GAA1C,MAAqB,qBAAsB,SAAQ,gBAAM;IAAzD;;QAGY,UAAK,GAAc,IAAI,CAAC;QAGxB,YAAO,GAAa,IAAI,CAAC;QAEzB,UAAK,GAAW,IAAI,CAAC;QAoC7B,iBAAiB;IACrB,CAAC;IAnCG,MAAM;QACF,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,KAAK;IAEL,CAAC;IAEO,QAAQ;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAEO,MAAM;QACV,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IAC7B,CAAC;IAEO,WAAW;QACf,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,OAAe,CAAC,sBAAsB,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;IACpD,CAAC;IAEM,MAAM,CAAC,IAAY;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;CAGJ,CAAA;AA1CG;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;oDACY;AAGhC;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;sDACc;AANhB,qBAAqB;IADzC,OAAO;GACa,qBAAqB,CA6CzC;kBA7CoB,qBAAqB","file":"","sourceRoot":"/","sourcesContent":["import UIView from \"../../../../script/framework/ui/UIView\";\nimport { UtilMgr } from \"../../../../script/global/UtilMgr\";\nimport { CrashColorDefine } from \"../define/CrashColorDefine\";\nimport { CrashInterface } from \"../interface/CrashInterface\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class CrashEscapePlayerItem extends UIView {\n\n    @property(cc.Sprite)\n    private imgBg: cc.Sprite = null;\n\n    @property(cc.Label)\n    private labNick: cc.Label = null;\n\n    private _nick: string = null;\n\n    onLoad() {\n        this.initData();\n        this.initUI();\n    }\n\n    start() {\n\n    }\n\n    private initData(): void {\n        this._nick = null;\n    }\n\n    private initUI(): void {\n        this.labNick.string = \"\";\n    }\n\n    private refreshNick(): void {\n        this.labNick.string = UtilMgr.setString(this._nick);\n        (this.labNick as any)._forceUpdateRenderData();\n        this.imgBg.node.width = this.labNick.node.width;\n    }\n\n    public onShow(nick: string): void {\n        this._nick = nick;\n        this.initUI();\n        this.refreshNick();\n    }\n\n    public reset(): void {\n        this.initData();\n        this.initUI();\n    }\n\n    // update (dt) {}\n}\n"]}
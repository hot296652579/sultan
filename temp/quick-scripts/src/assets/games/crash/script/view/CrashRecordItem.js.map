{"version":3,"sources":["assets/games/crash/script/view/CrashRecordItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,6EAA0E;AAC1E,8FAAsE;AAEtE,kFAAkF;AAClF,oFAA4D;AAC5D,iEAA8D;AAC9D,+DAA4D;AAE5D,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAI5C,IAAqB,eAAe,GAApC,MAAqB,eAAgB,SAAQ,gBAAM;IAAnD;;QAIY,UAAK,GAAc,IAAI,CAAC;QAGxB,YAAO,GAAa,IAAI,CAAC;QAEjC,KAAK;QACG,UAAK,GAAW,IAAI,CAAC;IA0DjC,CAAC;IAxDG,MAAM;QACF,KAAK,CAAC,MAAM,EAAE,CAAC;QAEf,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAES,KAAK;IAEf,CAAC;IAEO,QAAQ;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAEO,QAAQ;QACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IAC7B,CAAC;IAEO,YAAY;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;QAAA,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,qBAAW,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5D,CAAC;IAEO,YAAY;QAChB,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACnB,OAAO;SACV;QAED,IAAI,KAAK,GAAa,mCAAgB,CAAC,MAAM,CAAC,KAAK,CAAC;QAEpD,IAAI,IAAI,CAAC,KAAK,IAAI,iCAAe,CAAC,SAAS,CAAC,MAAM,EAAE;YAChD,KAAK,GAAG,mCAAgB,CAAC,MAAM,CAAC,MAAM,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,KAAK,IAAI,iCAAe,CAAC,SAAS,CAAC,IAAI,EAAE;YACrD,KAAK,GAAG,mCAAgB,CAAC,MAAM,CAAC,IAAI,CAAC;SACxC;aAAM,IAAI,IAAI,CAAC,KAAK,IAAI,iCAAe,CAAC,SAAS,CAAC,KAAK,EAAE;YACtD,KAAK,GAAG,mCAAgB,CAAC,MAAM,CAAC,KAAK,CAAC;SACzC;aAAM,IAAI,IAAI,CAAC,KAAK,IAAI,iCAAe,CAAC,SAAS,CAAC,GAAG,EAAE;YACpD,KAAK,GAAG,mCAAgB,CAAC,MAAM,CAAC,GAAG,CAAC;SACvC;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpC,CAAC;IAEM,OAAO,CAAC,IAAY;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;CAEJ,CAAA;AAhEG;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;8CACY;AAGhC;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;gDACc;AAPhB,eAAe;IAFnC,OAAO;IACP,0BAAa,CAAC,2BAAY,CAAC,QAAQ,CAAC;GAChB,eAAe,CAoEnC;kBApEoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["import { LobbyService } from \"../../../../script/common/net/LobbyService\";\nimport NumberUtils from \"../../../../script/common/utils/NumberUtils\";\nimport { IController } from \"../../../../script/framework/controller/Controller\";\nimport { injectService } from \"../../../../script/framework/decorator/Decorators\";\nimport UIView from \"../../../../script/framework/ui/UIView\";\nimport { CrashColorDefine } from \"../define/CrashColorDefine\";\nimport { CrashRateDefine } from \"../define/CrashRateDefine\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class CrashRecordItem extends UIView implements IController<LobbyService> {\n    service: LobbyService;\n\n    @property(cc.Sprite)\n    private imgBg: cc.Sprite = null;\n\n    @property(cc.Label)\n    private labRate: cc.Label = null;\n\n    // 倍率\n    private _rate: number = null;\n\n    onLoad(): void {\n        super.onLoad();\n\n        this.initData();\n        this.initView();\n    }\n\n    protected start(): void {\n\n    }\n\n    private initData(): void {\n        this._rate = null;\n    }\n\n    private initView(): void {\n        this.imgBg.node.active = false;\n        this.labRate.string = \"\";\n    }\n\n    private refreshValue(): void {\n        this.imgBg.node.active = this._rate !== null;;\n        this.labRate.string = NumberUtils.converToC(this._rate);\n    }\n\n    private refreshColor(): void {\n        if (isNaN(this._rate)) {\n            return;\n        }\n\n        let color: cc.Color = CrashColorDefine.Record.WHITE;\n\n        if (this._rate >= CrashRateDefine.ColorRate.YEELOW) {\n            color = CrashColorDefine.Record.YEELOW;\n        } else if (this._rate >= CrashRateDefine.ColorRate.BLUE) {\n            color = CrashColorDefine.Record.BLUE;\n        } else if (this._rate >= CrashRateDefine.ColorRate.GREEN) {\n            color = CrashColorDefine.Record.GREEN;\n        } else if (this._rate >= CrashRateDefine.ColorRate.RED) {\n            color = CrashColorDefine.Record.RED;\n        }\n\n        this.labRate.node.color = color;\n    }\n\n    public setRate(rate: number): void {\n        this._rate = rate;\n        this.refreshValue();\n        this.refreshColor();\n    }\n\n    public clear(): void {\n        this.initData();\n        this.initView();\n    }\n\n}\n"]}
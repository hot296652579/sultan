{"version":3,"sources":["assets/script/redPakge/RedPakgeView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { i18n } from \"../common/language/LanguageImpl\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport UIView from \"../framework/ui/UIView\";\nimport { User } from \"../global/User\";\nimport { UtilMgr } from \"../global/UtilMgr\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class RedPakgeView extends UIView {\n\n    @property(cc.Node)\n    sendNode: cc.Node = null\n    @property(cc.Node)\n    recordsNode: cc.Node = null\n    @property(cc.Node)\n    receiveNode: cc.Node = null\n\n    @property(cc.Node)\n    recordsDetailNode: cc.Node = null\n\n    public static getPrefabUrl() {\n        return \"redPakge/prefabs/RedPakgeView\";\n    }\n\n    onLoad() {\n        super.onLoad();\n        this.content = this.node.getChildByName('content');\n        this.sendNode.active = false\n        this.recordsNode.active = false\n        this.receiveNode.active = false\n    }\n\n    bindingEvents() {\n        super.bindingEvents();\n    }\n    show(args) {\n        super.show(args);\n        this.showWithAction(true);\n    }\n\n    start() {\n        this.showSend()\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case \"close\": this.closeWithAction(); break;\n            case \"send\": this.showSend(); break;\n            case \"records\": this.showRecords(); break;\n            case \"receive\": this.showReceive(); break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n    }\n\n    private showSend(){\n        this.sendNode.active = true\n        this.recordsNode.active = false\n        this.receiveNode.active = false\n        this.recordsDetailNode.active = false\n    }\n    private showRecords(){\n        this.sendNode.active = false\n        this.recordsNode.active = true\n        this.receiveNode.active = false\n        this.recordsDetailNode.active = false\n    }\n    private showReceive(){\n        this.sendNode.active = false\n        this.recordsNode.active = false\n        this.receiveNode.active = true\n        this.recordsDetailNode.active = false\n    }\n    update (dt) {\n        // G.Logger.log(this.node.width,this.content.width)\n    }\n}\n"]}
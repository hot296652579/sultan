{"version":3,"sources":["assets/script/wallet/WalletView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameConfig } from \"../common/base/HotUpdate\";\nimport { Config } from \"../common/config/Config\";\nimport { dispatchEnterComplete, LogicEvent, LogicType } from \"../common/event/LogicEvent\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { gameManager } from \"../common/manager/GameManager\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { CommonMessage, protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { EventApi } from \"../framework/event/EventApi\";\nimport { HttpErrorType, RequestPackge } from \"../framework/net/HttpClient\";\nimport UIView from \"../framework/ui/UIView\";\nimport { User } from \"../global/User\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport { ShareTraceHelpder } from \"../Helpder/shareTrace/ShareTraceHelpder\";\nimport LanguageChange from \"../common/language/LanguageChange\";\nimport ServiceView from \"../service/ServiceView\";\nimport { UIManager } from \"../framework/base/UIManager\";\nimport AkunView from \"../akun/AkunView\";\nimport HallNewView from \"../hall/HallNewView\";\nimport LoginNewView from \"../login/LoginNewView\";\nimport MissionView from \"../activity/MissionView\";\nimport RechargeNewView from \"./RechargeNewView\";\nimport AttractView from \"./AttractNewView\";\nimport { MST } from \"../framework/external/protoc\";\nimport AttractRecordView from \"./AttractRecordView\";\nimport NumberUtils from \"../common/utils/NumberUtils\";\nimport UserData from \"../data/UserData\";\nimport DepositRecordView from \"./DepositRecordView\";\n\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\n@injectService(LobbyService.instance)\nexport default class WalletView extends UIView implements IController<LobbyService> {\n    service: LobbyService;\n\n    @property(cc.Label)\n    private labRp: cc.Label = null;\n    private _userData: UserData;\n\n    public static getPrefabUrl() {\n        return \"wallet/prefabes/walletView\";\n    }\n\n    onLoad() {\n        super.onLoad();\n        // this.audioHelper.playMusic(\"common/audio/login_bgm\", BUNDLE_RESOURCES);\n    }\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent('updateUserInfo', this.refreshUser);\n    }\n\n    show(): void {\n        this.initData();\n        this.requestGetBankList();\n        this.requestWithLimit();\n        this.refreshUser();\n    }\n    initData(): void {\n        let userData = G.DataMgr.get(UserData);\n        this._userData = userData;\n    }\n\n    refreshUser() {\n        if (this._userData.isLogined()) {\n            this.labRp.string = NumberUtils.converToC(Number(this._userData.info.Gold));\n        }\n    }\n\n    requestWithLimit() {\n        let req = MST.C2L_GetWithdrawLimit_Req.create({\n            RpcId: Manager.netManager.getNewSeqId(),\n        });\n        let buffer = MST.C2L_GetWithdrawLimit_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2L_GetWithdrawLimit_Req, MST.OuterOpcode_Lobby.C2L_GetWithdrawLimit_Req, buffer);\n    }\n\n    requestGetBankList() {\n        let req = MST.C2L_GetBankList_Req.create({\n            RpcId: Manager.netManager.getNewSeqId(),\n            index: 0,\n            limit: 6\n        });\n        let buffer = MST.C2L_GetBankList_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2L_GetBankList_Req, MST.OuterOpcode_Lobby.C2L_GetBankList_Req, buffer);\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case 'btnHome':\n                Manager.uiManager.open({ type: HallNewView, bundle: BUNDLE_RESOURCES });\n                this.close();\n                break;\n            case 'btnDompet':\n\n                break;\n            case 'btnLogin':\n                Manager.uiManager.open({ type: LoginNewView, bundle: BUNDLE_RESOURCES });\n                this.close();\n                break;\n            case 'btnEvent':\n                Manager.uiManager.open({ type: MissionView, bundle: BUNDLE_RESOURCES });\n                this.close();\n                break;\n            case 'btnAkun':\n                Manager.uiManager.open({ type: AkunView, bundle: BUNDLE_RESOURCES });\n                this.close();\n                break;\n            case 'btnRefill':\n                if (this.checkLogined())\n                    Manager.uiManager.open({ type: RechargeNewView, bundle: BUNDLE_RESOURCES });\n                break;\n            case 'btnWithdrawal':\n                if (this.checkLogined())\n                    Manager.uiManager.open({ type: AttractView, bundle: BUNDLE_RESOURCES });\n                break;\n            case 'btnAttrackRecord':\n                if (this.checkLogined())\n                    Manager.uiManager.open({ type: AttractRecordView, bundle: BUNDLE_RESOURCES });\n                break;\n            case 'btnDepositRecord':\n                if (this.checkLogined())\n                    Manager.uiManager.open({ type: DepositRecordView, bundle: BUNDLE_RESOURCES });\n                break;\n        }\n    }\n\n    checkLogined() {\n        if (!this._userData.id) {\n            Manager.uiManager.open({ type: LoginNewView, bundle: BUNDLE_RESOURCES });\n            return false;\n        }\n        return true;\n    }\n\n    onDestroy() {\n        super.onDestroy();\n    }\n\n}\n"]}
{"version":3,"sources":["assets/script/login/Validator.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8DAAsC;AAEtC;;GAEG;AACH,MAAqB,SAAS;IAC1B;QACI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAA;QAClB,IAAI,UAAU,GAAG,IAAI,oBAAU,EAAE,CAAA;QACjC,IAAI,CAAC,YAAY,CAAC,GAAG,UAAU,CAAA;IACnC,CAAC;IAED,GAAG,CAAC,GAAG,EAAE,KAAK;QACV,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG;YACtC,CAAC,UAAU,IAAI;gBACX,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBACf,IAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;oBAEnC,kCAAkC;oBAClC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3B,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;oBACnC,OAAO,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,GAAG,EAAC,WAAW,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;SACX;IACL,CAAC;IAED,KAAK;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG;YAChE,IAAI,QAAQ,GAAG,aAAa,EAAE,CAAC;YAC/B,IAAI,QAAQ,EAAE;gBACV,OAAO,QAAQ,CAAC;aACnB;SACJ;IACL,CAAC;CACJ;AAjCD,4BAiCC","file":"","sourceRoot":"/","sourcesContent":["import Strategies from \"./Strategies\";\n\n/**\n * 策略验证\n */\nexport default class Validator {\n    constructor() {\n        this['cache'] = []\n        let strategies = new Strategies()\n        this['strategies'] = strategies\n    }\n\n    add(dom, rules) {\n        let self = this;\n        for (let i = 0, rule; rule = rules[i++];) {\n            (function (rule) {\n                let strategyAry = rule.strategy.split(':');\n                let errorMsg = rule.errorMsg;\n                self['cache'].push(function () {\n                    let strategy = strategyAry.shift();\n\n                    // strategyAry.unshift(dom.value);\n                    strategyAry.push(errorMsg);\n                    let strategies = self['strategies']\n                    return strategies[strategy].call(self,dom,strategyAry);\n                });\n            })(rule)\n        }\n    }\n\n    start() {\n        for (let i = 0, validatorFunc; validatorFunc = this['cache'][i++];) {\n            let errorMsg = validatorFunc();\n            if (errorMsg) {\n                return errorMsg;\n            }\n        }\n    }\n}"]}
{"version":3,"sources":["assets/script/framework/assetManager/CacheManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ResourceCacheData, BUNDLE_TYPE, ResourceInfo, BUNDLE_REMOTE } from \"../base/Defines\";\nimport UIView from \"../ui/UIView\";\nimport { Manager } from \"../Framework\";\n\nclass ResourceCache {\n\n    private _caches = new Map<string, ResourceCacheData>();\n    private name = \"unknown\";\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    private isInvalid(cache: ResourceCacheData) {\n        return cache.isLoaded && cache.data && !cc.isValid(cache.data);\n    }\n\n    public get(path: string, isCheck: boolean): ResourceCacheData {\n        if (this._caches.has(path)) {\n            let cache = this._caches.get(path);\n            if (isCheck && this.isInvalid(cache)) {\n                //资源已经释放\n                cc.warn(`资源加载完成，但已经被释放 , 重新加载资源 : ${path}`);\n                this.remove(path);\n                return null;\n            }\n            return this._caches.get(path);\n        }\n        return null;\n    }\n\n    public set(path: string, data: ResourceCacheData) {\n        this._caches.set(path, data);\n    }\n\n    public remove(path: string) {\n        return this._caches.delete(path);\n    }\n}\n\nclass CacheInfo {\n    refCount = 0;\n    url: string = \"\";\n    /**@description 是否常驻于内存中 */\n    retain: boolean = false;\n}\n\nclass RemoteCaches {\n    private _caches = new Map<string, ResourceCacheData>();\n    private _spriteFrameCaches = new Map<string, ResourceCacheData>();\n    private _resMap = new Map<string, CacheInfo>();\n    /**\n     * @description 获取远程缓存数据\n     * @param type 远程奖状类型\n     * @param remoteUrl url数据\n     */\n    public get(url: string | RemoteUrl) {\n        let tempUrl = \"\";\n        if (typeof url == \"string\") {\n            let remoteUrl = parseRemoteUrl(url);\n            tempUrl = makeRemoteUrl(remoteUrl);\n        } else {\n            tempUrl = makeRemoteUrl(url);\n        }\n        if (this._caches.has(tempUrl)) {\n            return this._caches.get(tempUrl);\n        }\n        return null;\n    }\n\n    public getSpriteFrame(url: string | RemoteUrl) {\n        let tempUrl = \"\";\n        if (typeof url == \"string\") {\n            let remoteUrl = parseRemoteUrl(url);\n            tempUrl = makeRemoteUrl(remoteUrl);\n        } else {\n            tempUrl = makeRemoteUrl(url);\n        }\n        if (this._spriteFrameCaches.has(tempUrl)) {\n            let cache = this._spriteFrameCaches.get(tempUrl);\n            let texture2D = this.get(url);\n            if (texture2D) {\n                return cache;\n            } else {\n                this.remove(url);\n                return null;\n            }\n        }\n        return null;\n    }\n    public setSpriteFrame(url: string | RemoteUrl, data: any): cc.SpriteFrame {\n        let tempUrl = \"\";\n        if (typeof url == \"string\") {\n            let remoteUrl = parseRemoteUrl(url);\n            tempUrl = makeRemoteUrl(remoteUrl);\n        } else {\n            tempUrl = makeRemoteUrl(url);\n        }\n        if (data && data instanceof cc.Texture2D) {\n\n            //同一图片加载两次也会回调到这里，这里如果当前精灵缓存中有，不在重新创建\n            let spriteFrame = this.getSpriteFrame(url);\n            if (spriteFrame) {\n                return <cc.SpriteFrame>(spriteFrame.data);\n            }\n\n            let cache = new ResourceCacheData();\n            cache.data = new cc.SpriteFrame(data);\n            // cache.data.url = tempUrl;\n            cache.isLoaded = true;\n            cache.url = tempUrl;\n            this._spriteFrameCaches.set(tempUrl, cache);\n            return <cc.SpriteFrame>(cache.data);\n        }\n        return null;\n    }\n\n    public set(url: string | RemoteUrl, data: ResourceCacheData) {\n        let tempUrl = \"\";\n        if (typeof url == \"string\") {\n            let remoteUrl = parseRemoteUrl(url);\n            tempUrl = makeRemoteUrl(remoteUrl);\n        } else {\n            tempUrl = makeRemoteUrl(url);\n        }\n        data.url = tempUrl;\n        this._caches.set(tempUrl, data);\n    }\n\n    private _getCacheInfo(info: ResourceInfo, isNoFoundCreate: boolean = true) {\n        if (info && info.url && info.url.length > 0) {\n            let remoteUrl = parseRemoteUrl(info.url);\n            let url = makeRemoteUrl(remoteUrl);\n            if (!this._resMap.has(url)) {\n                if (isNoFoundCreate) {\n                    let cache = new CacheInfo;\n                    cache.url = info.url;\n                    this._resMap.set(url, cache);\n                }\n                else {\n                    return null;\n                }\n            }\n            return this._resMap.get(url);\n        }\n        return null;\n    }\n\n    public retainAsset(info: ResourceInfo) {\n        if (info && info.data) {\n            let cache = this._getCacheInfo(info);\n            if (cache) {\n                if (cache.retain) {\n                    if (!info.retain) {\n                        if (CC_DEBUG) cc.warn(`资源 : ${info.url} 已经被设置成常驻资源，不能改变其属性`);\n                    }\n                } else {\n                    cache.retain = info.retain;\n                }\n                cache.refCount++;\n                if (cache.retain) {\n                    cache.refCount = 999999;\n                }\n            }\n        }\n    }\n\n    public releaseAsset(info: ResourceInfo) {\n        if (info && info.data) {\n            let cache = this._getCacheInfo(info, false);\n            if (cache) {\n                if (cache.retain) {\n                    //常驻内存中\n                    return;\n                }\n                cache.refCount--;\n                if (cache.refCount <= 0) {\n                    this.remove(cache.url);\n                }\n            }\n        }\n    }\n\n    public remove(url: string | RemoteUrl) {\n        let tempUrl = \"\";\n        if (typeof url == \"string\") {\n            let remoteUrl = parseRemoteUrl(url);\n            tempUrl = makeRemoteUrl(remoteUrl);\n        } else {\n            tempUrl = makeRemoteUrl(url);\n        }\n\n        this._resMap.delete(tempUrl);\n\n        //先删除精灵帧\n        if (this._spriteFrameCaches.has(tempUrl)) {\n            this._spriteFrameCaches.delete(tempUrl);\n            if (CC_DEBUG) cc.log(`remove remote sprite frames resource url : ${tempUrl}`);\n        }\n\n        let cache = this._caches.has(tempUrl) ? this._caches.get(tempUrl) : null;\n        if (cache && cache.data instanceof sp.SkeletonData) {\n            //这里面需要删除加载进去的三个文件缓存 \n            this.remove(`${cache.url}.atlas`);\n            this.remove(`${cache.url}.png`);\n            this.remove(`${cache.url}.json`);\n        }\n        let success = this._caches.delete(tempUrl);\n        if (success) {\n            if (CC_JSB && cache && cache.data instanceof cc.Asset ) {\n                cc.assetManager.releaseAsset(cache.data);\n                if (CC_DEBUG) cc.log(`释放加载的本地远程资源:${cache.jsbStoragePath}`);\n            }\n            if (CC_DEBUG) cc.log(`remove remote cache url : ${tempUrl}`);\n        }\n        return success;\n    }\n\n    showCaches() {\n        cc.log(`---- [RemoteCaches] showCaches ----`);\n\n        let content = [];\n        let invalidContent = [];\n        this._spriteFrameCaches.forEach((data, key, source) => {\n            let itemContent = { url: data.url, isLoaded: data.isLoaded, isValid: cc.isValid(data.data), assetType: cc.js.getClassName(data.assetType), data: data.data ? cc.js.getClassName(data.data) : null, status: data.status };\n            let item = { url: key, data: itemContent };\n            if (data.isLoaded && ((data.data && !cc.isValid(data.data)) || !data.data)) {\n                invalidContent.push(item);\n            } else {\n                content.push(item);\n            }\n        });\n\n        if (content.length > 0) {\n            cc.log(`----------------Current valid spriteFrame Caches------------------`);\n            cc.log(JSON.stringify(content));\n        }\n        if (invalidContent.length > 0) {\n            cc.log(`----------------Current invalid spriteFrame Caches------------------`);\n            cc.log(JSON.stringify(invalidContent));\n        }\n\n\n        content = [];\n        invalidContent = [];\n        this._caches.forEach((data, key, source) => {\n            let itemContent = { url: data.url, isLoaded: data.isLoaded, isValid: cc.isValid(data.data), assetType: cc.js.getClassName(data.assetType), data: data.data ? cc.js.getClassName(data.data) : null, status: data.status }\n            let item = { url: key, data: itemContent };\n            if (data.isLoaded && data.data && !cc.isValid(data.data)) {\n                invalidContent.push(item);\n            } else {\n                content.push(item);\n            }\n        });\n        if (content.length > 0) {\n            cc.log(`----------------Current valid Caches------------------`);\n            cc.log(JSON.stringify(content));\n        }\n        if (invalidContent.length > 0) {\n            cc.log(`----------------Current invalid Caches------------------`);\n            cc.log(JSON.stringify(invalidContent));\n        }\n\n        if (this._resMap.size > 0) {\n            cc.log(`----------------Current resource reference Caches------------------`);\n            content = [];\n            this._resMap.forEach((value, key) => {\n                let item = { url: key, data: { refCount: value.refCount, url: value.url, retain: value.retain } };\n                content.push(item);\n            });\n            cc.log(JSON.stringify(content));\n        }\n    }\n}\n\nexport class CacheManager {\n    private logTag = `[CacheManager]: `;\n    private static _instance: CacheManager = null;\n    public static Instance() {\n        return this._instance || (this._instance = new CacheManager());\n    }\n\n    private _bundles = new Map<string, ResourceCache>();\n    private _remoteCaches = new RemoteCaches();\n    public get remoteCaches(){ return this._remoteCaches;} \n\n    public getBundleName(bundle: BUNDLE_TYPE) {\n        if (typeof bundle == \"string\") {\n            return bundle;\n        } else {\n            return bundle ? bundle.name : null;\n        }\n    }\n\n    public get(bundle: BUNDLE_TYPE, path: string, isCheck: boolean = true): ResourceCacheData {\n        let bundleName = this.getBundleName(bundle);\n        if (bundleName && this._bundles.has(bundleName)) {\n            return this._bundles.get(bundleName).get(path, isCheck);\n        }\n        return null;\n    }\n\n    public set(bundle: BUNDLE_TYPE, path: string, data: ResourceCacheData) {\n        let bundleName = this.getBundleName(bundle);\n        if (bundleName) {\n            if (!this._bundles.has(bundleName)) {\n                let cache = new ResourceCache(bundleName);\n                cache.set(path, data);\n                this._bundles.set(bundleName, cache);\n            } else {\n                this._bundles.get(bundleName).set(path, data);\n            }\n        }\n    }\n\n    public remove(bundle: BUNDLE_TYPE, path: string) {\n        let bundleName = this.getBundleName(bundle);\n        if (bundleName) {\n            if (this._bundles.has(bundleName)) {\n                return this._bundles.get(bundleName).remove(path);\n            }\n        }\n        return false;\n    }\n\n    private _getGetCacheByAsyncArgs(): { url: string, type: typeof cc.Asset, bundle: BUNDLE_TYPE } {\n        if (arguments.length < 3) {\n            if (CC_DEBUG) cc.error(`${this.logTag}参数传入有误，必须两个参数`);\n            return null;\n        }\n        if (typeof arguments[0] != \"string\") {\n            if (CC_DEBUG) cc.error(`${this.logTag}传入第一个参数有误,必须是string`);\n            return null;\n        }\n\n        if (!cc.js.isChildClassOf(arguments[1], cc.Asset)) {\n            if (CC_DEBUG) cc.error(`${this.logTag}传入的第二个参数有误,必须是cc.Asset的子类`);\n            return null;\n        }\n        return { url: arguments[0], type: arguments[1], bundle: arguments[2] };\n    }\n\n    /**\n     * @description 如果资源正在加载中，会等待资源加载完成后返回，否则直接返回null\n     * @param url \n     * @param type 资源类型\n     * @param bundle\n     */\n    public getCache<T extends cc.Asset>(url: string, type: { prototype: T }, bundle: BUNDLE_TYPE): Promise<T>;\n    public getCache() {\n        let args = arguments;\n        let me = this;\n        return new Promise<any>((resolve) => {\n            let _args: { url: string, type: typeof cc.Asset, bundle: BUNDLE_TYPE } = me._getGetCacheByAsyncArgs.apply(me, args);\n            if (!_args) {\n                resolve(null);\n                return;\n            }\n            let cache = me.get(_args.bundle, _args.url);\n            if (cache) {\n                if (cache.isLoaded) {\n                    //已经加载完成\n                    if (_args.type) {\n                        if (cache.data instanceof _args.type) {\n                            resolve(cache.data);\n                        } else {\n                            if (CC_DEBUG) cc.error(`${this.logTag}传入类型:${cc.js.getClassName(_args.type)}与资源实际类型: ${cc.js.getClassName(cache.data)}不同 url : ${cache.url}`);\n                            resolve(null);\n                        }\n                    } else {\n                        resolve(cache.data);\n                    }\n                } else {\n                    //加载中\n                    cache.getCb.push(resolve);\n                }\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * @description 异步获取资源，如果资源未加载，会加载完成后返回\n     * @param url \n     * @param type \n     * @param bundle \n     */\n    public getCacheByAsync<T extends cc.Asset>(url: string, type: { prototype: T }, bundle: BUNDLE_TYPE): Promise<T>;\n    public getCacheByAsync() {\n        let me = this;\n        let args: { url: string, type: typeof cc.Asset, bundle: BUNDLE_TYPE } = this._getGetCacheByAsyncArgs.apply(this, arguments);\n        return new Promise<any>((resolve) => {\n            if (!args) {\n                resolve(null);\n                return;\n            }\n            me.getCache(args.url, args.type, args.bundle).then((data) => {\n                if (data && data instanceof args.type) {\n                    resolve(data);\n                } else {\n                    //加载资源\n                    Manager.assetManager.load(args.bundle, args.url, args.type, null, (cache) => {\n                        if (cache && cache.data && cache.data instanceof args.type) {\n                            resolve(cache.data);\n                        } else {\n                            cc.error(`${this.logTag}加载失败 : ${args.url}`);\n                            resolve(null);\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    public getSpriteFrameByAsync(urls: string[], key: string, view: UIView, addExtraLoadResource: (view: UIView, info: ResourceInfo) => void, bundle: BUNDLE_TYPE) {\n        let me = this;\n        return new Promise<{ url: string, spriteFrame: cc.SpriteFrame, isTryReload?: boolean }>((resolve) => {\n            let nIndex = 0;\n            let getFun = (url) => {\n                me.getCacheByAsync(url, cc.SpriteAtlas, bundle).then((atlas) => {\n                    let info = new ResourceInfo;\n                    info.url = url;\n                    info.type = cc.SpriteAtlas;\n                    info.data = atlas;\n                    info.bundle = bundle;\n                    addExtraLoadResource(view, info);\n                    if (atlas) {\n                        let spriteFrame = atlas.getSpriteFrame(key);\n                        if (spriteFrame) {\n                            if (cc.isValid(spriteFrame)) {\n                                resolve({ url: url, spriteFrame: spriteFrame });\n                            } else {\n                                //来到这里面，其实程序已经崩溃了，已经没什么意思，也不知道写这个有啥用，尽量安慰,哈哈哈\n                                cc.error(`精灵帧被释放，释放当前无法的图集资源 url ：${url} key : ${key}`);\n                                Manager.assetManager.releaseAsset(info);\n                                resolve({ url: url, spriteFrame: null, isTryReload: true });\n                            }\n                        } else {\n                            nIndex++;\n                            if (nIndex >= urls.length) {\n                                resolve({ url: url, spriteFrame: null });\n                            } else {\n                                getFun(urls[nIndex]);\n                            }\n                        }\n                    } else {\n                        resolve({ url: url, spriteFrame: null });\n                    }\n                })\n            };\n\n            getFun(urls[nIndex]);\n        });\n    }\n}"]}
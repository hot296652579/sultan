{"version":3,"sources":["assets/script/redPakge/RedPakgeReceiveItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,4FAAoE;AACpE,uDAAoD;AACpD,+CAA4C;AAG5C,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAC,GAAG,EAAE,CAAC,UAAU,CAAC;AAG1C,IAAqB,mBAAmB,GAAxC,MAAqB,mBAAoB,SAAQ,0BAAgB;IAAjE;;QAII,cAAS,GAAa,IAAI,CAAC;QAG3B,cAAS,GAAa,IAAI,CAAC;QAG3B,gBAAW,GAAa,IAAI,CAAC;QAyB7B,iBAAiB;IACrB,CAAC;IAxBG,UAAU,CAAC,IAAI,EAAC,MAAM;QAClB,KAAK,CAAC,UAAU,CAAC,IAAI,EAAC,MAAM,CAAC,CAAA;QAC7B,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,iBAAO,CAAC,WAAW,CAAC,sBAAsB,CAAC,GAAC,iBAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YACpG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,GAAC,iBAAO,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;YACrE,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;SACjF;IACL,CAAC;IAED,OAAO,CAAC,KAAK,EAAE,IAAI;QACf,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QACnC,QAAQ,UAAU,EAAE;YAChB,KAAK,UAAU;gBAAE,IAAI,CAAC,OAAO,EAAE,CAAC;gBAAC,MAAM;YACvC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;SAC9B;IACL,CAAC;IAEO,UAAU;QACd,QAAQ,CAAC,0BAA0B,EAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnD,CAAC;IACO,OAAO;IAEf,CAAC;CAEJ,CAAA;AAhCG;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;sDACQ;AAG3B;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;sDACQ;AAG3B;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;wDACU;AAVZ,mBAAmB;IADvC,OAAO;GACa,mBAAmB,CAoCvC;kBApCoB,mBAAmB","file":"","sourceRoot":"/","sourcesContent":["import ScroViewBaseItem from \"../common/component/ScroViewBaseItem\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { UtilMgr } from \"../global/UtilMgr\";\n\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class RedPakgeReceiveItem extends ScroViewBaseItem {\n\n   \n    @property(cc.Label)\n    nameLabel: cc.Label = null;\n\n    @property(cc.Label)\n    timeLabel: cc.Label = null;\n\n    @property(cc.Label)\n    amountLabel: cc.Label = null;\n\n    updateItem(data,itemId){\n        super.updateItem(data,itemId)\n        if (data) {\n            this.nameLabel.string = Manager.getLanguage(\"REDPAKGE.receiveFrom\")+UtilMgr.setString(data.nickname)\n            this.amountLabel.string = \"â‚¹\"+UtilMgr.changeMoney(data.receiveAmount)\n            this.timeLabel.language = new Date(data.receiveTime).format(\"MM-dd hh:mm:ss\");\n        }\n    }\n\n    onClick(event, type){\n        let buttonName = event.target.name;\n        switch (buttonName) {\n            case \"shareBtn\": this.onShare(); break;\n            default: this.onShowInfo();\n        }\n    }\n\n    private onShowInfo(){\n        dispatch(\"showRedPakgeRecordDetail\",this._data)\n    }\n    private onShare(){\n\n    }\n    // update (dt) {}\n}\n"]}
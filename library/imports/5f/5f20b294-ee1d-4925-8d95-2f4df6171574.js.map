{"version":3,"sources":["assets/script/framework/net/Message.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { CmdResStruct } from \"../../common/net/CmdResStruct\";\nimport { User } from \"../../global/User\";\n\n// 消息号占用字节\nconst MESSAGE_CODE_BYTE_SIZE: number = 2;\n\n/**@description 与服务器交互的消息 */\nexport class Message {\n    /**@description 消息主cmd码 */\n    mainCmd: number = 0;\n    /**@description 解析后包体数据 */\n    data: any = null;\n    /**@description 发送或接收的消息流 */\n    buffer: ArrayBuffer = null;\n\n    /**@description data消息流 */\n    databuffer: Uint8Array = null;\n\n    /**@description serverId */\n    serverId: number = 0;\n\n    /**@description 数据填充 */\n    protected fillData() {\n\n    }\n    /**\n     * 合并 buffer\n     * @param buffer1 \n     * @param buffer2 \n     */\n    protected _appendBuffer(buffer1, buffer2) {\n        var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n        tmp.set(new Uint8Array(buffer1), 0);\n        tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n\n\n        // this.decode(tmp)\n\n        return tmp.buffer;\n    };\n\n    /**@description 转换成Uint8Array buffer */\n    protected toBuffer() {\n\n\n        let bodyLen: number = MESSAGE_CODE_BYTE_SIZE + this.databuffer.byteLength;\n        let dataLen: number = bodyLen;\n        let dataBuffer: ArrayBuffer = new ArrayBuffer(dataLen);\n        let dataView: DataView = new DataView(dataBuffer);\n\n        let bufferOffset: number = 0;\n        let msgDataLen: number = this.databuffer.byteLength;\n\n        // 协议号\n        dataView.setUint16(bufferOffset, this.mainCmd, false);\n        bufferOffset += MESSAGE_CODE_BYTE_SIZE;\n\n        // 协议数据\n        (new Uint8Array(dataBuffer, bufferOffset, msgDataLen)).set(this.databuffer, 0);\n        bufferOffset += msgDataLen;\n \n        this.buffer = dataBuffer;\n\n        // var buffer = new ArrayBuffer(2);\n        // var dv = new DataView(buffer);\n        // dv.setUint16(0, this.mainCmd, true);\n        // // dv.setUint32(0, buffer.byteLength, true);//len\n        // // dv.setUint32(4, 0, true);//code\n        // // dv.setUint32(8, Date.now(), true);//time\n        // // dv.setUint16(12, this.mainCmd, true);//mainCmd\n        // // dv.setUint16(14, this.subCmd, true);//subCmd\n        // // dv.setUint32(16, 0, true);//seqId\n        // // dv.setUint32(20, User._userID, true);//userId\n        // // dv.setUint16(24, this.serverId, true);//serverId\n        // // dv.setUint32(26, 0, true);//reserved\n        // // // dv.setBigUint64(30, BigInt(0), true); // timestamp\n        // this.buffer = buffer;\n        // if (this.databuffer) {\n        //     this.buffer = this._appendBuffer(buffer, this.databuffer.slice().buffer)\n        //     dv.setUint32(0, this.buffer.byteLength, true);//len\n        // }\n    }\n\n    /**@description 打包数据 */\n    encode(): boolean {\n        try {\n            this.fillData();\n            this.toBuffer();\n            return true;\n        } catch (error) {\n            cc.error(error);\n            return false;\n        }\n    }\n    /**@description 解析数据 */\n    decode(data: Uint8Array): boolean {\n        if (data) {\n            // ArrayBuffer.isView(data.buffer)\n            this.buffer = data;\n            var dv = new DataView(data.buffer);\n            this.mainCmd = dv.getUint16(0, false);//mainCmd\n            //数据体\n            try {\n                let daTbuff = data.buffer.slice(2, data.buffer.byteLength);\n                var dataU8 = new Uint8Array(daTbuff);\n                let res = CmdResStruct.decode(this.mainCmd)\n                if (res) {\n                    let dataMsg = res.decode(dataU8);\n                    this.data = dataMsg;\n                } else {\n                    cc.error(`未配置 ${this.mainCmd} 解析消息proto注册 CmdResStruct`);\n                }\n\n            } catch (error) {\n                return false;\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    getUint64(dataview, byteOffset, littleEndian) {\n        // 将 64 位整数值分成两份 32 位整数值\n        const left = dataview.getUint32(byteOffset, littleEndian);\n        const right = dataview.getUint32(byteOffset + 4, littleEndian);\n\n        // 合并两个 32 位整数值\n        const combined = littleEndian ? left + 2 ** 32 * right : 2 ** 32 * left + right;\n\n        if (!Number.isSafeInteger(combined))\n            console.warn(combined, 'exceeds MAX_SAFE_INTEGER. Precision may be lost');\n\n        return combined;\n    }\n}"]}
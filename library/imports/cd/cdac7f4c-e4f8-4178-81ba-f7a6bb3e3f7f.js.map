{"version":3,"sources":["assets/script/common/net/CommonService.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\n\nimport { Service } from \"../../framework/base/Service\";\nimport { GameEventInterface } from \"../../framework/base/GameEventInterface\";\nimport { Message } from \"../../framework/net/Message\";\nimport { JsonMessage } from \"../../framework/net/JsonMessage\";\nimport { LobbyService } from \"./LobbyService\";\nimport { Config } from \"../config/Config\";\nimport PanelHelp from \"../../msgbox/PanelHelp\";\nimport { i18n } from \"../language/LanguageImpl\";\nimport { User } from \"../../global/User\";\nimport { Manager } from \"../manager/Manager\";\nimport { MST } from \"../../framework/external/protoc\";\n\n/**@description  网络 mainCmd  配置  */\nexport let serverType = {\n    GateWay: 1001,\n    Lobby: 2001,\n    Crash: 3016,\n}\n\n/**@description 读取 proto 配置  */\nexport let protoPackage = {\n\n    // /**@description 网关身份验证*/\n    // gateway: MST.bt.game.proto.game.gateway,\n\n    // /**@description  大厅*/\n    // hall: MST.bt.game.proto.hall,\n\n    // /**@description  大厅 base */\n    // hallBase: MST.bt.game.proto.hall.base,\n\n    // /**@description  大厅 base */\n    // gameBase: MST.bt.game.proto.game.base,\n\n    hall: MST,\n\n    /**@decription  爆点*/\n    crash: MST,\n\n}\n\nexport class CommonMessage extends JsonMessage {\n}\n\n/**\n * @description service公共基类\n */\n\nexport class CommonService extends Service implements GameEventInterface {\n\n    protected static _instance: CommonService = null;\n    public static get instance() { return this._instance || (this._instance = new CommonService()); }\n\n    /**@description 公共的消息解析类型，必须包含对消息码的解析与打包 */\n    protected get commonMessageType(): typeof Message {\n        return CommonMessage;\n    }\n\n    /**\n     * @description 发送心跳\n     */\n    protected sendHeartbeat() {\n        let req = MST.C2G_Ping_Req.create({ RpcId: Manager.netManager.getNewSeqId() });\n        let buffer = MST.C2G_Ping_Req.encode(req).finish();\n        this.sendMsg(MST.C2G_Ping_Req, MST.OuterOpcode_Gate.C2G_Ping_Req, buffer);\n    }\n    /**\n     * @description 获取最大心跳超时的次数\n     */\n    protected getMaxHeartbeatTimeOut(): number {\n        return super.getMaxHeartbeatTimeOut();\n    }\n\n    protected getHeartbeatInterval() {\n        return super.getHeartbeatInterval();\n    }\n\n    /**\n     * @description 心跳超时\n     */\n    protected onHeartbeatTimeOut() {\n        super.onHeartbeatTimeOut();\n        cc.warn(`心跳超时，您已经断开网络`);\n\n        PanelHelp.showMsgBox('', i18n.WAIT.NETERROR, () => {\n            Manager.uiManager.closeExcept(null);\n            cc.audioEngine.stopAll();\n            super.close();\n            super.reset();\n            cc.game.restart();\n            cc.sys.garbageCollect();\n        })\n    }\n    /**\n     * @description 是否为心跳消息\n     */\n    protected isHeartBeat(data: Message): boolean {\n        //示例\n        return data.mainCmd == MST.OuterOpcode_Gate.G2C_Ping_Res || data.mainCmd == MST.OuterOpcode_Gate.C2G_Ping_Req;\n    }\n\n    onEnterBackground() {\n\n    }\n\n    onEnterForgeground(inBackgroundTime: number) {\n        // if (inBackgroundTime > 30) {\n        //     this.disconnect()\n        // }\n    }\n    /**\n     * 发送信息\n     * @param mainCmd \n     * @param data\n     * @param serverId  \n     */\n    sendMsg(proto, mainCmd, databuffer?, serverId?) {\n        let msg = new CommonMessage();\n        msg.mainCmd = mainCmd;\n        msg.databuffer = databuffer;\n        if (serverId) {\n            msg.serverId = serverId\n        }\n\n        if (this.isHeartBeat(msg)) {\n            // console.log(`发送网络消息 main cmd : ${mainCmd}`);\n        } else {\n            G.Logger.color(`发送消息：`, `${mainCmd}`);\n            G.Logger.log(proto.decode(databuffer));\n        }\n\n        // this.addListener(mainCmd,null,call,false,target);\n        this.send(msg)\n\n    }\n    /**\n     * 重连\n     */\n    disconnect() {\n        G.Logger.log('重连', Config.webServiceCfg);\n        if (Config.webServiceCfg) {\n            this.connect(Config.webServiceCfg.ip, Config.webServiceCfg.wsPort, Config.webServiceCfg.protocol);\n        }\n    }\n\n    onlyServerSendMsg(msg) {\n        super.onlyServerSendMsg(msg);\n        return false;\n        // if (msg.mainCmd == 0) {//系统主动下发心跳\n        //     let msg = new CommonMessage();\n        //     msg.mainCmd = 0;\n        //     this.send(msg);\n        //     return true;\n        // } else if (msg.mainCmd == serverType.Lobby) {//大厅\n\n        //     if (msg.subCmd == protoPackage.hall.HallCmd.HORSE_LANTERN) {//跑马灯 message HorseLantern\n        //         dispatch(\"rollNotice\", msg.data);\n        //         return true;\n        //     }\n        //     if (msg.subCmd == protoPackage.hall.HallCmd.USER_WEALTH) {//更新玩家的金币 积分 砖石 message UserWealth\n        //         User._gold = msg.data.gold;\n        //         User._diamonds = msg.data.diamonds;\n        //         User._points = msg.data.points;\n        //         dispatch(\"updateUserInfo\", msg.data);\n        //         return true;\n        //     }\n\n        // }\n\n    }\n}"]}
{"version":3,"sources":["assets/script/msgbox/ConfirmBox.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UIView from \"../framework/ui/UIView\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { Manager } from \"../common/manager/Manager\";\n\n\nconst { ccclass, property } = cc._decorator;\nexport let ConfirmBoxBtnSprite = {\n    btn_Cancel: \"btn_Cancel\",\n    btn_Confirm: \"btn_Confirm\",\n    btn_Reset: \"btn_Reset\",\n    btn_OK: \"btn_OK\",\n    Go_to_bind_phone: \"Go-to-bind-phone\",\n    btn_yes: \"btn_yes\",\n    btn_no: \"btn_no\",\n    btn_Recharge: \"btn_Recharge\",\n    Update: \"Update\",\n}\n\n//需要动态加载的图标\nconst Dyn_Image = [ConfirmBoxBtnSprite.Update, ConfirmBoxBtnSprite.Go_to_bind_phone, ConfirmBoxBtnSprite.btn_Cancel, ConfirmBoxBtnSprite.btn_Reset,\nConfirmBoxBtnSprite.btn_OK, ConfirmBoxBtnSprite.btn_yes, ConfirmBoxBtnSprite.btn_no, ConfirmBoxBtnSprite.btn_Confirm, , ConfirmBoxBtnSprite.btn_Recharge]\nconst Path_EN = \"common/images/tipsIcon/\";\nconst Path_HI = \"languageRes/hindi/common/tipsIcon/\";\n@ccclass\nexport default class ConfirmBox extends UIView {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property(cc.Label)\n    title: cc.Label = null;\n\n    @property(cc.Node)\n    title_default: cc.Node = null;\n\n\n    @property(cc.Label)\n    cancel_label: cc.Label = null;\n\n    @property(cc.Label)\n    confirm_label: cc.Label = null;\n\n    @property(cc.Button)\n    cancel: cc.Button = null;\n\n    @property(cc.Button)\n    confirm: cc.Button = null;\n\n    okCall: Function;\n    cannelCall: Function;\n    autoclose: boolean;\n\n    public static getPrefabUrl() {\n        return \"msgbox/prefabs/ConfirmBox\";\n    }\n\n    onLoad() {\n        super.onLoad();\n        this.content = cc.find('content', this.node);\n        this.okCall = null;\n    }\n    onEnable() {\n        dispatch(\"showTipPop\")\n    }\n    onDisable() {\n        dispatch(\"hideTipPop\")\n    }\n    show(args) {\n        super.show(args)\n        this.showWithAction(true);\n        if (this.args.length > 0) {\n            let data = this.args[0];\n            let title = data.title;\n            let content = data.content;\n            let isSingle = data.isSingle;\n            let next = data.next || function () { };\n            let cancel = data.cancel || function () { };\n            let cancel_label = data.cancel_label;\n            let confirm_label = data.confirm_label;\n            this.showMsg(title, content, isSingle, next, cancel, cancel_label, confirm_label);\n            this.autoclose = data.autoclose\n        } else {\n            G.Logger.log('参数为空');\n        }\n    }\n    /**\n   * @param title 标题\n   * @param content 提示内容\n   * @param isSingle 是否显示单个确定按钮\n   * @param next 确定回调\n   * @param cancel 取消回调\n   * @param cancel_label 取消按钮文本\n   * @param confirm_label 确定按钮文本\n   */\n    showMsg(title, content, isSingle, next, cancel, cancel_label, confirm_label) {\n        console.log(\"text\", cancel_label, confirm_label);\n        this.okCall = next;\n        this.cannelCall = cancel;\n\n        if (isSingle) {\n            this.cancel.node.active = false;\n        }\n        if (title) {\n            this.title.language = title;\n            this.title.node.active = true;\n            this.title_default.active = false;\n        }\n        if (content) {\n            this.label.language = content;\n        }\n        if (cancel_label) {\n            this.cancel_label.language = cancel_label;\n            this.cancel_label.node.active = true;\n        }\n\n        if (confirm_label) {\n            this.confirm_label.language = confirm_label;\n            this.confirm_label.node.active = true;\n        }\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case \"cancel\": this.cannelCall(); break;\n            case \"confirm\": this.okCall(); break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n        if (this.autoclose) {\n            this.closeWithAction();\n        }\n\n    }\n\n    // update (dt) {}\n}\n"]}
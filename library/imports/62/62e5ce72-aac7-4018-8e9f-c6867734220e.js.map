{"version":3,"sources":["assets/script/framework/Framework.ts"],"names":[],"mappings":";;;;;;;AAAA,8CAA2C;AAC3C,6DAA0D;AAC1D,kDAA+C;AAC/C,gDAA6C;AAC7C,sDAAmD;AACnD,8DAA2D;AAC3D,8DAA2D;AAC3D,gDAAgD;AAChD,+CAA4C;AAE5C,MAAa,gBAAgB;IAEzB,sBAAsB;IACtB,IAAI,QAAQ;QACR,OAAO,wBAAY,CAAC,mBAAQ,CAAC,CAAC;IAClC,CAAC;IAED,wBAAwB;IACxB,IAAI,eAAe;QACf,OAAO,wBAAY,CAAC,iCAAe,CAAC,CAAC;IACzC,CAAC;IAED,8BAA8B;IAC9B,IAAI,QAAQ;QACR,OAAO,wBAAY,CAAC,mBAAQ,CAAC,CAAC;IAClC,CAAC;IAED,wBAAwB;IACxB,IAAI,SAAS;QACT,OAAO,wBAAY,CAAC,qBAAS,CAAC,CAAC;IACnC,CAAC;IAED,uBAAuB;IACvB,IAAI,YAAY;QACZ,OAAO,wBAAY,CAAC,2BAAY,CAAC,CAAC;IACtC,CAAC;IAED,wBAAwB;IACxB,IAAI,YAAY;QACZ,OAAO,wBAAY,CAAC,2BAAY,CAAC,CAAC;IACtC,CAAC;IAED,0BAA0B;IAC1B,IAAI,YAAY;QACZ,OAAO,wBAAY,CAAC,2BAAY,CAAC,CAAC;IACtC,CAAC;IAED,uBAAuB;IACvB,IAAI,OAAO;QACP,OAAO,wBAAY,CAAC,iBAAO,CAAC,CAAC;IACjC,CAAC;CACJ;AAzCD,4CAyCC;AAEY,QAAA,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import { Language } from \"./base/Language\";\nimport { EventDispatcher } from \"./event/EventDispatcher\";\nimport { DataBase } from \"./database/DataBase\";\nimport { UIManager } from \"./base/UIManager\";\nimport { LocalStorage } from \"./base/LocalStorage\";\nimport { AssetManager } from \"./assetManager/AssetManager\";\nimport { CacheManager } from \"./assetManager/CacheManager\";\nimport { getSingleton } from \"./base/Singleton\";\nimport { Adaptor } from \"./adaptor/Adaptor\";\n\nexport class _FramewokManager {\n\n    /**@description 语言包 */\n    get language() {\n        return getSingleton(Language);\n    }\n\n    /**@description 事件派发器 */\n    get eventDispatcher() {\n        return getSingleton(EventDispatcher);\n    }\n\n    /**@description 数据库，仅web下可用 */\n    get dataBase() {\n        return getSingleton(DataBase);\n    }\n\n    /**@description 界面管理器 */\n    get uiManager() {\n        return getSingleton(UIManager);\n    }\n\n    /**@description 本地仓库 */\n    get localStorage() {\n        return getSingleton(LocalStorage);\n    }\n\n    /**@description 资源管理器 */\n    get assetManager() {\n        return getSingleton(AssetManager);\n    }\n\n    /**@description 资源缓存管理器 */\n    get cacheManager() {\n        return getSingleton(CacheManager);\n    }\n\n    /**@description 屏幕适配 */\n    get adaptor() {\n        return getSingleton(Adaptor);\n    }\n}\n\nexport const Manager = new _FramewokManager();"]}
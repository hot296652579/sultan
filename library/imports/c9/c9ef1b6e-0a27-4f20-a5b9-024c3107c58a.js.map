{"version":3,"sources":["assets/script/login/LoginNewView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameConfig } from \"../common/base/HotUpdate\";\nimport { Config } from \"../common/config/Config\";\nimport { dispatchEnterComplete, LogicEvent, LogicType } from \"../common/event/LogicEvent\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { gameManager } from \"../common/manager/GameManager\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { CommonMessage, protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { EventApi } from \"../framework/event/EventApi\";\nimport { HttpErrorType, RequestPackge } from \"../framework/net/HttpClient\";\nimport UIView from \"../framework/ui/UIView\";\nimport { User } from \"../global/User\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport { ShareTraceHelpder } from \"../Helpder/shareTrace/ShareTraceHelpder\";\nimport LanguageChange from \"../common/language/LanguageChange\";\nimport ServiceView from \"../service/ServiceView\";\nimport RichTextHandler from \"./RichTextHandler\";\nimport { UIManager } from \"../framework/base/UIManager\";\nimport RegisterView from \"./RegisterView\";\nimport ForgetPassView from \"./ForgetPassView\";\nimport { MST } from \"../framework/external/protoc\";\nimport UserData from \"../data/UserData\";\nimport * as LocalStoreageDefine from \"../common/define/LocalStorageDefine\";\nimport fbsdk from \"../sdk/fbsdk\";\nimport Validator from \"./Validator\";\nimport googlesdk from \"../sdk/googlesdk\";\nimport BindPhoneView from \"../common/bindItemView/BindPhoneView\";\nimport AppData from \"../data/AppData\";\n\n\nconst { ccclass, property } = cc._decorator;\n\nexport enum LoginType {\n    phone = 1,\n    tourist = 2,\n    password = 3,\n    facebook = 4,\n}\n\n/**\n * @description 登录方式逻辑事件定义\n */\nexport let LoginEvent = {\n    /**@description 进行指定场景完成 */\n    TOURIST: \"TOURIST\",\n\n    /**@description 进入大厅*/\n    FACEBOOK: \"FACEBOOK\",\n\n    /**@description 进入游戏 */\n    PHONE: \"PHONE\",\n\n};\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class LoginNewView extends UIView implements IController<LobbyService> {\n\n    @property(cc.Node)\n    btnBack: cc.Node = null;\n\n    @property(cc.Node)\n    hidePassNode: cc.Node = null;\n\n    @property(cc.Node)\n    btnForgetPass: cc.Node = null;\n\n    @property(cc.Node)\n    btnRegister: cc.Node = null;\n\n    @property(cc.EditBox)\n    emailEditbox: cc.EditBox = null;\n    @property(cc.EditBox)\n    pwdEditbox: cc.EditBox = null;\n\n    loginType: any = null;\n    outTimeCall: NodeJS.Timeout;\n    isAuto: boolean;\n\n    public static getPrefabUrl() {\n        return \"login/prefabs/LoginNewView\";\n    }\n    service: LobbyService = null;\n    onLoad() {\n        super.onLoad();\n        // this.audioHelper.playMusic(\"common/audio/login_bgm\", BUNDLE_RESOURCES);\n\n        this.btnBack.on(cc.Node.EventType.TOUCH_END, () => {\n            this.close();\n        });\n        this.btnForgetPass.on(cc.Node.EventType.TOUCH_END, () => {\n            this.clickForgetPass()\n        });\n        this.btnRegister.on(cc.Node.EventType.TOUCH_END, () => {\n            this.clickRegister()\n        });\n\n        // this.pwdEditbox.inputFlag = cc.EditBox.InputFlag.DEFAULT;\n    }\n\n    bindingEvents() {\n        super.bindingEvents();\n\n        this.registerEvent(LogicEvent.ENTER_HALL, this.onEnterHall);\n        this.registerEvent('updateUserInfo', this.onEnterHall);\n    }\n    onEnterHall() {\n        this.checkBindPhone();\n        this.close()\n    }\n\n    checkBindPhone() {\n        let userData = G.DataMgr.get(UserData);\n        if (userData.id !== null) {\n            if (!userData.BindPhone) {\n                Manager.uiManager.open({ type: BindPhoneView, bundle: BUNDLE_RESOURCES });\n            }\n        }\n    }\n\n    start() {\n        fbsdk.instance.init();\n        this.refreshPlayInfo()\n    }\n\n    refreshPlayInfo() {\n        let userData = G.DataMgr.get(UserData);\n        let playerInfo = userData['PlayerInfo'];\n        if (playerInfo) {\n\n        }\n    }\n\n    clickForgetPass() {\n        Manager.uiManager.open({ type: ForgetPassView, bundle: BUNDLE_RESOURCES });\n    }\n    clickRegister() {\n        Manager.uiManager.open({ type: RegisterView, bundle: BUNDLE_RESOURCES });\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case 'btnMasuk':\n                this.todoLogin()\n                break;\n            case 'btnFacebook':\n                this.facebookLogin()\n                break;\n            case 'btnGoogle':\n                this.googleLogin()\n                break;\n            case 'btnTelegram':\n                this.telegramLogin()\n                break;\n            case 'btnTestLogin':\n                this.testLogin()\n                break;\n            case 'btnHidePassword':\n                this.clickHidePass()\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    clickHidePass() {\n        let iconHide = this.hidePassNode.getChildByName('iconHide');\n        let iconShow = this.hidePassNode.getChildByName('iconShow');\n\n        iconHide.active = !iconHide.active;\n        iconShow.active = !iconShow.active;\n\n        this.pwdEditbox.inputFlag = iconShow.active ? cc.EditBox.InputFlag.DEFAULT : cc.EditBox.InputFlag.PASSWORD;\n    }\n\n    validataFunc() {\n        let validator = new Validator()\n\n        let email = this.emailEditbox.string\n        let pwd = this.pwdEditbox.string\n\n        validator.add(email, [{\n            strategy: 'isNonEmpty',\n            errorMsg: i18n.EDITBOX.EMAILNULL\n        }]);\n\n        validator.add(pwd, [{\n            strategy: 'isNonEmpty',\n            errorMsg: i18n.EDITBOX.PSWNULL\n        }]);\n\n        validator.add(email, [{\n            strategy: 'isEmail',\n            errorMsg: i18n.REGISTER.EMAILWRONG\n        }]);\n\n        let errorMsg = validator.start()\n        return errorMsg\n    }\n\n    todoLogin() {\n        let _appData = G.DataMgr.get(AppData);\n        let email = this.emailEditbox.string;\n        let pwd = this.pwdEditbox.string;\n        let invcode = _appData.invcode;\n        let errorMsg = this.validataFunc()\n        if (errorMsg) {\n            PanelHelp.showTip(errorMsg);\n            // console.log(errorMsg)\n            return;\n        }\n\n        let ThirdId = 'test ThirdId';\n        let imei = Manager.localStorage.getItem('IMEI');\n        if (!imei) {\n            imei = 'test imei' + Math.floor(Math.random() * 10000 + 1)\n            Manager.localStorage.setItem('IMEI', imei);\n        }\n\n        let req = MST.C2M_Auth_Req.create({\n            RpcId: Manager.netManager.getNewSeqId(),\n            AuthKey: email.toString(),\n            Password: pwd,\n            AuthType: 1,\n            imei,\n            ThirdId,\n            invcode\n        });\n        let buffer = MST.C2M_Auth_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2M_Auth_Req, MST.OuterOpcode_Map.C2M_Auth_Req, buffer);\n    }\n\n    telegramLogin() {\n        // console.log(window)\n        let self = this\n        let Telegram = window['Telegram'];\n        if (!Telegram) return;\n        // var auth_params = {\n        //     bot_id: 5237567521, // place id of your bot here\n        //     scope: { data: [{ type: 'id_document', selfie: true }, 'address_document', 'phone_number', 'email'], v: 1 },\n        //     public_key: '-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtf7eK/OK+bU3bDJz9rF+0BWcTcNekCv122jEOQTXIEq+p+I+my/2GmAZSMU3NlH9e+PigS/rH8cW8ULT0KVXGAHQPVwYqvpvljFkkAEdbqkFgqXZML82+Asw+xGBPxERMbLfa4lJazxZlJ95I2HQn9csOfT0+pLfJdHYmrm0XBtcB8fEfXigHarAI6lY0kpM8OMiULS0s2ZtC6NYoSKLa4nN6C/+D5v796gHxYWHj8rzyeIJLwJ9vA2BXOAH+iB1jsR27kbRaWCKJ2JG3Gz53A/xqKBOzzUUPKX3yawINOAzUXHJY1J+svai4tTf9RO4EKcoLnK77QKyo4Ulp95DEwIDAQAB-----END PUBLIC KEY-----', // place public key of your bot here\n        //     nonce: 'AAHGOnhKdMJFaSRZL-vlj-27wEvpBK9kEBM', // place nonce here\n        //     callback_url: function (data) {\n        //         console.log(data);\n        //     } // place callback url here\n        // };\n        // Telegram.Passport.auth(auth_params, function (show) {\n        //     if (show) {\n        //         // some code to show tooltip\n        //         console.log(show)\n        //     } else {\n        //         // some code to hide tooltip\n        //         console.log(show)\n        //     }\n        // });\n\n        Telegram.Login.auth({ bot_id: '5556295577', request_access: 'read', embed: 1 }, (data) => {\n            console.log(data, '这是回调数据');//这里的data和之前返回的user数据和格式无差异\n            //例子返回数据\n            // auth_date: 1656053541\n            // first_name: \"Groden\"\n            // hash: \"427bec247bdf54ff634efd4a1be0ea9c4ecef6e4062ad2a1d86a151b9d58c5c4\"\n            // id: 5380592530\n            // last_name: \"wong\"\n            if (!data) {\n                //失败时你需要做的逻辑\n                alert(data);\n            }\n            //电报登录成功你需要做的逻辑（这里我是直接写了一个函数去调用登录成功后的业务逻辑）\n            // console.log(data)\n            let _appData = G.DataMgr.get(AppData);\n            let invcode = _appData.invcode;\n            let imei = Manager.localStorage.getItem('IMEI');\n            if (!imei) {\n                imei = 'test imei' + Math.floor(Math.random() * 10000 + 1)\n                Manager.localStorage.setItem('IMEI', imei);\n            }\n            let args = {}\n            args['AuthKey'] = JSON.stringify(data)\n            console.log(args['AuthKey']);\n            args['Password'] = '123456'\n            args['AuthType'] = 5\n            args['imei'] = imei\n            args['invcode'] = invcode\n            self.requestLoginHandler(args)\n        });\n\n        // const script = document.createElement('script');\n    }\n\n    testLogin() {\n        let AuthKey = String(Math.floor(Math.random() * 10000 + 1))\n        let imei = Manager.localStorage.getItem('IMEI');\n        if (!imei) {\n            imei = 'test imei' + Math.floor(Math.random() * 10000 + 1)\n            Manager.localStorage.setItem('IMEI', imei);\n        }\n        let _appData = G.DataMgr.get(AppData);\n        let invcode = _appData.invcode;\n        let args = {}\n        args['AuthKey'] = AuthKey\n        args['Password'] = ''\n        args['ThirdId'] = ''\n        args['AuthType'] = 6\n        args['imei'] = imei\n        args['invcode'] = invcode\n        this.requestLoginHandler(args)\n    }\n\n    facebookLogin() {\n        let self = this\n        fbsdk.instance.FB_Login(function (info) {\n            if (info) {\n                let imei = Manager.localStorage.getItem('IMEI');\n                if (!imei) {\n                    imei = 'test imei' + Math.floor(Math.random() * 10000 + 1)\n                    Manager.localStorage.setItem('IMEI', imei);\n                }\n\n                let _appData = G.DataMgr.get(AppData);\n                let invcode = _appData.invcode;\n\n                // let Password = '123456'\n                // let req = MST.C2M_Auth_Req.create({\n                //     RpcId: Manager.netManager.getNewSeqId(),\n                //     AuthKey,\n                //     Password,\n                //     AuthType: 3,\n                //     ThirdId,\n                //     imei: 'test imei'\n                // });\n                // let buffer = MST.C2M_Auth_Req.encode(req).finish();\n                // LobbyService.instance.sendMsg(MST.C2M_Auth_Req, MST.OuterOpcode_Map.C2M_Auth_Req, buffer);\n                alert('facebook 收到回调数据');\n                if (info) {\n                    console.log('fb,info.accessToken : ' + info.accessToken);\n                    console.log('fb info.id : ' + info.id);\n                    let args = {}\n                    args['AuthKey'] = info.accessToken\n                    args['Password'] = '123456'\n                    args['ThirdId'] = info.id\n                    args['AuthType'] = 3\n                    args['imei'] = imei\n                    args['invcode'] = invcode\n                    self.requestLoginHandler(args)\n                }\n            }\n        })\n    }\n\n    googleLogin() {\n        let self = this\n        googlesdk.instance.Google_Login(function (info) {\n            if (info) {\n                let imei = Manager.localStorage.getItem('IMEI');\n                if (!imei) {\n                    imei = 'test imei' + Math.floor(Math.random() * 10000 + 1)\n                    Manager.localStorage.setItem('IMEI', imei);\n                }\n                let _appData = G.DataMgr.get(AppData);\n                let invcode = _appData.invcode;\n                let args = {}\n                args['AuthKey'] = info.id\n                args['Password'] = '123456'\n                args['AuthType'] = 2\n                args['imei'] = imei\n                args['invcode'] = invcode\n                self.requestLoginHandler(args)\n            }\n        })\n    }\n\n    requestLoginHandler(args) {\n        let AuthKey = args['AuthKey']\n        let Password = args['Password']\n        let AuthType = args['AuthType']\n        let ThirdId = args['ThirdId']\n        let imei = args['imei']\n        let invcode = args['invcode']\n        let req = MST.C2M_Auth_Req.create({\n            RpcId: Manager.netManager.getNewSeqId(),\n            AuthKey,\n            Password,\n            ThirdId,\n            AuthType,\n            imei,\n            invcode\n        });\n        let buffer = MST.C2M_Auth_Req.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2M_Auth_Req, MST.OuterOpcode_Map.C2M_Auth_Req, buffer);\n    }\n\n    onDestroy() {\n        super.onDestroy();\n    }\n\n}\n"]}
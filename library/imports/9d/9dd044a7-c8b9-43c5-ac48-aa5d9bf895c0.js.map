{"version":3,"sources":["assets/script/framework/base/Language.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { getSingleton } from \"../../framework/base/Singleton\";\nimport { EventApi } from \"../event/EventApi\";\nimport { ENABLE_CHANGE_LANGUAGE, USING_LAN_KEY } from \"./Defines\";\nimport { Manager } from \"../Framework\";\nconst LANG_KEY: string = \"using_language\";\n\nexport interface LanguageData {\n    language: string;\n}\n\nexport interface LanguageDelegate {\n    data(language: string): LanguageData;\n}\n\nexport class Language {\n\n    private static _instance: Language = null;\n    public static Instance() { return this._instance || (this._instance = new Language()); }\n\n    private _data: LanguageData = { language: \"unknown\" };\n    private _delegate: LanguageDelegate;\n    public set delegate(value) {\n        this._delegate = value;\n        this.change(this.getLanguage());\n    }\n    public get delegate() {\n        return this._delegate;\n    }\n\n    /**\n     * @description 改变语言包\n     * @param language 语言包类型\n     */\n    public change(language: string) {\n        if (!this.delegate) {\n            //请先设置代理\n            return;\n        }\n        if (this._data && this._data.language == language) {\n            //当前有语言包数据 相同语言包，不再进行设置\n            return;\n        }\n        if ( ENABLE_CHANGE_LANGUAGE ){\n            this._data = this.delegate.data(language);\n            Manager.localStorage.setItem(LANG_KEY, this._data.language);\n            dispatch(EventApi.CHANGE_LANGUAGE,language);\n        }else{\n            this._data = this.delegate.data(this.getLanguage());\n            Manager.localStorage.setItem(LANG_KEY, this._data.language);\n        }\n\n    }\n\n    public get(args: (string | number)[]) {\n        let result = \"\";\n        do {\n            if (!!!args) break;\n            if (args.length < 1) break;\n            let keyString = args[0];\n            if (typeof keyString != \"string\") {\n                cc.error(\"key error\");\n                break;\n            }\n            if (keyString.indexOf(USING_LAN_KEY) > -1 ) {\n\n                let keys = keyString.split(\".\");\n                if (keys.length < 2) {\n                    cc.error(\"key error\");\n                    break;\n                }\n                keys.shift();//删除掉i18n.的头部\n                args.shift();\n                result = this._data[keys[0]];\n                if (!result) {\n                    cc.error(`语言包不存在 : ${keyString}`);\n                    break;\n                }\n                let i = 1;\n                for (; i < keys.length; i++) {\n                    if (result[keys[i]] == undefined) {\n                        break;\n                    }\n                    result = result[keys[i]];\n                }\n                if (i != keys.length) {\n                    cc.error(`语言包不存在 : ${keyString}`);\n                }\n                result = String.format(result, args);\n            } else {\n                //已经是取出的正确语言包，直接格式化\n                keyString = args.shift();\n                return String.format(keyString, args);\n            }\n        } while (0);\n        return result;\n    }\n\n    /**@description 获取语言包名 */\n    public getLanguage() {\n        // return Manager.localStorage.getItem(LANG_KEY, cc.sys.LANGUAGE_CHINESE);\n        return Manager.localStorage.getItem(LANG_KEY, cc.sys.LANGUAGE_ENGLISH);\n    }\n}\n"]}
{"version":3,"sources":["assets/script/activity/MissionView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameConfig } from \"../common/base/HotUpdate\";\nimport { Config } from \"../common/config/Config\";\nimport { dispatchEnterComplete, LogicEvent, LogicType } from \"../common/event/LogicEvent\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { gameManager } from \"../common/manager/GameManager\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { CommonMessage, protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { EventApi } from \"../framework/event/EventApi\";\nimport { HttpErrorType, RequestPackge } from \"../framework/net/HttpClient\";\nimport UIView from \"../framework/ui/UIView\";\nimport { User } from \"../global/User\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport { ShareTraceHelpder } from \"../Helpder/shareTrace/ShareTraceHelpder\";\nimport LanguageChange from \"../common/language/LanguageChange\";\nimport ServiceView from \"../service/ServiceView\";\nimport { UIManager } from \"../framework/base/UIManager\";\nimport AkunView from \"../akun/AkunView\";\nimport HallNewView from \"../hall/HallNewView\";\nimport LoginNewView from \"../login/LoginNewView\";\nimport WalletView from \"../wallet/WalletView\";\nimport ScroViewPlus from \"../common/component/ScroViewPlus\";\nimport ScroViewCtrl from \"../common/component/ScroViewCtrl\";\nimport MissionItem from \"./MissionItem\";\nimport { MST } from \"../framework/external/protoc\";\nimport UserData from \"../data/UserData\";\nimport SigninNew from \"../signin/SigninNew\";\nimport HallData from \"../data/HallData\";\n\nconst { ccclass, property } = cc._decorator;\n/**\n * @description 登录方式逻辑事件定义\n */\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class MissionView extends UIView implements IController<LobbyService> {\n    service: LobbyService;\n\n    @property(ScroViewPlus)\n    scrollView: ScroViewPlus = null;\n    _clickItemId: number = 0;\n    _missionList = [];\n    missionId: number = null;\n\n    public static getPrefabUrl() {\n        return \"mission/prefabs/MissionView\";\n    }\n\n    onLoad() {\n        super.onLoad();\n        // this.audioHelper.playMusic(\"common/audio/login_bgm\", BUNDLE_RESOURCES);\n    }\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent('Event_S2C_GetMissionList', this.onEvent_S2C_GetMissionList);\n        this.registerEvent('Event_S2C_MissionClaim', this.onEvent_S2C_MissionClaim);\n        this.registerEvent('updateUserInfo', this.onEvent_S2C_GetMissionList);\n    }\n\n    show() {\n        this.requestGetMissionList();\n    }\n\n    requestGetMissionList() {\n        let req = MST.C2S_GetMissionList.create({\n            serial: Manager.netManager.getNewSeqId()\n        });\n        let buffer = MST.C2S_GetMissionList.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2S_GetMissionList, MST.OuterOpcode_Lobby.C2S_GetMissionList, buffer);\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case 'btnHome':\n                Manager.uiManager.open({ type: HallNewView, bundle: BUNDLE_RESOURCES });\n                this.close();\n                break;\n            case 'btnDompet':\n                Manager.uiManager.open({ type: WalletView, bundle: BUNDLE_RESOURCES });\n                this.close();\n                break;\n            case 'btnLogin':\n                Manager.uiManager.open({ type: LoginNewView, bundle: BUNDLE_RESOURCES });\n                break;\n            case 'btnEvent':\n                // Manager.uiManager.open({ type: MissionView, bundle: BUNDLE_RESOURCES });\n                break;\n            case 'btnAkun':\n                Manager.uiManager.open({ type: AkunView, bundle: BUNDLE_RESOURCES });\n                this.close();\n                break;\n            case 'btnQiandao':\n                if (this.checkLogined())\n                    Manager.uiManager.open({ type: SigninNew, bundle: BUNDLE_RESOURCES });\n                break;\n        }\n\n    }\n\n    checkLogined() {\n        let userData = G.DataMgr.get(UserData);\n        if (!userData.id) {\n            Manager.uiManager.open({ type: LoginNewView, bundle: BUNDLE_RESOURCES });\n            return false;\n        }\n        return true;\n    }\n\n    onEvent_S2C_GetMissionList() {\n        let hallData = G.DataMgr.get(HallData);\n        let missionList = hallData.missionList;\n        if (missionList) {\n            this._missionList = missionList;\n            this.MissionItemView(missionList);\n        }\n    }\n\n    onEvent_S2C_MissionClaim(data) {\n        PanelHelp.showTip(i18n.MISSION.RECEIVEDSUCCESS);\n\n        let index = 0;\n        let missionId = data.missionId;\n        for (let index = 0; index < this._missionList.length; index++) {\n            const info = this._missionList[index];\n            if (data.missionId == missionId) {\n                info.curProgress = 0;\n                break;\n            }\n            index++;\n        }\n\n        this.scrollView.content.children.forEach((element) => {\n            let missionItemCom = element.getComponent(MissionItem)\n            let _missionId = missionItemCom.missionId\n            if (_missionId == missionId) {\n                missionItemCom.updateData(this._missionList[index])\n            }\n        })\n    }\n\n    async MissionItemView(missionList) {\n        let scroViewCtrlCom = this.getComponent(ScroViewCtrl)\n        scroViewCtrlCom.dataList = missionList\n        scroViewCtrlCom.onItemClickCallback = this.onClickEmailItem.bind(this)\n        await scroViewCtrlCom.framingLoad(missionList.length)\n    }\n\n    onClickEmailItem(_itemId) {\n        this._clickItemId = _itemId\n        // this.scrollView.content.children.forEach((element) => {\n        //     let emailItemCom = element.getComponent(MissionItem)\n        //     let itemId = emailItemCom._itemId\n        //     if (_itemId == itemId) {\n        //         emailItemCom.updateData(this._missionList[this._clickItemId])\n        //     } else {\n        //         emailItemCom.bgCheck.active = false\n        //     }\n        // })\n        let missionId = this._missionList[_itemId].missionId;\n        this.missionId = missionId;\n        this.requestMissionClaim();\n    }\n\n    requestMissionClaim() {\n        let req = MST.C2S_MissionClaim.create({\n            serial: Manager.netManager.getNewSeqId(),\n            missionId: this.missionId\n        });\n        let buffer = MST.C2S_MissionClaim.encode(req).finish();\n        LobbyService.instance.sendMsg(MST.C2S_MissionClaim, MST.OuterOpcode_Lobby.C2S_MissionClaim, buffer);\n    }\n\n    onDestroy() {\n        super.onDestroy();\n    }\n\n}\n"]}
{"version":3,"sources":["assets/script/common/component/NoticeItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,qEAA8E;AAE9E,uEAA+C;AAM/C,sDAAmD;AAEnD,mEAA2C;AAE3C,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAI5C,IAAqB,UAAU,GAA/B,MAAqB,UAAW,SAAQ,gBAAM;IAA9C;;QAGI,UAAK,GAAgB,IAAI,CAAC;QAG1B,SAAI,GAAY,IAAI,CAAC;QAErB,WAAM,GAAW,IAAI,CAAC;QACtB,SAAI,GAAW,IAAI,CAAC;QAEpB,UAAK,GAAG,EAAE,CAAC;QAEX,YAAO,GAAiB,IAAI,CAAC;IAwFjC,CAAC;IAvFG,MAAM;QACF,sCAAsC;QACtC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAEhC,MAAM;QACN,0CAA0C;QAC1C,iCAAiC;QACjC,8EAA8E;QAC9E,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,KAAK;IAEL,CAAC;IAED,QAAQ;QACJ,IAAI,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAQ,CAAC,CAAC;QACvC,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC9B,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;YACnB,OAAO;QAEX,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,GAAG,CAAC;QACR,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;YAChB,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;;YAErC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAA;QAExB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,EAAE;QACL,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;SACnC;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACzC,CAAC;IAED,aAAa;QACT,KAAK,CAAC,aAAa,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,yBAAyB,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAClF,CAAC;IAED,yBAAyB;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAED,aAAa;QACT,uEAAuE;QACvE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAChC,IAAI,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAQ,CAAC,CAAC;YACvC,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC9B,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;gBACnB,OAAO;YAEX,IAAI,GAAG,CAAC;YACR,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;gBACtB,IAAI,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACjC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAClC;;gBACG,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA;YAE5B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YAExB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;gBAClB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B;IACL,CAAC;IAED,UAAU,CAAC,OAAO;QACd,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC1C,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC7C,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,GAAG,GAAG,kBAAkB,IAAI,0BAA0B,EAAE,0BAA0B,IAAI,MAAM,CAAC;QACjG,OAAO,GAAG,CAAC;IACf,CAAC;IAED,SAAS;QACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;CACJ,CAAA;AAlGG;IADC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;yCACI;AAG1B;IADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wCACG;AANJ,UAAU;IAF9B,OAAO;IACP,0BAAa,CAAC,2BAAY,CAAC,QAAQ,CAAC;GAChB,UAAU,CAqG9B;kBArGoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import { IController } from \"../../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../../framework/decorator/Decorators\";\nimport { RequestPackge } from \"../../framework/net/HttpClient\";\nimport UIView from \"../../framework/ui/UIView\";\nimport PanelHelp from \"../../msgbox/PanelHelp\";\nimport { Config } from \"../config/Config\";\nimport { i18n } from \"../language/LanguageImpl\";\nimport { Manager } from \"../manager/Manager\";\nimport { protoPackage, serverType } from \"../net/CommonService\";\nimport { LobbyService } from \"../net/LobbyService\";\nimport { Type } from \"protobufjs\";\nimport HallData from \"../../data/HallData\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class NoticeItem extends UIView implements IController<LobbyService>{\n\n    @property(cc.RichText)\n    label: cc.RichText = null;\n\n    @property(cc.Node)\n    mask: cc.Node = null;\n\n    startX: number = null;\n    endX: number = null;\n\n    speed = 20;\n\n    service: LobbyService = null;\n    onLoad() {\n        //guest162468409 win Rp3800000in Crash\n        let contentSize = this.label.node.getBoundingBox();\n        this.startX = this.mask.width * this.mask.anchorX;\n        this.endX = -this.mask.width * this.mask.anchorX - contentSize.size.width;\n        this.label.node.x = this.startX;\n\n        //test\n        // let hallData = G.DataMgr.get(HallData);\n        // let notices = hallData.notice;\n        // notices.push({ message: \"guest162468409 win Rp3800000in Crash\", type: 0 });\n        this.initView();\n    }\n\n    start() {\n\n    }\n\n    initView() {\n        let hallData = G.DataMgr.get(HallData);\n        let notices = hallData.notice;\n        if (notices.length <= 0)\n            return;\n\n        let notice = notices[0];\n        let str;\n        if (notice.type == 0)\n            str = this.getRichTxt(notice.message)\n        else\n            str = notice.message\n\n        this.label.string = str;\n    }\n\n    update(dt) {\n        if (this.label.node.x <= this.endX) {\n            this.label.node.x = this.startX;\n        }\n        this.label.node.x -= this.speed * dt;\n    }\n\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent('Event_S2C_MessageNotify', this.onEvent_S2C_MessageNotify);\n    }\n\n    onEvent_S2C_MessageNotify() {\n        this.schedule(this.checkLabelPos);\n    }\n\n    checkLabelPos() {\n        // console.log('this.label.node.x:++++++++++++++' + this.label.node.x);\n        if (this.label.node.x <= this.endX) {\n            let hallData = G.DataMgr.get(HallData);\n            let notices = hallData.notice;\n            if (notices.length <= 0)\n                return;\n\n            let str;\n            if (notices[0].type == 0) {\n                let message = notices[0].message;\n                str = this.getRichTxt(message);\n            } else\n                str = notices[0].message\n\n            this.label.string = str;\n\n            if (notices.length > 1)\n                notices.splice(0, 1);\n        }\n    }\n\n    getRichTxt(message) {\n        let winIndex = message.lastIndexOf('win');\n        let rpIndex = message.lastIndexOf('Rp');\n        let inIndex = message.lastIndexOf('in ');\n\n        let name = message.substring(0, winIndex);\n        let rp = message.substring(rpIndex, inIndex);\n        let game = message.substring(inIndex, message.length);\n        let str = `<color=#ffffff>${name}</c><color=#E1BC11> win${rp}</color><color=#ffffff>${game}</c>`;\n        return str;\n    }\n\n    onDestroy(): void {\n        this.unschedule(this.checkLabelPos);\n    }\n}\n"]}
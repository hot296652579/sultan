{"version":3,"sources":["assets/script/piggyBank/PBTransferInView.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,6DAA0D;AAC1D,kEAA2E;AAC3E,oEAA4C;AAC5C,oEAA4C;AAE5C,yCAAsC;AACtC,+CAA4C;AAC5C,oEAA4C;AAC5C,kEAAuD;AACvD,+DAAuE;AACvE,uDAAoD;AACpD,kFAA0D;AAE1D,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAE5C,OAAO;AACP,MAAM,QAAQ,GAAW,MAAM,CAAC;AAChC,OAAO;AACP,MAAM,UAAU,GAAW,IAAI,CAAC;AAIhC,IAAqB,gBAAgB,GAArC,MAAqB,gBAAiB,SAAQ,gBAAM;IAApD;;QAIY,qBAAgB,GAAa,IAAI,CAAC;QAGlC,iBAAY,GAAa,IAAI,CAAC;QAG9B,0BAAqB,GAAa,IAAI,CAAC;QAGvC,kBAAa,GAAe,IAAI,CAAC;QAGjC,+BAA0B,GAAa,IAAI,CAAC;QAG5C,mBAAc,GAAa,IAAI,CAAC;QAGhC,QAAG,GAAa,IAAI,CAAC;QAE7B,OAAO;QACC,uBAAkB,GAAW,CAAC,CAAC;QACvC,YAAY;QACJ,kBAAa,GAAW,EAAE,CAAC;IAoOvC,CAAC;IAlOU,MAAM,CAAC,YAAY;QACtB,OAAO,oCAAoC,CAAC;IAChD,CAAC;IAED,MAAM;QACF,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAErD,CAAC;IAED,KAAK;QACD,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,mBAAI,CAAC,UAAU,CAAC,GAAG,CAAC;QACxC,IAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QACvE,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,mBAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC;QAE3F,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,aAAa,GAAG,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC5D,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,mBAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAE5E,IAAI,qBAAqB,GAAG,OAAO,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;QAC5E,qBAAqB,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,mBAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAEtF,IAAI,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACpD,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,mBAAI,CAAC,UAAU,CAAC,MAAM,CAAC;IAEvE,CAAC;IAED,aAAa;QACT,KAAK,CAAC,aAAa,EAAE,CAAC;QAEtB,IAAI,CAAC,aAAa,CAAC,oBAAO,CAAC,0BAAU,CAAC,KAAK,EAAE,4BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACpH,CAAC;IAED,IAAI;QACA,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAChC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;QACvC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc;QACV,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,mBAAmB,GAAW,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC5D,IAAI,mBAAmB,GAAW,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAC9D,IAAI,eAAe,GAAW,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE1D,IAAI,mBAAmB,CAAC,MAAM,IAAI,CAAC,EAAE;YACjC,mBAAS,CAAC,OAAO,CAAC,mBAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YACnD,OAAO;SACV;QAED,IAAI,mBAAmB,KAAK,CAAC,IAAI,eAAe,IAAI,CAAC,EAAE;YACnD,mBAAS,CAAC,OAAO,CAAC,mBAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YACnD,OAAO;SACV;QAED,IAAI,mBAAmB,GAAG,MAAM,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,KAAK,EAAE;YAC1F,mBAAS,CAAC,OAAO,CAAC,mBAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YACnD,OAAO;SACV;QAED,IAAI,mBAAmB,GAAG,CAAC,WAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE;YAC5C,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACzD;QAED,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC;QAE9C,IAAI,GAAG,GAAG,4BAAY,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,mBAAmB,GAAG,KAAK,EAAE,CAAC,CAAC;QAC5F,IAAI,MAAM,GAAG,4BAAY,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACpE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,0BAAU,CAAC,KAAK,EACjC,4BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAC3C,MAAM,CAAC,CAAC;IAEhB,CAAC;IAED,UAAU;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;QACjI,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;IAED,UAAU,CAAC,MAAkB;IAE7B,CAAC;IAED,UAAU,CAAC,MAAkB;QACzB,IAAI,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;QACjI,IAAI,cAAc,GAAW,MAAM,CAAC,MAAM,CAAC;QAE3C,IAAI,cAAc,GAAW,MAAM,CAAC,cAAc,CAAC,CAAC;QACpD,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE;YACvB,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,OAAO;SACV;QACD,IAAI,cAAc,GAAG,aAAa,EAAE;YAChC,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;YAC7C,OAAO;SACV;QACD,IAAI,cAAc,IAAI,CAAC,EAAE;YACrB,cAAc,GAAG,IAAI,CAAC;SACzB;QACD,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;IAED,YAAY,CAAC,GAAW;QACpB,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;YACjB,OAAO;SACV;QAED,IAAI,GAAG,GAAW,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;YAC/C,OAAO;SACV;QAED,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAEzB,IAAI,cAAc,GAAW,MAAM,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE;YACvB,OAAO;SACV;QAED,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;IAED,cAAc,CAAC,IAAI;QACf,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,mBAAS,CAAC,OAAO,CAAC,iBAAO,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9E,OAAO;SACV;QAED,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QAC9H,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QACpJ,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QAC5I,mBAAS,CAAC,OAAO,CAAC,mBAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAEO,wBAAwB,CAAC,MAAe;QAC5C,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;SAClC;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;SACjD;QAED,IAAI,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACnE,IAAI,WAAW,GAAW,MAAM,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;QAC7F,IAAI,QAAQ,GAAW,WAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1C,IAAI,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,0BAA0B,CAAC,MAAM,GAAG,iBAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC;QAEtF,IAAI,eAAe,GAAW,EAAE,CAAC;QAEjC,IAAI,WAAW,GAAG,QAAQ,EAAE;YACxB,eAAe,GAAG,mBAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC;SAC1D;aAAM,IAAI,QAAQ,GAAG,QAAQ,EAAE;YAC5B,eAAe,GAAG,mBAAI,CAAC,UAAU,CAAC,2BAA2B,CAAC;SACjE;aAAM;YACH,eAAe,GAAG,mBAAI,CAAC,UAAU,CAAC,YAAY,GAAG,GAAG,QAAQ,MAAM,QAAQ,EAAE,CAAC;SAChF;QAED,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,eAAe,CAAC;QACjD,IAAI,MAAM,GAAW,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,SAAS,GAAW,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,MAAM,KAAK,CAAC,EAAE;YACd,SAAS,GAAG,iBAAO,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,SAAS,CAAC;IAC3C,CAAC;IAEO,QAAQ;QACZ,IAAI,IAAI,GAA2C,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;QAEpF,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,WAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAO,CAAC,WAAW,CAAC,WAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC9F,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,iBAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,iBAAiB,GAAG,iBAAO,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;QACnE,IAAI,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;YACtC,iBAAiB,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC,EAAE,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;SACrF;QACD,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,iBAAiB,CAAC;QACtD,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IAEO,WAAW,CAAC,YAAoB,EAAE;QACtC,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,MAAM,GAAW,UAAU,CAAC;QAChC,IAAI,IAAI,GAAW,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACjE,IAAI,WAAW,GAAW,CAAC,CAAC;QAC5B,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAI,UAAU,GAAW,MAAM,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;gBACpB,MAAM,GAAG,UAAU,CAAC;aACvB;SACJ;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;SAC1C;QAED,OAAO,WAAW,CAAC;IACvB,CAAC;IAEO,SAAS,CAAC,MAAc;QAC5B,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;YACzC,MAAM,GAAG,CAAC,CAAC;SACd;aAAM;YACH,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;gBACf,MAAM,GAAG,CAAC,CAAC;aACd;SACJ;QAED,IAAI,MAAM,GAAW,CAAC,CAAC;QAEvB,IAAI,IAAI,GAAW,mBAAS,CAAC,GAAG,CAAC,uBAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC/E,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,GAAG,iBAAO,CAAC,OAAO,CAAC,mBAAS,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;SAC3D;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ,CAAA;AA3PG;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;0DACuB;AAG1C;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;sDACmB;AAGtC;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;+DAC4B;AAG/C;IADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;uDACoB;AAGzC;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;oEACiC;AAGpD;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;wDACqB;AAGxC;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACU;AAtBZ,gBAAgB;IAFpC,OAAO;IACP,0BAAa,CAAC,2BAAY,CAAC,QAAQ,CAAC;GAChB,gBAAgB,CA+PpC;kBA/PoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["import { LobbyService } from \"../common/net/LobbyService\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport UIView from \"../framework/ui/UIView\";\nimport PiggyBankData from \"./PiggyBankData\";\nimport { com } from \"../framework/external/protoc\";\nimport { User } from \"../global/User\";\nimport { UtilMgr } from \"../global/UtilMgr\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { protoPackage, serverType } from \"../common/net/CommonService\";\nimport { Manager } from \"../common/manager/Manager\";\nimport Operation from \"../framework/extentions/Operation\";\n\nconst { ccclass, property } = cc._decorator;\n\n// 最小利率\nconst MIN_RATE: number = 0.0002;\n// 最小收益\nconst MIN_PROFIT: number = 0.01;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class PBTransferInView extends UIView {\n    service: LobbyService;\n\n    @property(cc.Label)\n    private labDepositAmount: cc.Label = null;\n\n    @property(cc.Label)\n    private labPiggyBank: cc.Label = null;\n\n    @property(cc.Label)\n    private labMaximumAmountValue: cc.Label = null;\n\n    @property(cc.EditBox)\n    private edbTransferIn: cc.EditBox = null;\n\n    @property(cc.Label)\n    private labMinimumInputAmountValue: cc.Label = null;\n\n    @property(cc.Label)\n    private labProfitValue: cc.Label = null;\n\n    @property(cc.Label)\n    private all: cc.Label = null;\n\n    // 输入金额\n    private m_transferInAmount: number = 0;\n    // 合法输入字符串金额\n    private m_legalAmount: string = \"\";\n\n    public static getPrefabUrl() {\n        return \"piggyBank/prefabs/PBTransferInView\";\n    }\n\n    onLoad() {\n        super.onLoad();\n        this.content = this.node.getChildByName('imgBg');\n\n    }\n\n    start() {\n        this.all.language = i18n.PIGGY_BANK.ALL;\n        let labMaximumAmount = this.content.getChildByName('labMaximumAmount');\n        labMaximumAmount.getComponent(cc.Label).language = i18n.PIGGY_BANK.MAXIMUN_TRANSFER_AMIUNT;\n\n        let imgBase = this.content.getChildByName('imgBase');\n        let labTransferIn = imgBase.getChildByName(\"labTransferIn\");\n        labTransferIn.getComponent(cc.Label).language = i18n.PIGGY_BANK.TEANSFER_IN;\n\n        let labMinimumInputAmount = imgBase.getChildByName(\"labMinimumInputAmount\");\n        labMinimumInputAmount.getComponent(cc.Label).language = i18n.PIGGY_BANK.MINIMUM_SIGLE;\n\n        let labProfit = imgBase.getChildByName(\"labProfit\");\n        labProfit.getComponent(cc.Label).language = i18n.PIGGY_BANK.PROFIT;\n\n    }\n\n    bindingEvents() {\n        super.bindingEvents();\n\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.CMD_STORED_AMOUNT), this.onStoredAmount);\n    }\n\n    show(): void {\n        super.show();\n        this.showWithAction(true);\n        this.initView();\n    }\n\n    onClickClose(): void {\n        this.playDefaultEffect(\"close\");\n        dispatch(\"CMD_UPDATE_PIGGY_BANK_DATA\");\n        this.closeWithAction();\n    }\n\n    onClickConfirm(): void {\n        this.playDefaultEffect();\n        let strTransferInAmount: string = this.edbTransferIn.string;\n        let numTransferInAmount: number = Number(strTransferInAmount);\n        let numProfitAmount: number = Number(this.labProfitValue);\n\n        if (strTransferInAmount.length <= 0) {\n            PanelHelp.showTip(i18n.PIGGY_BANK.DEPOSIT_FAILURE);\n            return;\n        }\n\n        if (numTransferInAmount === 0 || numProfitAmount <= 0) {\n            PanelHelp.showTip(i18n.PIGGY_BANK.DEPOSIT_FAILURE);\n            return;\n        }\n\n        if (numTransferInAmount > Number(PiggyBankData.getInstance().data.maxTransferAmount) / 10000) {\n            PanelHelp.showTip(i18n.PIGGY_BANK.DEPOSIT_FAILURE);\n            return;\n        }\n\n        if (numTransferInAmount > (User._gold / 10000)) {\n            numTransferInAmount = Math.floor(numTransferInAmount);\n        }\n\n        this.m_transferInAmount = numTransferInAmount;\n\n        let req = protoPackage.hall.StoredAmountReq.create({ amount: numTransferInAmount * 10000 });\n        let buffer = protoPackage.hall.StoredAmountReq.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.CMD_STORED_AMOUNT,\n            buffer);\n\n    }\n\n    onClickAll(): void {\n        this.playDefaultEffect();\n        let minTransferIn: number = Math.floor(Math.min(Number(PiggyBankData.getInstance().data.maxTransferAmount), User._gold) / 10000);\n        this.setInputTransferInAmount(minTransferIn);\n    }\n\n    onDidBegan(target: cc.EditBox): void {\n\n    }\n\n    onDidEnded(target: cc.EditBox): void {\n        let minTransferIn: number = Math.floor(Math.min(Number(PiggyBankData.getInstance().data.maxTransferAmount), User._gold) / 10000);\n        let strInputAmount: string = target.string;\n\n        let numInputAmount: number = Number(strInputAmount);\n        if (isNaN(numInputAmount)) {\n            this.setInputTransferInAmount();\n            return;\n        }\n        if (numInputAmount > minTransferIn) {\n            this.setInputTransferInAmount(minTransferIn);\n            return;\n        }\n        if (numInputAmount <= 0) {\n            numInputAmount = null;\n        }\n        this.setInputTransferInAmount(numInputAmount);\n    }\n\n    onDidChanged(str: string): void {\n        if (str.length <= 0) {\n            return;\n        }\n\n        let reg: RegExp = new RegExp(/^\\d{1,}$/g);\n        if (!reg.test(str)) {\n            this.edbTransferIn.string = this.m_legalAmount;\n            return;\n        }\n\n        this.m_legalAmount = str;\n\n        let numInputAmount: number = Number(str);\n        if (isNaN(numInputAmount)) {\n            return;\n        }\n\n        this.setInputTransferInAmount(numInputAmount);\n    }\n\n    onStoredAmount(data): void {\n        if (data.statusMsg.status !== 0) {\n            PanelHelp.showTip(Manager.makeLanguage(\"ERRORCODE.\" + data.statusMsg.status));\n            return;\n        }\n\n        PiggyBankData.getInstance().data.amount = Number(PiggyBankData.getInstance().data.amount) + (this.m_transferInAmount * 10000);\n        PiggyBankData.getInstance().data.maxTransferAmount = Number(PiggyBankData.getInstance().data.maxTransferAmount) - (this.m_transferInAmount * 10000);\n        PiggyBankData.getInstance().data.confirmAmount = Number(PiggyBankData.getInstance().data.confirmAmount) + (this.m_transferInAmount * 10000);\n        PanelHelp.showTip(i18n.PIGGY_BANK.DEPOSITED_SUCCESSFULLY);\n        this.initView();\n    }\n\n    private setInputTransferInAmount(amount?: number): void {\n        if (amount === undefined || amount === null) {\n            this.edbTransferIn.string = \"\";\n        } else {\n            this.edbTransferIn.string = amount.toString();\n        }\n\n        let minInput: number = this.getMinInput(this.edbTransferIn.string);\n        let maxTransfer: number = Number(PiggyBankData.getInstance().data.maxTransferAmount) / 10000;\n        let userGold: number = User._gold / 10000;\n        let maxInput: number = Math.floor(Math.min(maxTransfer, userGold));\n\n        this.labMinimumInputAmountValue.string = UtilMgr.changeMoney(minInput * 10000, false);\n\n        let placeholderTips: string = \"\";\n\n        if (maxTransfer < minInput) {\n            placeholderTips = i18n.PIGGY_BANK.INSUFFICIENT_MAXIMUM;\n        } else if (userGold < minInput) {\n            placeholderTips = i18n.PIGGY_BANK.INSUFFICIENT_DEPOSIT_AMOUNT;\n        } else {\n            placeholderTips = i18n.PIGGY_BANK.PLEASE_ENTER + `${minInput} - ${maxInput}`;\n        }\n\n        this.edbTransferIn.placeholder = placeholderTips;\n        let profit: number = this.getProfit(amount);\n        let strProfit: string = profit.toString();\n        if (profit !== 0) {\n            strProfit = UtilMgr.changeMoney(profit * 10000, true);\n        }\n        this.labProfitValue.string = strProfit;\n    }\n\n    private initView(): void {\n        let data: com.bt.game.proto.hall.ITotalAmountRes = PiggyBankData.getInstance().data;\n\n        this.labDepositAmount.string = User.isRechargedPlayer ? UtilMgr.changeMoney(User._gold) : \"0\";\n        this.labPiggyBank.string = UtilMgr.changeMoney(data.amount);\n        let maxTransferAmount = UtilMgr.changeMoney(data.maxTransferAmount)\n        if (maxTransferAmount.indexOf(\".\") != -1) {\n            maxTransferAmount = maxTransferAmount.substring(0, maxTransferAmount.indexOf(\".\"))\n        }\n        this.labMaximumAmountValue.string = maxTransferAmount;\n        this.setInputTransferInAmount();\n    }\n\n    private getMinInput(strAmount: string = \"\"): number {\n        let amount: number = 0;\n        let profit: number = MIN_PROFIT;\n        let rate: number = PiggyBankData.getInstance().data.rate / 10000;\n        let minInputNum: number = 0;\n        if (strAmount.length > 0) {\n            let tempAmount: number = Number(strAmount);\n            if (!isNaN(tempAmount)) {\n                amount = tempAmount;\n            }\n        }\n\n        if (rate > 0) {\n            minInputNum = Math.ceil(profit / rate);\n        }\n\n        return minInputNum;\n    }\n\n    private getProfit(amount: number): number {\n        if (amount === null || amount === undefined) {\n            amount = 0;\n        } else {\n            if (isNaN(amount)) {\n                amount = 0;\n            }\n        }\n\n        let profit: number = 0;\n\n        let rate: number = Operation.div(PiggyBankData.getInstance().data.rate, 10000);\n        if (rate > 0) {\n            profit = UtilMgr.toFixed(Operation.mul(amount, rate), 2)\n        }\n\n        return profit;\n    }\n}\n"]}
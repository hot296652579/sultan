{"version":3,"sources":["assets/script/hall/ClickPlayEffets.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,eAAe,GAApC,MAAqB,eAAgB,SAAQ,EAAE,CAAC,SAAS;IAAzD;;QAEI,eAAU,GAAc,IAAI,CAAC;QAC7B,aAAQ,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;IAiCjC,CAAC;IA9BG,MAAM;QACF,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA;QACrE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IAC5B,CAAC;IACD,aAAa,CAAC,KAAK;QACf,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAA;QAC7B,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAA;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;QACzB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAA;QAClD,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QACtB,CAAC,EAAE,CAAC,CAAC,CAAA;QACL,QAAQ,CAAC,aAAa,CAAC,CAAA;IAC3B,CAAC;IACD,OAAO,CAAC,IAAa;QACjB,IAAI,CAAC,gBAAgB,EAAE,CAAA;QACvB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IAC3B,CAAC;IACD,OAAO;QACH,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QACjE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzB,OAAO,IAAI,CAAA;IACf,CAAC;IACD,SAAS;QACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA;IAC1E,CAAC;CAEJ,CAAA;AAlCG;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;mDACS;AAFZ,eAAe;IADnC,OAAO;GACa,eAAe,CAoCnC;kBApCoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ClickPlayEffets extends cc.Component {\n    @property(cc.Prefab)\n    liziPrefab: cc.Prefab = null;\n    liziPool = new cc.NodePool();\n\n\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.toTouchHandel, this)\n        this.node.zIndex = 9999;\n    }\n    toTouchHandel(event) {\n        let pos = event.getLocation()\n        pos = this.node.convertToNodeSpaceAR(pos)\n        let lizi = this.getLizi()\n        lizi.setPosition(pos);\n        lizi.active = true;\n        lizi.getComponent(cc.ParticleSystem).resetSystem()\n        this.scheduleOnce(() => {\n            this.receive(lizi)\n        }, 1)\n        dispatch('onTouchHand')\n    }\n    receive(node: cc.Node) {\n        node.removeFromParent()\n        this.liziPool.put(node)\n    }\n    getLizi(): cc.Node {\n        let lizi = this.liziPool.get() || cc.instantiate(this.liziPrefab)\n        this.node.addChild(lizi);\n\n        return lizi\n    }\n    onDestroy() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.toTouchHandel, this)\n    }\n\n}\n"]}
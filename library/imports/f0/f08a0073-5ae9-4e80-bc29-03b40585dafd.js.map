{"version":3,"sources":["assets/script/framework/database/DataBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { getSingleton } from \"../base/Singleton\";\n\nexport type DataBaseTable = \"cache_png\" | \"cache_json\" | \"cache_atlas\";\n\nexport class DataBase {\n\n    private config = {\n        name: \"AppCaches\",//数据库名\n        version: 1, //\n    };\n\n    private db: IDBDatabase = null;\n    private tables: DataBaseTable[] = [\"cache_png\", \"cache_json\", \"cache_atlas\"];\n    private static _instance: DataBase = null;\n    private logTag = \"[DataBase]\";\n    public static Instance() { return this._instance || (this._instance = new DataBase()); }\n\n    public open(name?: string, tables?: DataBaseTable[], version?: number) {\n        this.config.name = name || this.config.name;\n        this.config.version = version || this.config.version;\n        this.tables = tables || this.tables;\n\n        if (this.isSupport()) {\n            let request = this.getWindonwIndexedDB().open(this.config.name, this.config.version);\n            request.onerror = (e) => {\n                if (CC_DEBUG) cc.error(this.logTag, `打开数据库失败`);\n            };\n            request.onsuccess = (e: any) => {\n                this.db = e.target.result;\n                if (CC_DEBUG) cc.log(this.logTag, `找开数据库成功`);\n            };\n            request.onupgradeneeded = (e: any) => {\n                cc.log(this.logTag, `onupgradeneeded`);\n                this.db = e.target.result;\n                for (let i = 0; i < this.tables.length; i++) {\n                    if (!this.db.objectStoreNames.contains(this.tables[i])) {\n                        this.db.createObjectStore(this.tables[i]);\n                    }\n                }\n            };\n        }\n        else {\n            if (CC_DEBUG) cc.warn(this.logTag, \"no support indexedDB\");\n        }\n    }\n\n    public isSupport() {\n        let _windown: any = window;;\n        if (_windown.indexedDB || _windown.mozIndexedDB || _windown.webkitIndexedDB || _windown.msIndexedDB) {\n            return true;\n        }\n        return false;\n    }\n\n    private getWindonwIndexedDB(): IDBFactory {\n        let _windown: any = window;\n        if (_windown.indexedDB) {\n            return _windown.indexedDB;\n        }\n        _windown.indexedDB = _windown.indexedDB || _windown.mozIndexedDB || _windown.webkitIndexedDB || _windown.msIndexedDB;\n        return _windown.indexedDB;\n    }\n\n    public close() {\n        if (this.db) {\n            this.db.close();\n            if (CC_DEBUG) cc.log(this.logTag, `数据关闭`);\n        }\n    }\n\n    public deleteDatabase() {\n        if (this.isSupport()) {\n            this.getWindonwIndexedDB().deleteDatabase(this.config.name);\n            if (CC_DEBUG) cc.log(this.logTag, `删除数据库${this.config.name}`);\n        }\n    }\n\n    public put(stroeName: DataBaseTable, data: { key: string, data: any }) {\n        if (this.db) {\n            let store = this.db.transaction(stroeName, \"readwrite\").objectStore(stroeName);\n            let request = store.put(data.data, data.key);\n            request.onerror = () => {\n                if (CC_DEBUG) cc.error(this.logTag, `添加数据库中已经有该数据`);\n            };\n            request.onsuccess = () => {\n                if (CC_DEBUG) cc.log(this.logTag, \"添加数据已存入数据\");\n            };\n        }\n    }\n\n    public get(stroeName: DataBaseTable, key: string) {\n        return new Promise<any>((resolve) => {\n            if (this.db) {\n                let store = this.db.transaction(stroeName, \"readwrite\").objectStore(stroeName);\n                let request = store.get(key);\n                request.onerror = () => {\n                    if (CC_DEBUG) cc.error(this.logTag, `get error ${stroeName} -> ${key}`);\n                    resolve(null);\n                };\n                request.onsuccess = (e: any) => {\n                    if (CC_DEBUG) cc.log(this.logTag, `get success ${stroeName} -> ${key}`);\n                    resolve(e.target.result);\n                };\n            }\n        });\n    }\n\n    public delete(stroeName: DataBaseTable, key: string) {\n        if (this.db) {\n            let store = this.db.transaction(stroeName, \"readwrite\").objectStore(stroeName);\n            let request = store.delete(key);\n            request.onerror = () => {\n                if (CC_DEBUG) cc.error(this.logTag, `delete error ${stroeName} -> ${key}`);\n            };\n            request.onsuccess = () => {\n                if (CC_DEBUG) cc.log(this.logTag, `delete success ${stroeName} -> ${key}`);\n            };\n        }\n    }\n\n    public clear(stroeName: DataBaseTable) {\n        //删除全部存储数据\n        if (this.db) {\n            let store = this.db.transaction(stroeName, \"readwrite\").objectStore(stroeName);\n            let request = store.clear();\n            request.onerror = () => {\n                if (CC_DEBUG) cc.error(this.logTag, `clear error ${stroeName}`);\n            };\n            request.onsuccess = () => {\n                if (CC_DEBUG) cc.log(this.logTag, `clear success ${stroeName}`);\n            };\n        }\n    }\n\n}\n"]}
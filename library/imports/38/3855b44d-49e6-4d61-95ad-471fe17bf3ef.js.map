{"version":3,"sources":["assets/script/roomlist/RoomListView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Config } from \"../common/config/Config\";\nimport { dispatchEnterComplete, LogicEvent, LogicType } from \"../common/event/LogicEvent\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { com } from \"../framework/external/protoc\";\nimport UIView from \"../framework/ui/UIView\";\nimport { User } from \"../global/User\";\nimport { UtilMgr } from \"../global/UtilMgr\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport RoomItemBase from \"./RoomItemBase\";\nimport RoomListGuide from \"./RoomListGuide\";\nimport { HallConfig } from \"../hall/HallNetController\";\nimport { Manager } from \"../framework/Framework\";\nimport { ENABLE_CHANGE_LANGUAGE } from \"../framework/base/Defines\";\nimport { EventApi } from \"../framework/event/EventApi\";\n\nconst { ccclass, property, menu } = cc._decorator;\n\n// 左右两边间隔\nconst PADDING_WIDTH: number = 30;\n// 每个之间间隔\nconst SPACE_WIDTH: number = 20;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class RoomListView extends UIView {\n    service: LobbyService;\n\n    @property(cc.Label)\n    private labNick: cc.Label = null;\n\n    @property(cc.Label)\n    private labId: cc.Label = null;\n\n    @property(cc.Label)\n    private labChip: cc.Label = null;\n\n    @property(cc.Node)\n    private notice: cc.Node = null;\n\n    @property(cc.ScrollView)\n    public scvRoomList: cc.ScrollView = null;\n\n    @property(cc.Sprite)\n    private imgGameName: cc.Sprite = null;\n\n    // 德州牛仔\n    @property(cc.Prefab)\n    private pfbRoomItemDznz: cc.Prefab = null;\n\n    // 红黑大战\n    @property(cc.Prefab)\n    private pfbRoomRedVsBlackItem: cc.Prefab = null;\n\n    // 水果机\n    @property(cc.Prefab)\n    private pfbRoomFruitPartyItem: cc.Prefab = null;\n\n    // 德州牛仔\n    @property(cc.SpriteFrame)\n    private spfRoomItemDznz: cc.SpriteFrame = null;\n\n    // 红黑大战\n    @property(cc.SpriteFrame)\n    private spfRoomRedVsBlackItem: cc.SpriteFrame = null;\n\n    // 水果机\n    @property(cc.SpriteFrame)\n    private spfRoomFruitPartyItem: cc.SpriteFrame = null;\n\n    // 红黑大战\n    @property(cc.SpriteFrame)\n    private spfRoomRedVsBlackItemHI: cc.SpriteFrame = null;\n\n    // 水果机\n    @property(cc.SpriteFrame)\n    private spfRoomFruitPartyItemHI: cc.SpriteFrame = null;\n\n    private m_data: com.bt.game.proto.hall.IGetRoomListRes = null;\n\n    public static getPrefabUrl() {\n        return \"roomlist/prefabs/RoomListView\";\n    }\n\n\n    protected bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(\"updateUserInfo\", this.updateUserInfo);\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.USER_INFORMATION), this.onUpdateUserInfo);\n        if (ENABLE_CHANGE_LANGUAGE) {\n            this.registerEvent(EventApi.CHANGE_LANGUAGE, this.updateRoomName);\n        }\n    }\n\n    onLoad() {\n        super.onLoad();\n        this.initView();\n        // Manager.globalAudio.playMusic(Dzpk.SOUNDS.BGM, Dzpk.globalData.bundle)\n        PanelHelp.showRollNotice(this.notice, this)\n        // dispatchEnterComplete({ type: LogicType.GAME, views: [this] });\n    }\n\n    show(args) {\n        super.show(args);\n        this.reqUserInfo()\n\n        this.m_data = args[0];\n\n        this.updateUserInfo();\n        this.updateRoomName();\n        this.updateRoomList();\n        PanelHelp.hideLoading();\n\n        // let iconConfig = HallConfig.hallIconConfig.find(iconConfig => { return iconConfig.key == \"newcomerGuidance\" });\n        // if (iconConfig && iconConfig.value && User._gameIds.indexOf(2002) === -1) {\n        //     Manager.uiManager.open({ type: RoomListGuide, bundle: this.bundle, args: [this] });\n        // }\n    }\n\n    private getRoomList(): com.bt.game.proto.hall.IRoomInfo[] | com.bt.game.proto.hall.IPveRoomInfo[] | com.bt.game.proto.hall.IPvpRoomInfo[] {\n        let roomList = [];\n        switch (this.m_data.infoType) {\n            case com.bt.game.proto.hall.RoomInfoType.Pve:\n                roomList = this.m_data.pveInfos;\n                break;\n            case com.bt.game.proto.hall.RoomInfoType.Pvp:\n                roomList = this.m_data.roomList;\n                break;\n        }\n        roomList = this.sortRoomList(roomList);\n        return roomList;\n    }\n\n    private initView(): void {\n        this.labNick.string = \"\";\n        this.labId.string = \"\";\n        this.labChip.string = \"\";\n    }\n\n    private sortRoomList(roomList: com.bt.game.proto.hall.IRoomInfo[] | com.bt.game.proto.hall.IPveRoomInfo[] | com.bt.game.proto.hall.IPvpRoomInfo[]): com.bt.game.proto.hall.IRoomInfo[] | com.bt.game.proto.hall.IPveRoomInfo[] | com.bt.game.proto.hall.IPvpRoomInfo[] {\n        roomList.sort((a, b) => {\n            return a.areaId - b.areaId;\n        })\n        return roomList;\n    }\n\n    private reqUserInfo() {\n        let req = protoPackage.hall.UserInformation.create({ userId: User._userID });\n        let buffer = protoPackage.hall.UserInformation.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.USER_INFORMATION,\n            buffer);\n    }\n\n    private onUpdateUserInfo(data) {\n        if (data.statusMsg.status == 0) {\n            User._gold = data.gold;\n            this.updateUserInfo()\n        }\n    }\n\n    private updateUserInfo() {\n        this.labNick.string = UtilMgr.setString(User._userName);\n        this.labId.string = \"ID:\" + User._userID;\n        this.labChip.string = UtilMgr.changeMoney(User._gold);\n    }\n\n    private updateRoomName(): void {\n        this.imgGameName.spriteFrame = this.getRoomNameSpriteFrame(this.m_data.gameId);\n    }\n\n    private updateRoomList() {\n        this.scvRoomList.content.destroyAllChildren();\n\n        if (this.m_data.infoType === com.bt.game.proto.hall.RoomInfoType.Pve) {\n            this.updatePveRoomList();\n        } else if (this.m_data.infoType === com.bt.game.proto.hall.RoomInfoType.Pvp) {\n            this.updatePvpRoomList();\n        } else {\n            G.Logger.warn(\"房间列表类型错误\");\n        }\n    }\n\n    private updatePveRoomList(): void {\n        let itemWidth: number = this.pfbRoomItemDznz.data.width;\n        let listCount: number = this.m_data.pveInfos.length;\n\n        this.m_data.pveInfos = this.sortRoomList(this.m_data.pveInfos);\n\n        let contentSize: number = (2 * PADDING_WIDTH) + ((listCount - 1) * SPACE_WIDTH) + (listCount * itemWidth);\n        if (contentSize > this.scvRoomList.content.width) {\n            this.scvRoomList.content.width = contentSize;\n            this.scvRoomList.inertia = true;\n            this.scvRoomList.elastic = true;\n            let startX: number = 0 + (itemWidth / 2) + PADDING_WIDTH;\n            for (let i: number = 0; i < listCount; ++i) {\n                let itemData: com.bt.game.proto.hall.IPveRoomInfo = this.m_data.pveInfos[i];\n                let itemNode: cc.Node = this.getRoomItemNode(this.m_data.gameId);\n                let itemSrc: RoomItemBase = itemNode.getComponent(itemNode.name);\n                itemSrc.preloadData(this.m_data.gameId, this.m_data.infoType, itemData);\n\n                itemNode.x = startX + ((itemWidth + SPACE_WIDTH) * i);\n                itemNode.y = 0;\n                this.scvRoomList.content.addChild(itemNode);\n            }\n        } else {\n            this.scvRoomList.inertia = false;\n            this.scvRoomList.elastic = false;\n            let startX: number = 0;\n            let offsetX: number = startX;\n            let spaceWidth: number = (this.scvRoomList.node.width - (itemWidth * listCount)) / (listCount + 1);\n            for (let i: number = 0; i < listCount; ++i) {\n                let itemData: com.bt.game.proto.hall.IPveRoomInfo = this.m_data.pveInfos[i];\n                let itemNode: cc.Node = this.getRoomItemNode(this.m_data.gameId);\n                let itemSrc: RoomItemBase = itemNode.getComponent(itemNode.name);\n                let itemHalfWidth: number = (itemNode.width / 2);\n                offsetX += spaceWidth + itemHalfWidth;\n                itemSrc.preloadData(this.m_data.gameId, this.m_data.infoType, itemData);\n                itemNode.x = offsetX;\n                itemNode.y = 0;\n                this.scvRoomList.content.addChild(itemNode);\n                offsetX += itemHalfWidth;\n            }\n        }\n\n    }\n\n    private updatePvpRoomList(): void {\n        let itemWidth: number = this.pfbRoomItemDznz.data.width;\n        let listCount: number = this.m_data.roomList.length;\n\n        this.m_data.pveInfos = this.sortRoomList(this.m_data.pveInfos);\n\n        let contentSize: number = (2 * PADDING_WIDTH) + ((listCount - 1) * SPACE_WIDTH) + itemWidth;\n        if (contentSize > this.scvRoomList.content.width) {\n            this.scvRoomList.content.width = contentSize;\n        }\n\n        let startX: number = 0 + (itemWidth / 2) + PADDING_WIDTH;\n        for (let i: number = 0; i < this.m_data.roomList.length; ++i) {\n            let itemData: com.bt.game.proto.hall.IRoomInfo = this.m_data.roomList[i];\n            let itemNode: cc.Node = this.getRoomItemNode(this.m_data.gameId);\n            let itemSrc: RoomItemBase = itemNode.getComponent(itemNode.name);\n            itemSrc.preloadData(this.m_data.gameId, this.m_data.infoType, itemData);\n\n            itemNode.x = startX + ((itemWidth + SPACE_WIDTH) * i);\n            itemNode.y = 0;\n            this.scvRoomList.content.addChild(itemNode);\n        }\n    }\n\n    /**\n     * 获取房间项节点\n     * @param gameId {number} 游戏 ID\n     */\n    private getRoomItemNode(gameId: number): cc.Node {\n        let node: cc.Node = null;\n        switch (gameId) {\n            case Config.GameId.TexaCowTable:\n                node = cc.instantiate(this.pfbRoomItemDznz);\n                break;\n            case Config.GameId.FruitParty:\n                node = cc.instantiate(this.pfbRoomFruitPartyItem);\n                break;\n            case Config.GameId.RedVsBlack:\n                node = cc.instantiate(this.pfbRoomRedVsBlackItem);\n                break;\n        }\n        return node;\n    }\n\n    private getRoomNameSpriteFrame(gameId: number): cc.SpriteFrame {\n        let spriteFrame: cc.SpriteFrame = null;\n        switch (gameId) {\n            case Config.GameId.TexaCowTable:\n                spriteFrame = this.spfRoomItemDznz;\n                break;\n            case Config.GameId.FruitParty:\n                spriteFrame = Manager.language.getLanguage() == cc.sys.LANGUAGE_HINDI ? this.spfRoomFruitPartyItemHI : this.spfRoomFruitPartyItem;\n                break;\n            case Config.GameId.RedVsBlack:\n                spriteFrame = Manager.language.getLanguage() == cc.sys.LANGUAGE_HINDI ? this.spfRoomRedVsBlackItemHI : this.spfRoomRedVsBlackItem;\n                break;\n        }\n        return spriteFrame;\n    }\n\n    private onClickGoBack(): void {\n        this.close();\n        super.playDefaultEffect(\"close\");\n    }\n\n    private onClickCopy(): void {\n        window['platformUtil'].copyToClip(this.labId.string);\n        super.playDefaultEffect();\n    }\n\n    private onClickShop(): void {\n        dispatch(\"openRechargeView\");\n        super.playDefaultEffect();\n    }\n\n    private onClickSetting(): void {\n        dispatch(\"openSetting\");\n        super.playDefaultEffect();\n    }\n}\n"]}
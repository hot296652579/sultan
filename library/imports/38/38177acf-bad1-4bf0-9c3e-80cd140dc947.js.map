{"version":3,"sources":["assets/games/crash/script/protocol/CrashNetController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Manager } from \"../../../../script/common/manager/Manager\";\nimport { CmdResStruct } from \"../../../../script/common/net/CmdResStruct\";\nimport { LobbyService } from \"../../../../script/common/net/LobbyService\";\nimport NumberUtils from \"../../../../script/common/utils/NumberUtils\";\nimport AppData from \"../../../../script/data/AppData\";\nimport HallData from \"../../../../script/data/HallData\";\nimport UserData from \"../../../../script/data/UserData\";\nimport Controller from \"../../../../script/framework/controller/Controller\";\nimport { injectService, makeKey } from \"../../../../script/framework/decorator/Decorators\";\nimport { MST } from \"../../../../script/framework/external/protoc\";\nimport CrashData from \"../data/CrashData\";\nimport { CrashDefine } from \"../define/CrashDefine\";\nimport { CrashInterface } from \"../interface/CrashInterface\";\n\n/**\n * @description 逻辑流程控制器  \n */\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class CrashNetController extends Controller<LobbyService> {\n\n    protected bindingEvents() {\n        super.bindingEvents();\n        this.registerRes();\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_GetCrashInfo_Res, this.onM2C_GetCrashInfo_Res);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashStart_mes, this.onM2C_CrashStart_mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_MyCrashBet_Res, this.onM2C_MyCrashBet_Res);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashBet_Mes, this.onM2C_CrashBet_Mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashStop_Mes, this.onM2C_CrashStop_Mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashStartBet_Mes, this.onM2C_CrashStartBet_Mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashEscape_Mes, this.onM2C_CrashEscape_Mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashStopBet_Mes, this.onM2C_CrashStopBet_Mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashCancelAutoBet_Res, this.onM2C_CrashCancelAutoBet_Res);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashCancelAutoBet_Mes, this.onM2C_CrashCancelAutoBet_Mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashHash_Mes, this.onM2C_CrashHash_Mes);\n        this.registerEvent(MST.OuterOpcode_CrashGame.M2C_CrashHashRecord_Res, this.onM2C_CrashHashRecord_Res);\n        this.registerEvent(MST.OuterOpcode_CrashGame.S2C_CrashMyRecord, this.onS2C_CrashMyRecord);\n        this.registerEvent(MST.OuterOpcode_Map.M2C_TransferMap_Res, this.onM2C_TransferMap_Res);\n\n    }\n\n    private registerRes() {\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_GetCrashInfo_Res, MST.M2C_GetCrashInfo_Res);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashStart_mes, MST.M2C_CrashStart_mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_MyCrashBet_Res, MST.M2C_MyCrashBet_Res);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashBet_Mes, MST.M2C_CrashBet_Mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashStop_Mes, MST.M2C_CrashStop_Mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashStartBet_Mes, MST.M2C_CrashStartBet_Mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashEscape_Mes, MST.M2C_CrashEscape_Mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashStopBet_Mes, MST.M2C_CrashStopBet_Mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashCancelAutoBet_Res, MST.M2C_CrashCancelAutoBet_Res);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashCancelAutoBet_Mes, MST.M2C_CrashCancelAutoBet_Mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashHash_Mes, MST.M2C_CrashHash_Mes);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.M2C_CrashHashRecord_Res, MST.M2C_CrashHashRecord_Res);\n        CmdResStruct.register(MST.OuterOpcode_CrashGame.S2C_CrashMyRecord, MST.S2C_CrashMyRecord);\n        CmdResStruct.register(MST.OuterOpcode_Map.M2C_TransferMap_Res, MST.M2C_TransferMap_Res);\n\n    }\n\n    public onM2C_GetCrashInfo_Res(data: MST.IM2C_GetCrashInfo_Res) {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        crashData.betList.length = 0;\n        crashData.myBetList.length = 0;\n        crashData.rateRecordList.length = 0;\n\n        for (let v of data.Bets) {\n            let betPlayer: CrashInterface.BetPlayer = {\n                betInfo: v,\n                isEscape: crashData.getRate() >= v.Multiple,\n            }\n            crashData.betList.push(betPlayer);\n        }\n        for (let v of data.MyBet) {\n            let betPlayer: CrashInterface.BetPlayer = {\n                betInfo: v,\n                isEscape: crashData.getRate() >= v.Multiple,\n            }\n            crashData.myBetList.push(betPlayer);\n        }\n\n        crashData.betPlayerMap.clear();\n        let index: number = 0;\n        for (let i: number = crashData.myBetList.length - 1; i >= 0; --i) {\n            crashData.betPlayerMap.set(index++, crashData.myBetList[i]);\n        }\n        for (let i: number = crashData.betList.length - 1; i >= 0; --i) {\n            crashData.betPlayerMap.set(index++, crashData.betList[i]);\n            if (crashData.betPlayerMap.size >= CrashDefine.BET_LIST_COUNT) {\n                break;\n            }\n        }\n\n        crashData.status = data.Status;\n        switch (crashData.status) {\n            case MST.CrashStatus.StartBet:\n                crashData.stopBetTimestamp = Number(data.StartTimeStamp);\n                break;\n            case MST.CrashStatus.GameBegin:\n                crashData.startGameTimestamp = Number(data.StartTimeStamp);\n                break;\n            case MST.CrashStatus.GameOver:\n                data.Multi = data.MultipleRecord[data.MultipleRecord.length - 1];\n                break;\n            default:\n                crashData.stopBetTimestamp = 0;\n                crashData.startGameTimestamp = 0;\n                break;\n        }\n        crashData.rateRecordList = [].concat(data.MultipleRecord);\n        crashData.betTotalGold = Number(data.TotalGold);\n        crashData.betTotalCount = Number(data.TotalPlayer);\n        crashData.autoBetData = data.AtuoBetInfo;\n        crashData.hashInfo.serverSeed = data.SeedInfo.ServerSeedHash;\n        crashData.hashInfo.publicSeed = data.SeedInfo.PublicSeed;\n        crashData.hashInfo.gameNo = data.GameNo;\n        if (data.Multi) {\n            crashData.roundBombRate = Number(data.Multi);\n        }\n        dispatch(\"Event_M2C_GetCrashInfo_Res\", data);\n    }\n\n    public onM2C_CrashStart_mes(data: MST.IM2C_CrashStart_mes) {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        crashData.status = MST.CrashStatus.GameBegin;\n        crashData.startGameTimestamp = Number(data.StartTimeStamp);\n        if (data.Multi) {\n            crashData.roundBombRate = Number(data.Multi);\n        }\n        dispatch(\"Event_M2C_CrashStart_mes\", data);\n    }\n\n    public onM2C_MyCrashBet_Res(data: MST.IM2C_MyCrashBet_Res) {\n        dispatch(\"Event_M2C_MyCrashBet_Res\", data);\n    }\n\n    public onM2C_CrashBet_Mes(data: MST.IM2C_CrashBet_Mes) {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        let userData: UserData = G.DataMgr.get(UserData);\n        crashData.betTotalGold = Number(data.TotalGold);\n        crashData.betTotalCount = Number(data.TotalPlayer);\n        for (let v of data.Bets) {\n            let betPlayer: CrashInterface.BetPlayer = {\n                betInfo: v,\n                isEscape: false,\n            }\n            if (v.player.UnitId === userData.id) {\n                crashData.myBetList.push(betPlayer);\n            } else {\n                crashData.betList.push(betPlayer);\n            }\n        }\n\n        crashData.betPlayerMap.clear();\n        let index: number = 0;\n        for (let i: number = crashData.myBetList.length - 1; i >= 0; --i) {\n            crashData.betPlayerMap.set(index++, crashData.myBetList[i]);\n        }\n        for (let i: number = crashData.betList.length - 1; i >= 0; --i) {\n            crashData.betPlayerMap.set(index++, crashData.betList[i]);\n            if (crashData.betPlayerMap.size >= CrashDefine.BET_LIST_COUNT) {\n                break;\n            }\n        }\n\n        dispatch(\"Event_M2C_CrashBet_Mes\", data);\n    }\n\n    public onM2C_CrashStop_Mes(data: MST.IM2C_CrashStop_Mes) {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        crashData.status = MST.CrashStatus.GameOver;\n        crashData.rateRecordList.push(Number(data.Multiples));\n        crashData.bombTimestamp = Number(data.ExplosionTimeStamp);\n        crashData.hashInfo.roundHash = data.HashResult;\n        crashData.hashInfo.acak = data.Acak;\n        crashData.hashInfo.point = Number(data.Multiples);\n        dispatch(\"Event_M2C_CrashStop_Mes\", data);\n    }\n\n    public onM2C_CrashStartBet_Mes(data: MST.IM2C_CrashStartBet_Mes) {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        let appData: AppData = G.DataMgr.get(AppData);\n        crashData.initNext();\n        crashData.status = MST.CrashStatus.StartBet;\n        crashData.startBetTimestamp = appData.getServerTimestamp();\n        crashData.stopBetTimestamp = Number(data.StopBetTimeStamp);\n        crashData.hashInfo.gameNo = data.GameNo;\n        crashData.roundBombRate = null;\n        dispatch(\"Event_M2C_CrashStartBet_Mes\", data);\n    }\n\n    public onM2C_CrashEscape_Mes(data: MST.IM2C_CrashEscape_Mes) {\n        dispatch(\"Event_M2C_CrashEscape_Mes\", data);\n    }\n\n    public onM2C_CrashStopBet_Mes(data: MST.IM2C_CrashStopBet_Mes) {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        crashData.status = MST.CrashStatus.StopBet;\n        dispatch(\"Event_M2C_CrashStopBet_Mes\", data);\n    }\n\n    public onM2C_CrashCancelAutoBet_Res(data: MST.IM2C_CrashCancelAutoBet_Res): void {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        crashData.autoBetData = null;\n        dispatch(\"Event_M2C_CrashCancelAutoBet_Res\", data);\n    }\n\n    public onM2C_CrashCancelAutoBet_Mes(data: MST.IM2C_CrashCancelAutoBet_Mes): void {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        crashData.autoBetData = null;\n        dispatch(\"Event_M2C_CrashCancelAutoBet_Mes\", data);\n\n    }\n\n    public onM2C_CrashHash_Mes(data: MST.IM2C_CrashHash_Mes): void {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n\n        crashData.hashInfo.serverSeed = data.SeedInfo.ServerSeed;\n        crashData.hashInfo.serverSeedHash = data.SeedInfo.ServerSeedHash;\n        crashData.hashInfo.publicSeed = data.SeedInfo.PublicSeed;\n\n        dispatch(\"Event_M2C_CrashHash_Mes\", data);\n\n    }\n\n    public onM2C_CrashHashRecord_Res(data: MST.IM2C_CrashHashRecord_Res): void {\n        let crashData: CrashData = G.DataMgr.get(CrashData);\n        crashData.totalRecordData = data;\n        dispatch(\"Event_M2C_CrashHashRecord_Res\", data);\n    }\n\n    public onS2C_CrashMyRecord(data: MST.IS2C_CrashMyRecord): void {\n        dispatch(\"Event_S2C_CrashMyRecord\", data);\n    }\n\n    public onM2C_TransferMap_Res(data: MST.IM2C_TransferMap_Res) {\n        let userData = G.DataMgr.get(UserData);\n        userData.inGame = data.RoomName;\n        dispatch(\"Event_M2C_TransferMap_Res\", data);\n    }\n\n}\n\nManager.netManager.push(CrashNetController);\n"]}
{"version":3,"sources":["assets/script/tournament/ConfirmCreateTournament.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Config } from \"../common/config/Config\";\nimport { i18n } from \"../common/language/LanguageImpl\";\nimport { serverType, protoPackage } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { IController } from \"../framework/controller/Controller\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport { com } from \"../framework/external/protoc\";\nimport { Manager } from \"../framework/Framework\";\nimport UIView from \"../framework/ui/UIView\";\nimport { UtilMgr } from \"../global/UtilMgr\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport TournamentData from \"./TournamentData\";\nimport TournamentDetailView from \"./TournamentDetailView\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class ConfirmCreateTournament extends UIView implements IController<LobbyService> {\n\n    service: LobbyService;\n\n    @property(cc.Label)\n    gameName: cc.Label = null;\n\n    @property(cc.Label)\n    password: cc.Label = null;\n\n    @property(cc.Label)\n    people: cc.Label = null;\n\n    @property(cc.Label)\n    bonusSource: cc.Label = null;\n\n    @property(cc.Label)\n    jackPot: cc.Label = null;\n\n    @property(cc.Label)\n    rewards: cc.Label[] = [];\n\n    @property(cc.Node)\n    confirmNode: cc.Node = null;\n\n    @property(cc.Label)\n    createGold: cc.Label = null;\n\n    private data;\n    public static getPrefabUrl() {\n        return \"tournament/prefabs/ConfirmCreateTournament\";\n    }\n    onLoad() {\n        super.onLoad();\n        this.content = this.node.getChildByName('content');\n\n    }\n\n    start() {\n        this.updateView();\n    }\n\n    show(args) {\n        super.show(args);\n        this.showWithAction(true);\n        if (args && args[0]) {\n            this.data = args[0];\n        }\n        console.log(\"create room info\", this.data);\n    }\n\n\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.CMD_CreateTournament), this.onNetCreateTournament);\n\n    }\n\n    onClick(name, node) {\n        switch (name) {\n            case \"returnBtn\":\n            case \"close\": this.closeWithAction(); break;\n            case \"confirmBtn\": this.reqCreateTournament(); break;\n            default: G.Logger.error(\"no find button name -> %s\", name);\n        }\n    }\n\n    reqCreateTournament() {\n        PanelHelp.showLoading(i18n.WAIT.LOGIN);\n        let req = protoPackage.hall.CreateTournamentReq.create(this.data);\n        let buffer = protoPackage.hall.CreateTournamentReq.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.CMD_CreateTournament,\n            buffer);\n    }\n\n    private onNetCreateTournament(data: com.bt.game.proto.hall.ICreateTournamentRes) {\n        if (data.statusMsg.status == 0) {\n            this.closeWithAction();\n            dispatch(\"close_createTournamentView\")\n            TournamentData.getInstance().flushItmeID = data.tournamentId;\n            dispatch(\"UpdateTournamentList\");\n            this.reqTournamentDetail(data.tournamentId)\n        } else {\n            if(data.statusMsg.status == 251){\n                PanelHelp.showMsgBox(\"\", i18n.FRIENDROOM.ToRecharge, () => {\n                    dispatch(\"openRechargeView\");\n                }, \"btn_Recharge\");\n            }else{\n                PanelHelp.showTip(i18n.ERRORCODE[data.statusMsg.status]);\n            }\n        }\n        PanelHelp.hideLoading();\n    }\n\n    reqTournamentDetail(tournamentId) {\n        let jsonData = {\n            tournamentId: tournamentId,\n        }\n        let req = protoPackage.hall.TournamentDetailReq.create(jsonData);\n        let buffer = protoPackage.hall.TournamentDetailReq.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.CMD_TournamentDetail,\n            buffer);\n\n    }\n\n    updateView() {\n        this.gameName.string = Config.games[this.data.gameId].disName;\n        this.password.string = this.data.password.length == 0 ? \"No Password\" : this.data.password;\n        this.people.string = this.data.numberOfParticipants + \"-people\";\n        this.bonusSource.string = this.data.bonusSource == 0 ? \"Pay by myself\" : \"Pay by participant\";\n        if (this.data.bonusSource == 0) {\n            this.jackPot.string = UtilMgr.changeMoney((this.data.createFee * (100 - TournamentData.getInstance().serviceFee) * 0.01), false);\n        } else {\n            this.jackPot.string = UtilMgr.changeMoney((this.data.joinFee * (100 - TournamentData.getInstance().serviceFee) * this.data.numberOfParticipants * 0.01), false);\n        }\n        this.createGold.string = UtilMgr.changeMoney(this.data.createFee);\n        let rewards = this.data.rewardPercent.split(',');\n        this.rewards.forEach((rewardLab, index) => {\n            if (rewards[index]) {\n                rewardLab.string = UtilMgr.changeMoney(+this.jackPot.string * rewards[index] * 0.01 * 10000,false);\n            }\n            rewardLab.node.parent.active = index < rewards.length;\n        });\n        this.createGold.node.parent.active = this.data.bonusSource == 0;\n    }\n\n    onDestroy() {\n        super.onDestroy();\n    }\n}\n"]}
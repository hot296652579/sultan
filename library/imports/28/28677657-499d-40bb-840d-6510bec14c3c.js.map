{"version":3,"sources":["assets/script/framework/base/UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UIView, { UIClass } from \"../ui/UIView\";\nimport { ResourceInfo, ResourceCacheData, ViewStatus, BUNDLE_TYPE, BUNDLE_RESOURCES } from \"./Defines\";\nimport UILoadingDelegate from \"../ui/UILoadingDelegate\";\nimport ToastDelegate from \"../ui/ToastDelegate\";\nimport { Manager } from \"../Framework\";\n\n/**@description 动态加载垃圾数据名 */\nconst DYNAMIC_LOAD_GARBAGE = \"DYNAMIC_LOAD_GARBAGE\";\n/**@description 动画加载全局数据名 */\nconst DYNAMIC_LOAD_RETAIN_MEMORY = \"DYNAMIC_LOAD_RETAIN_MEMORY\";\nclass ViewDynamicLoadData {\n    private local = new Map<string, ResourceInfo>();\n    private remote = new Map<string, ResourceInfo>();\n    public name: string;\n\n    constructor(name: string = null) {\n        this.name = name;\n    }\n\n    /**@description 添加动态加载的本地资源 */\n    public addLocal(info: ResourceInfo, className: string = null) {\n        if (info && info.url) {\n            if (this.name == DYNAMIC_LOAD_GARBAGE) {\n                // cc.error(`找不到资源持有者: ${info.url}`);\n            }\n            if (CC_DEBUG) Manager.uiManager.checkView(info.url, className);\n            if (!this.local.has(info.url)) {\n                this.local.set(info.url, info);\n            }\n        }\n    }\n\n    /**@description 添加动态加载的远程资源 */\n    public addRemote(info: ResourceInfo, className: string = null) {\n        if (info && info.data && !this.remote.has(info.url)) {\n            if (this.name == DYNAMIC_LOAD_GARBAGE) {\n                // cc.error(`找不到资源持有者 : ${info.url}`);\n            }\n            if (CC_DEBUG) Manager.uiManager.checkView(info.url, className);\n            Manager.cacheManager.remoteCaches.retainAsset(info);\n            this.remote.set(info.url, info);\n        }\n    }\n\n    /**@description 清除远程加载资源 */\n    public clear() {\n        if (this.name == DYNAMIC_LOAD_GARBAGE) {\n            //先输出\n            let isShow = this.local.size > 0 || this.remote.size > 0;\n            if (isShow) {\n                cc.error(`当前未能释放资源如下:`);\n            }\n            if (this.local && this.local.size > 0) {\n                cc.error(\"-----------local-----------\");\n                if (this.local) {\n                    this.local.forEach((info) => {\n                        cc.error(info.url);\n                    });\n                }\n            }\n            if (this.remote && this.remote.size > 0) {\n                cc.error(\"-----------remote-----------\");\n                if (this.remote) {\n                    this.remote.forEach((info, url) => {\n                        cc.error(info.url);\n                    });\n                }\n            }\n\n        } else {\n            //先清除当前资源的引用关系\n            if (this.local) {\n                this.local.forEach((info) => {\n                    Manager.assetManager.releaseAsset(info);\n                });\n                this.local.clear();\n            }\n            if (this.remote) {\n                this.remote.forEach((info, url) => {\n                    Manager.cacheManager.remoteCaches.releaseAsset(info);\n                });\n                this.remote.clear();\n            }\n        }\n\n    }\n}\n\n/**@description 界面数据，这里需要处理一个问题，当一个界面打开，收到另一个人的关闭，此时如果界面未加载完成\n * 可能导致另一个人关闭无效，等界面加载完成后，又显示出来\n */\nclass ViewData {\n    /**@description 界面是否已经加载 */\n    isLoaded: boolean = false;\n    /**@description 界面当前等待操作状态 */\n    status: ViewStatus = ViewStatus.WAITTING_NONE;\n    /**@description 实际显示界面 */\n    view: UIView = null;\n    /**@description 等待加载完成回调 */\n    finishCb: ((view: any) => void)[] = [];\n    /**@description 等待获取界面回调 */\n    getViewCb: ((view: any) => void)[] = [];\n    /**是否预加载,不显示出来，但会加到当前场景上 */\n    isPreload: boolean = false;\n    /**@description 资源信息 */\n    info: ResourceInfo = null;\n\n    /**@description 界面动态加载的数据 */\n    loadData: ViewDynamicLoadData = new ViewDynamicLoadData();\n\n    node: cc.Node = null;\n\n    private doGet(view, className: string, msg: string) {\n        for (let i = 0; i < this.getViewCb.length; i++) {\n            let cb = this.getViewCb[i];\n            if (cb) {\n                cb(view);\n                if (CC_DEBUG) cc.warn(`ViewData do get view : ${className} msg : ${msg}`);\n            }\n        }\n\n        this.getViewCb = [];\n    }\n\n    private doFinish(view, className: string, msg: string) {\n        for (let i = 0; i < this.finishCb.length; i++) {\n            let cb = this.finishCb[i];\n            if (cb) {\n                cb(view);\n                if (CC_DEBUG) cc.warn(`ViewData do finish view : ${className} msg : ${msg}`);\n            }\n        }\n        this.finishCb = [];\n    }\n\n    doCallback(view, className: string, msg: string) {\n        this.doFinish(view, className, msg);\n        this.doGet(view, className, msg);\n    }\n}\n\nexport class UIManager {\n\n    private static _instance: UIManager = null;\n    public static Instance() { return this._instance || (this._instance = new UIManager()); }\n    public _logTag = `[UIManager]`;\n    /**@description 视图 */\n    private _viewDatas: Map<string, ViewData> = new Map<string, ViewData>();\n    private _viewList: ViewData[] = [];\n    private getViewData(className: string): ViewData;\n    private getViewData<T extends UIView>(uiClass: UIClass<T>): ViewData;\n    private getViewData(data: any): ViewData {\n        let className = this.getClassName(data);\n        if (!className) return null;\n        let viewData = this._viewDatas.has(className) ? this._viewDatas.get(className) : null;\n        return viewData;\n    }\n\n    private getClassName(className: string): string;\n    private getClassName<T extends UIView>(uiClass: UIClass<T>): string;\n    private getClassName(data: any): string {\n        if (!data) return null;\n        let className = null;\n        if (typeof data == \"string\") {\n            className = data;\n        }\n        else {\n            className = cc.js.getClassName(data);\n        }\n        return className;\n    }\n\n    /**@description GC的间隔时间,目前暂定为进入完成指定场景，后，多少时间内没有界面打开或关闭操作，做GC操作释放内存 */\n    private GC_INTERVAL = 1500;\n    /**@description 最后一次GC操作时间，当打开或关闭界面时，把当前GC时间重置为当前时间\n     * 在进入到大厅1秒后无界面的关闭与打开，做GC内存释放操作\n     */\n    private _lastGCTime = 0;\n\n    /**@description 是否需要做GC操作 */\n    private _isNeedGC = false;\n\n    /**@description 无主资源 */\n    public garbage = new ViewDynamicLoadData(DYNAMIC_LOAD_GARBAGE);\n    /**@description 驻留内存资源 */\n    public retainMemory = new ViewDynamicLoadData(DYNAMIC_LOAD_RETAIN_MEMORY);\n\n    public uiLoading: UILoadingDelegate = null;\n    public toast: ToastDelegate = null;\n\n    public preload<T extends UIView>(uiClass: UIClass<T>, bundle: BUNDLE_TYPE) {\n        return this._open(uiClass, bundle, 0, true, null, null);\n    }\n\n    /**\n     * @description open<T extends UIView>(config: { type: UIClass<T>, zIndex?: number, args?: any[] , delay?: number}) : Promise<T>\n     * @param config 配置信息 \n     * @param config.type UIView\n     * @param config.zIndex 节点层级，默认为0\n     * @param config.args 传入的参数列表\n     * @param config.delay >0 多少时间未加载界面完成显示加载动画，<=0 | undefined | null 不显示动画\n     * @param config.name 界面名字，如 商城 首充\n     * @example 示例\n     * Manager.uiManager.open({type:GameLayer});\n     * Manager.uiManager.open({type:GameLayer,delay:ViewDelay.delay});\n     * Manager.uiManager.open({type:GameLayer,delay:ViewDelay.delay,zIndex:ViewZOrder.zero});\n     * Manager.uiManager.open({type:GameLayer,delay:ViewDelay.delay,zIndex:ViewZOrder.zero,args:[\"aa\",\"bb\"]});\n     * \n     * @description 弃用接口 open<T extends UIView>(uiClass: UIClass<T>, zIndex?: number, ...args: any[]): Promise<T>\n     * @param uiClass UIView\n     * @param zIndex 节点层级 \n     * @param args 传入参数列表\n     */\n    public open<T extends UIView>(config: { type: UIClass<T>, bundle?: BUNDLE_TYPE, zIndex?: number, args?: any[], delay?: number, name?: string }): Promise<T> {\n        return this._open(config.type, config.bundle, config.zIndex ? config.zIndex : 0, false, config.args, config.delay, config.name);\n    }\n\n    private _open<T extends UIView>(uiClass: UIClass<T>, bundle: BUNDLE_TYPE, zOrder: number = 0, isPreload: boolean, args: any[], delay: number, name?: string) {\n        return new Promise<T>((reslove, reject) => {\n            if (!uiClass) {\n                if (CC_DEBUG) cc.log(`${this._logTag}open ui class error`);\n                reslove(null);\n                return;\n            }\n            let className = cc.js.getClassName(uiClass);\n\n            G.Logger.log(`打开界面 ${className}`);\n\n\n            let canvas = this.getCanvas();\n            if (!canvas) {\n                if (CC_DEBUG) cc.error(`${this._logTag}找不到场景的Canvas节点`);\n                reslove(null);\n                return;\n            }\n\n            //打开界面时，更新GC时间\n            this.recordGCTime();\n            let viewData = this.getViewData(uiClass);\n            if (viewData) {\n                viewData.isPreload = isPreload;\n                //已经加载\n                if (viewData.isLoaded) {\n                    viewData.status = ViewStatus.WAITTING_NONE;\n                    if (!isPreload) {\n                        if (viewData.view && cc.isValid(viewData.node)) {\n                            viewData.node.zIndex = zOrder;\n                            if (!viewData.node.parent) {\n                                viewData.node.parent = this.getCanvas();\n                            }\n                            Manager.adaptor.fullScreenAdapt(viewData.node);\n                            viewData.view.show(args);\n                        }\n                    }\n                    this._viewList.push(viewData);\n                    reslove(<T>viewData.view);\n                    return;\n                }\n                else {\n                    viewData.status = ViewStatus.WAITTING_NONE;\n                    if (!isPreload) {\n                        if (this.uiLoading) this.uiLoading.show(delay, name);\n                    }\n                    //正在加载中\n                    if (CC_DEBUG) cc.warn(`${this._logTag}${className} 正在加载中...`);\n                    viewData.finishCb.push(reslove);\n                    return;\n                }\n            }\n            else {\n                viewData = new ViewData();\n                viewData.loadData.name = className;\n                let prefabUrl = uiClass.getPrefabUrl();\n                viewData.isPreload = isPreload;\n                this._viewDatas.set(className, viewData);\n\n                let progressCallback: (completedCount: number, totalCount: number, item: any) => void = null;\n\n                // if (!isPreload) {\n                if (this.uiLoading) this.uiLoading.show(delay, name);\n                //预加载界面不显示进度\n                progressCallback = (completedCount: number, totalCount: number, item: any) => {\n                    let progress = Math.ceil((completedCount / totalCount) * 100);\n                    dispatch(\"loadGameProgress\", progress)\n                    if (this.uiLoading) this.uiLoading.updateProgress(progress);\n                };\n                // }\n                this.loadPrefab(bundle, prefabUrl, progressCallback)\n                    .then((prefab) => {\n                        viewData.info = new ResourceInfo;\n                        viewData.info.url = prefabUrl;\n                        viewData.info.type = cc.Prefab;\n                        viewData.info.data = prefab;\n                        viewData.info.bundle = bundle;\n                        this.createNode(className, uiClass, reslove, prefab, args, zOrder, bundle, isPreload);\n                        if (this.uiLoading) this.uiLoading.hide();\n                    }).catch((reason) => {\n                        viewData.isLoaded = true;\n                        cc.error(reason);\n                        this.close(uiClass);\n                        viewData.doCallback(null, className, \"打开界面异常\");\n                        reslove(null);\n                        let uiName = \"\";\n                        if (CC_DEBUG) {\n                            uiName = className;\n                        }\n                        if (name) {\n                            uiName = name;\n                        }\n                        if (this.toast) this.toast.show(`加载界面${uiName}失败，请重试`);\n                        if (this.uiLoading) this.uiLoading.hide();\n                    });\n            }\n        });\n    }\n\n    private _addComponent<T extends UIView>(uiNode: cc.Node, uiClass: UIClass<T>, viewData: ViewData, className: string, zOrder: number, args: any[], bundle: BUNDLE_TYPE): UIView {\n        if (uiNode) {\n            //挂载脚本\n            let view = uiNode.getComponent(uiClass) as UIView;\n            if (!view) {\n                view = uiNode.addComponent(uiClass);\n                if (!view) {\n                    if (CC_DEBUG) cc.error(`${this._logTag}挂载脚本失败 : ${className}`);\n                    return null;\n                }\n                else {\n                    if (CC_DEBUG) cc.log(`${this._logTag}挂载脚本 : ${className}`);\n                }\n            }\n\n            Manager.adaptor.fullScreenAdapt(uiNode);\n\n            view.className = className;\n            view.bundle = bundle\n            viewData.view = view;\n            //去掉init函数，处理放在onLoad中，\n            (<any>view)._args = args;\n\n            //界面显示在屏幕中间\n            let widget = view.getComponent(cc.Widget);\n            if (widget) {\n                if (CC_DEBUG) cc.warn(`${this._logTag}你已经添加了cc.Widget组件，将会更改成居中模块`);\n                widget.isAlignHorizontalCenter = true;\n                widget.horizontalCenter = 0;\n                widget.isAlignVerticalCenter = true;\n                widget.verticalCenter = 0;\n            }\n            else {\n                widget = view.addComponent(cc.Widget);\n                widget.isAlignHorizontalCenter = true;\n                widget.horizontalCenter = 0;\n                widget.isAlignVerticalCenter = true;\n                widget.verticalCenter = 0;\n            }\n\n            if (!viewData.isPreload) {\n                uiNode.parent = this.getCanvas();\n                uiNode.zIndex = zOrder;\n            }\n            return view;\n        }\n        else {\n            return null;\n        }\n    }\n\n    private createNode<T extends UIView>(className: string, uiClass: UIClass<T>, reslove, data: cc.Prefab, args: any[], zOrder: number, bundle: BUNDLE_TYPE, isPreload) {\n        let viewData = this._viewDatas.get(className);\n        viewData.isLoaded = true;\n        if (viewData.status == ViewStatus.WAITTING_CLOSE) {\n            //加载过程中有人关闭了界面\n            reslove(null);\n            if (CC_DEBUG) cc.warn(`${this._logTag}${className}正等待关闭`);\n            //如果此时有地方正在获取界面，直接返回空\n            viewData.doCallback(null, className, \"获取界内已经关闭\");\n            return;\n        }\n\n        let uiNode: cc.Node = cc.instantiate(data);\n        viewData.node = uiNode;\n        let view = this._addComponent(uiNode, uiClass, viewData, className, zOrder, args, bundle);\n        if (!view) {\n            reslove(null);\n            return;\n        }\n\n        this._viewList.push(viewData);\n\n        if (viewData.status == ViewStatus.WATITING_HIDE) {\n            //加载过程中有人隐藏了界面\n            view.hide();\n            if (CC_DEBUG) cc.warn(`${this._logTag}加载过程隐藏了界面${className}`);\n            reslove(view);\n            viewData.doCallback(view, className, \"加载完成，但加载过程中被隐藏\");\n        }\n        else {\n            if (CC_DEBUG) cc.log(`${this._logTag}open view : ${className}`)\n\n            if (!isPreload) {\n                view.show(args);\n            }\n            reslove(view)\n            viewData.doCallback(view, className, \"加载完成，回调之前加载中的界面\");\n        }\n    }\n\n    private loadPrefab(bundle: BUNDLE_TYPE, url: string, progressCallback: (completedCount: number, totalCount: number, item: any) => void) {\n        return new Promise<cc.Prefab>((resolove, reject) => {\n            if (bundle == undefined || bundle == \"\" || bundle == null) {\n                bundle = BUNDLE_RESOURCES;\n            }\n            Manager.assetManager.load(bundle, url, cc.Prefab, progressCallback, (data: ResourceCacheData) => {\n                if (data && data.data && data.data instanceof cc.Prefab) {\n                    resolove(data.data);\n                }\n                else {\n                    reject(`加载prefab : ${url} 失败`)\n                }\n            });\n        });\n    }\n\n    public getCanvas(): cc.Node {\n        let rootScene = cc.director.getScene();\n        if (!rootScene) {\n            if (CC_DEBUG) cc.error(`${this._logTag}当前场景为空 ： ${cc.director.getScene().name}`);\n            return null;\n        }\n\n        let root = rootScene.getChildByName(\"Canvas\");\n        if (!root) {\n            if (CC_DEBUG) cc.error(`${this._logTag}当前场景上找不到 Canvas 节点`);\n            return null;\n        }\n        return root;\n    }\n\n    public onDirectorAfterDraw(): boolean {\n        let cando = true;\n        let hasWaitingClose = false;\n        this._viewDatas.forEach((viewData) => {\n            if (viewData) {\n                //只要有一个界面没加载完成，都不能进行处理\n                if (!viewData.isLoaded) cando = false;\n                if (viewData.status == ViewStatus.WAITTING_CLOSE) hasWaitingClose = true;\n            }\n        });\n        if (hasWaitingClose && cando) {\n            console.time(\"释放资源\");\n            this._viewDatas.forEach((viewData, className) => {\n                if (viewData && viewData.status == ViewStatus.WAITTING_CLOSE) {\n                    console.time(`${this._logTag} close view : ${className}`);\n                    if (cc.isValid(viewData.node)) {\n                        viewData.node.removeFromParent(false);\n                        viewData.node.destroy();\n                    }\n                    // viewData.loadData.clear();\n                    // Manager.assetManager.releaseAsset(viewData.info);\n                    this._viewDatas.delete(className);\n                    console.timeEnd(`${this._logTag} close view : ${className}`);\n                }\n            });\n            //删除无主加载数据\n            // this.garbage.clear()\n            console.timeEnd(\"释放资源\");\n            //此处GC操作另行做优化，不能过度的GC会造成动画的卡顿，需要挑一个比较空闲的时间段来做GC操作\n            //cc.sys.garbageCollect();\n        }\n\n        //GC操作处理\n        if (this._isNeedGC) {\n            let now = Date.timeNowMillisecons();\n            if (now - this._lastGCTime > this.GC_INTERVAL) {\n                //抽时间做GC操作\n                cc.sys.garbageCollect();\n                if (CC_DEBUG) cc.log(`GC内存操作`);\n                this._isNeedGC = false;\n            }\n        }\n        return cando;\n    }\n\n    /**@description 添加动态加载的本地资源 */\n    public addLocal(info: ResourceInfo, className: string) {\n        if (info) {\n            let viewData = this.getViewData(className);\n            if (viewData) {\n                viewData.loadData.addLocal(info, className);\n            }\n        }\n    }\n\n    /**@description 添加动态加载的远程资源 */\n    public addRemote(info: ResourceInfo, className: string) {\n        if (info) {\n            let viewData = this.getViewData(className);\n            if (viewData) {\n                viewData.loadData.addRemote(info, className);\n            }\n        }\n    }\n\n    public recordGCTime(isNeedGC: boolean = null) {\n        if (isNeedGC != null) this._isNeedGC = isNeedGC;\n        this._lastGCTime = Date.timeNowMillisecons();\n    }\n\n    public close<T extends UIView>(uiClass: UIClass<T>);\n    public close(className: string);\n    public close(data: any) {\n        //当前所有界面都已经加载完成\n        let viewData = this.getViewData(data);\n        if (viewData) {\n            while (true) {\n                let index: number = this._viewList.lastIndexOf(viewData)\n                if (index == -1) {\n                    break;\n                }\n                this._viewList.splice(index, 1);\n            }\n            viewData.status = ViewStatus.WAITTING_CLOSE;\n            if (viewData.view && cc.isValid(viewData.node)) {\n                viewData.node.removeFromParent(false);\n            }\n            this.recordGCTime();\n        }\n    }\n\n    /**@description 关闭除传入参数以外的所有其它界面,不传入，关闭所有界面 */\n    public closeExcept(views: (UIClass<UIView> | string | UIView)[]) {\n        let self = this;\n        if (views == undefined || views == null || views.length == 0) {\n            //关闭所有界面\n            // if (CC_DEBUG) cc.error(`请检查参数，至少需要保留一个界面，不然就黑屏了，大兄弟`);\n            this._viewDatas.forEach((viewData: ViewData, key: string) => {\n                self.close(key);\n            });\n            return;\n        }\n\n        let viewClassNames = new Set<string>();\n\n        for (let i = 0; i < views.length; i++) {\n            viewClassNames.add(this.getClassName(views[i] as any));\n        }\n\n        this._viewDatas.forEach((viewData: ViewData, key: string) => {\n            if (viewClassNames.has(key)) {\n                //如果包含，不做处理，是排除项\n                return;\n            }\n            self.close(key);\n        });\n\n        this.printViews();\n    }\n\n    public hide(className: string);\n    public hide<T extends UIView>(uiClass: UIClass<T>);\n    public hide(data: any) {\n        let viewData = this.getViewData(data);\n        if (viewData) {\n            if (viewData.isLoaded) {\n                //已经加载完成，说明已经是直实存在的界面，按照正常游戏进行删除\n                if (viewData.view && cc.isValid(viewData.view.node)) {\n                    viewData.view.hide();\n                }\n                if (CC_DEBUG) cc.log(`${this._logTag}hide view : ${viewData.loadData.name}`);\n            }\n            else {\n                //没有加载写成，正常加载中\n                viewData.status = ViewStatus.WATITING_HIDE;\n            }\n        }\n    }\n\n    public getView(className: string): Promise<any>;\n    public getView<T extends UIView>(uiClass: UIClass<T>): Promise<T>;\n    public getView(data: any): any {\n        return new Promise<any>((resolove, reject) => {\n            if (data == undefined || data == null) {\n                resolove(null);\n                return;\n            }\n            let viewData = this.getViewData(data);\n            if (viewData) {\n                if (viewData.isPreload) {\n                    //如果只是预加载，返回空，让使用者用open的方式打开\n                    resolove(null);\n                } else {\n                    if (viewData.isLoaded) {\n                        resolove(viewData.view);\n                    }\n                    else {\n                        //加载中\n                        viewData.getViewCb.push(resolove);\n                    }\n                }\n            }\n            else {\n                resolove(null);\n            }\n        });\n    }\n\n    public getLastView(): UIView {\n        let lastView: UIView = null;\n        if (this._viewList.length > 0) {\n            lastView = this._viewList[this._viewList.length - 1].view;\n        }\n        return lastView;\n    }\n\n    public checkView(url: string, className: string) {\n        if (CC_DEBUG && className) {\n            this.getView(className).then((view) => {\n                if (!view) {\n                    let viewData = this.getViewData(className);\n                    if (viewData) {\n                        //预置加载返回的view是空\n                        //排除掉这种方式的\n                        if (!viewData.isPreload) {\n                            cc.error(`资源 : ${url} 的持有者必须由UIManager.open方式打开`);\n                        }\n                    } else {\n                        cc.error(`资源 : ${url} 的持有者必须由UIManager.open方式打开`);\n                    }\n                }\n            });\n        }\n    }\n\n    public isShow(className: string): boolean;\n    public isShow<T extends UIView>(uiClass: UIClass<T>): boolean;\n    public isShow(data: any) {\n        let viewData = this.getViewData(data);\n        if (!viewData) {\n            return false;\n        }\n        if (viewData.isLoaded && viewData.status == ViewStatus.WAITTING_NONE) {\n            if (viewData.view) return viewData.view.node.active;\n        }\n        return false;\n    }\n\n    public fullScreenAdapt() {\n        this._viewDatas.forEach((data) => {\n            if (data.isLoaded && data.view) {\n                Manager.adaptor.fullScreenAdapt(data.view.node);\n            }\n        });\n    }\n\n    /*获取当前canvas的组件 */\n    public getCanvasComponent(): cc.Component {\n        return this.getCanvas().getComponent(\"MainController\");\n    }\n\n    public addComponent<T extends cc.Component>(type: { new(): T }): T;\n    public addComponent(className: string): any;\n    public addComponent(data: any) {\n        let canvas = this.getCanvas();\n        if (canvas) {\n            let component = canvas.getComponent(data);\n            if (component) {\n                if (typeof data == \"string\") {\n                    if (CC_DEBUG) cc.warn(`${this._logTag}已经存在 Component ${component}`)\n                }\n                else {\n                    if (CC_DEBUG) cc.warn(`${this._logTag}已经存在 Component ${cc.js.getClassName(data)}`);\n                }\n                return component;\n            }\n            else {\n                return canvas.addComponent(data);\n            }\n        }\n        return null;\n    }\n\n    public removeComponent(component: string | cc.Component) {\n        let canvas = this.getCanvas();\n        if (canvas) canvas.removeComponent(component);\n    }\n\n    public printViews() {\n        cc.log(`${this._logTag}---------views----start-----`);\n        this._viewDatas.forEach((value: ViewData, key: string) => {\n            cc.log(`[${key}] isLoaded : ${value.isLoaded} status : ${value.status} view : ${value.view} active : ${value.view && value.view.node ? value.view.node.active : false}`);\n        });\n        cc.log(`${this._logTag}---------views----end-----`);\n    }\n\n    public printCanvasChildren() {\n        cc.log(`${this._logTag}-----------printCanvasChildren--start-----------`);\n        let canvas = this.getCanvas();\n        if (canvas) {\n            let children = canvas.children;\n            for (let i = 0; i < children.length; i++) {\n                cc.log(`${children[i].name} active : ${children[i].active}`);\n            }\n        }\n        cc.log(`${this._logTag}-----------printCanvasChildren--end-----------`);\n    }\n\n    public isInLogin(): boolean {\n        return !!this.getViewData(\"LoginView\");\n    }\n\n    public isInHall(): boolean {\n        return !!this.getViewData(\"HallNewView\");\n    }\n\n    public isInGame(): boolean {\n        return !!this.getViewData(\"CrashGameView\");\n    }\n\n    public isInCurrentGame(gameName: string): boolean {\n        return !!this.getViewData(gameName);\n    }\n}"]}
{"version":3,"sources":["assets/script/redPakge/RedPakgeReceive.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sFAA8D;AAE9D,+DAAuE;AACvE,6DAA0D;AAC1D,kEAA2E;AAC3E,oEAA4C;AAI5C,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAI5C,IAAqB,eAAe,GAApC,MAAqB,eAAgB,SAAQ,gBAAM;IAAnD;;QAGI,cAAS,GAAY,IAAI,CAAC;QAE1B,aAAQ,GAAY,IAAI,CAAC;QAGzB,kBAAa,GAAkB,IAAI,CAAC;QAoCpC,iBAAiB;IACrB,CAAC;IAlCG,MAAM;QACF,KAAK,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC;IAED,aAAa;QACT,KAAK,CAAC,aAAa,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,oBAAO,CAAC,0BAAU,CAAC,KAAK,EAAE,4BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAE1H,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,IAAI,GAAG,GAAG,4BAAY,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,CAAC,CAAC;QAC3E,IAAI,MAAM,GAAG,4BAAY,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3E,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,0BAAU,CAAC,KAAK,EACjC,4BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,0BAA0B,EACpD,MAAM,CAAC,CAAC;IAChB,CAAC;IACO,MAAM;QACV,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAA;QAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAA;IAEhC,CAAC;IACO,WAAW,CAAC,GAAG;QACnB,qBAAqB;QACrB,IAAI,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;YAClC,IAAI,GAAG,CAAC,sBAAsB,IAAI,GAAG,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAA;gBAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAA;gBAC7B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;aACxD;SACJ;IAEL,CAAC;CAEJ,CAAA;AA1CG;IADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACQ;AAE1B;IADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACO;AAGzB;IADC,QAAQ,CAAC,uBAAa,CAAC;sDACY;AARnB,eAAe;IAFnC,OAAO;IACP,0BAAa,CAAC,2BAAY,CAAC,QAAQ,CAAC;GAChB,eAAe,CA6CnC;kBA7CoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["import ScroViewLogic from \"../common/component/ScroViewLogic\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { protoPackage, serverType } from \"../common/net/CommonService\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { injectService, makeKey } from \"../framework/decorator/Decorators\";\nimport UIView from \"../framework/ui/UIView\";\nimport RedPakgeRecordDetail from \"./RedPakgeRecordDetail\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\n@injectService(LobbyService.instance)\nexport default class RedPakgeReceive extends UIView {\n\n    @property(cc.Node)\n    noTipNode: cc.Node = null;\n    @property(cc.Node)\n    listNode: cc.Node = null;\n\n    @property(ScroViewLogic)\n    scroViewLogic: ScroViewLogic = null;\n\n    service: LobbyService;\n    onLoad() {\n        super.onLoad();\n    }\n\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(makeKey(serverType.Lobby, protoPackage.hall.HallCmd.CMD_RedPacketReceiveRecord), this.refreshList);\n        \n    }\n    onEnable() {\n        this.initUI()\n        let req = protoPackage.hall.RedPacketSendRecordReq.create({currentPage:1});\n        let buffer = protoPackage.hall.RedPacketSendRecordReq.encode(req).finish();\n        this.service.sendMsg(serverType.Lobby,\n            protoPackage.hall.HallCmd.CMD_RedPacketReceiveRecord,\n            buffer);\n    }\n    private initUI(){\n        this.listNode.active = false\n        this.noTipNode.active = true\n\n    }\n    private refreshList(msg) {\n        // G.Logger.log(msg);\n        if (msg && msg.statusMsg.status == 0) {\n            if (msg.redPacketReceiveRecord && msg.redPacketReceiveRecord.length > 0) {\n                this.listNode.active = true\n                this.noTipNode.active = false\n                this.scroViewLogic.initUI(msg.redPacketReceiveRecord)\n            }\n        }\n\n    }\n    // update (dt) {}\n}\n"]}
{"version":3,"sources":["assets/games/crash/script/component/CrashBetPlayerListView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as ComponentDefine from \"../../../../script/common/define/ComponentDefine\";\nimport * as ComponentInterface from \"../../../../script/common/interface/ComponentInterface\";\nimport TypeUtils from \"../../../../script/common/utils/TypeUtils\";\n\n// 每次执行协程分配的时间（单位：毫秒）\nconst EXEC_GENERATOR_TIME: number = 8;\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class CrashBetPlayerListView extends cc.Component {\n\n    // @property({ tooltip: \"是否分页加载\" })\n    // private isPaging: boolean = false;\n\n    // @property({ type: cc.Component.EventHandler, tooltip: \"左边拉取回调\", visible: (function () { return this.isPaging && this.direction === ComponentDefine.DirectionType.HORIZONTAL }) })\n    // private pullLeftEventHandler: cc.Component.EventHandler = new cc.Component.EventHandler();\n\n    // @property({ type: cc.Component.EventHandler, tooltip: \"右边拉取回调\", visible: (function () { return this.isPaging && this.direction === ComponentDefine.DirectionType.HORIZONTAL }) })\n    // private pullRightEventHandler: cc.Component.EventHandler = new cc.Component.EventHandler();\n\n    // @property({ type: cc.Component.EventHandler, tooltip: \"顶部拉取回调\", visible: (function () { return this.isPaging && this.direction === ComponentDefine.DirectionType.VERTICAL }) })\n    // private pullTopEventHandler: cc.Component.EventHandler = new cc.Component.EventHandler();\n\n    // @property({ type: cc.Component.EventHandler, tooltip: \"底部拉取回调\", visible: (function () { return this.isPaging && this.direction === ComponentDefine.DirectionType.VERTICAL }) })\n    // private pullBottomEventHandler: cc.Component.EventHandler = new cc.Component.EventHandler();\n\n    // @property({ type: cc.SpriteFrame, tooltip: \"刷新拉取等待图片\", visible: (function () { return this.isPaging }) })\n    // private waitingImage: cc.SpriteFrame = null;\n\n    @property(cc.Node)\n    private content: cc.Node = null;\n\n    @property({ type: cc.Prefab, tooltip: \"列表项预制\" })\n    private itemPrefab: cc.Prefab = null;\n\n    @property({ type: cc.Enum(ComponentDefine.ListViewLoadMode), tooltip: \"加载模式\\nNONE 直接加载\\nFRAME 分帧加载\\nENDLESS 无限加载\" })\n    public mode: ComponentDefine.ListViewLoadMode = ComponentDefine.ListViewLoadMode.NONE;\n\n    @property({ type: cc.Enum(ComponentDefine.DirectionType), tooltip: \"滑动方向\\nHORIZONTAL 水平\\nVERTICAL 垂直\" })\n    private direction: ComponentDefine.DirectionType = ComponentDefine.DirectionType.VERTICAL;\n\n    // @property({ type: cc.Float, tooltip: \"滚动之后的减速系数。取值范围是 0-1，如果是 1 则立马停止滚动，如果是 0，则会一直滚动到 content 的边界。\", override: true, visible: true })\n    // public brake: number = 0.75;\n\n    // @property({ type: cc.Float, tooltip: \"回弹所需要的时间。取值范围是 0-10。\", override: true, visible: true })\n    // public bounceDuration: number = 0.23;\n\n    @property({ type: cc.Float, tooltip: \"垂直间距\", visible: (function () { return this.direction === ComponentDefine.DirectionType.VERTICAL }) })\n    private spacingY: number = 0;\n\n    @property({ type: cc.Float, tooltip: \"顶间距\", visible: (function () { return this.direction === ComponentDefine.DirectionType.VERTICAL }) })\n    private top: number = 0;\n\n    @property({ type: cc.Float, tooltip: \"底间距\", visible: (function () { return this.direction === ComponentDefine.DirectionType.VERTICAL }) })\n    private bottom: number = 0;\n\n    @property({ type: cc.Float, tooltip: \"水平间距\", visible: (function () { return this.direction === ComponentDefine.DirectionType.HORIZONTAL }) })\n    private spacingX: number = 0;\n\n    @property({ type: cc.Float, tooltip: \"左间距\", visible: (function () { return this.direction === ComponentDefine.DirectionType.HORIZONTAL }) })\n    private left: number = 0;\n\n    @property({ type: cc.Float, tooltip: \"右间距\", visible: (function () { return this.direction === ComponentDefine.DirectionType.HORIZONTAL }) })\n    private right: number = 0;\n\n    @property({ type: cc.Component.EventHandler, tooltip: \"点击列表项回调\", visible: true })\n    private clickItemEventHandler: cc.Component.EventHandler = new cc.Component.EventHandler();\n\n    // 是否加载完成\n    private _isLoaded: boolean = false;\n    // 数据列表\n    private _itemDataList: unknown[] = [];\n    // 列表项节点池\n    private _itemNodePool: cc.NodePool = new cc.NodePool();\n    // 最后节点位置\n    private _lastPos: cc.Vec2 = cc.v2(0, 0);\n    // 渲染列表项起始下标\n    private _renderItemStartIndex: number = null;\n    // 渲染列表项结束下标\n    private _renderItemEndIndex: number = null;\n    // 是否渲染中\n    private _isRendering: boolean = false;\n    // 缓存列表\n    private _itemCacheDataList: unknown[] = [];\n    // 渲染中操作次数\n    private _renderingOperateCount: number = 0;\n    // 缓存渲染列表项起始下标\n    private _cacheRenderItemStartIndex: number = null;\n\n    /**\n     * 修改方向类型属性\n     * @param value {ComponentDefine.DirectionType} 方向类型\n     */\n    private changeDirection(value: ComponentDefine.DirectionType): void {\n        // this.horizontal = value === ComponentDefine.DirectionType.HORIZONTAL;\n        // this.vertical = value === ComponentDefine.DirectionType.VERTICAL;\n\n        // cc.Class[\"Attr\"].setClassAttr(this, \"top\", \"visible\", this.direction === ComponentDefine.DirectionType.VERTICAL);\n        // cc.Class[\"Attr\"].setClassAttr(this, \"bottom\", \"visible\", this.direction === ComponentDefine.DirectionType.VERTICAL);\n        // cc.Class[\"Attr\"].setClassAttr(this, \"spacingY\", \"visible\", this.direction === ComponentDefine.DirectionType.VERTICAL);\n        // cc.Class[\"Attr\"].setClassAttr(this, \"verticalScrollBar\", \"visible\", this.direction === ComponentDefine.DirectionType.VERTICAL);\n        // cc.Class[\"Attr\"].setClassAttr(this, \"left\", \"visible\", this.direction === ComponentDefine.DirectionType.HORIZONTAL);\n        // cc.Class[\"Attr\"].setClassAttr(this, \"right\", \"visible\", this.direction === ComponentDefine.DirectionType.HORIZONTAL);\n        // cc.Class[\"Attr\"].setClassAttr(this, \"spacingX\", \"visible\", this.direction === ComponentDefine.DirectionType.HORIZONTAL);\n        // cc.Class[\"Attr\"].setClassAttr(this, \"horizontalScrollBar\", \"visible\", this.direction === ComponentDefine.DirectionType.HORIZONTAL);\n    }\n\n    onLoad() {\n        this.register();\n        this.initData();\n        this.initView();\n    }\n\n    start() {\n\n    }\n\n    /**\n     * 设置项\n     * @param itemsData {T | T[]} 数据|数据列表\n     */\n    public set<T>(itemsData: T | T[]): void {\n        if (TypeUtils.isNull(itemsData)) {\n            return;\n        }\n\n        if (TypeUtils.isArray(itemsData) && (itemsData as Array<T>).length <= 0) {\n            return;\n        }\n\n        if (this._isRendering) {\n            this.setData(this._itemCacheDataList, itemsData);\n            this._cacheRenderItemStartIndex = 0;\n            ++this._renderingOperateCount;\n        } else {\n            this.setData(this._itemDataList, itemsData);\n            this._renderItemStartIndex = 0;\n            this._renderItemEndIndex = this._itemDataList.length;\n            this.updateListItem();\n        }\n    }\n\n    /**\n     * 设置数据项\n     * @param dataList {T[]} 设置列表\n     * @param itemsData {T | T[]} 数据|数据列表\n     */\n    public setData<T>(dataList: T[], itemsData: T | T[]): void {\n        dataList.length = 0;\n        this.insertData(dataList, itemsData, 0);\n    }\n\n    /**\n     * 插入项\n     * @param itemsData {T | T[]} 数据|数据列表\n     * @param index {number} 下标（默认：最后插入）\n     */\n    public insert<T>(itemsData: T | T[], index?: number): void {\n        if (TypeUtils.isNull(itemsData)) {\n            return;\n        }\n\n        if (TypeUtils.isArray(itemsData) && (itemsData as Array<T>).length <= 0) {\n            return;\n        }\n\n        let dataList: unknown[] = null;\n        if (this._isRendering) {\n            if (this._renderingOperateCount <= 0) {\n                this._itemCacheDataList = [].concat(this._itemDataList);\n            }\n            dataList = this._itemCacheDataList;\n        } else {\n            dataList = this._itemDataList;\n        }\n\n        if (TypeUtils.isNull(index)) {\n            index = dataList.length;\n        } else {\n            if (index < 0) {\n                index = 0;\n            } else if (index > dataList.length) {\n                index = dataList.length;\n            }\n        }\n\n        if (this._isRendering) {\n            this.insertData(dataList, itemsData, index);\n            if (TypeUtils.isNull(this._cacheRenderItemStartIndex)) {\n                this._cacheRenderItemStartIndex = index;\n            } else if (this._cacheRenderItemStartIndex > index) {\n                this._cacheRenderItemStartIndex = index;\n            }\n            ++this._renderingOperateCount;\n        } else {\n            this.insertData(dataList, itemsData, index);\n            this._renderItemStartIndex = index;\n            this._renderItemEndIndex = dataList.length;\n            this.updateListItem();\n        }\n    }\n\n    /**\n     * 插入数据项\n     * @param dataList {T[]} 插入列表\n     * @param itemsData {T | T[]} 数据|数据列表\n     * @param index {number} 下标\n     */\n    public insertData<T>(dataList: T[], itemsData: T | T[], index: number): void {\n        if (Array.isArray(itemsData)) {\n            let spliceParam: unknown[] = [index, 0];\n            spliceParam = spliceParam.concat(itemsData);\n            dataList.splice.apply(dataList, spliceParam);\n        } else {\n            dataList.splice(index, 0, itemsData);\n        }\n    }\n\n    /**\n     * 删除项\n     * @param index {number} 下标（需要删除的下标）\n     * @param count {number} 数量（删除下标后的数量）\n     */\n    public remove(index?: number, count?: number): void {\n        if (this._itemDataList.length <= 0) {\n            return;\n        }\n\n        let dataList: unknown[] = null;\n        if (this._isRendering) {\n            if (this._renderingOperateCount <= 0) {\n                this._itemCacheDataList = [].concat(this._itemDataList);\n            }\n            dataList = this._itemCacheDataList;\n        } else {\n            dataList = this._itemDataList;\n        }\n\n        if (TypeUtils.isNull(index) && TypeUtils.isNull(count)) {\n            index = 0;\n            count = dataList.length;\n        } else if (TypeUtils.isNull(index)) {\n            index = dataList.length - count;\n            if (index < 0) {\n                index = 0;\n                count = dataList.length;\n            }\n        } else if (TypeUtils.isNull(count)) {\n            if (index < 0) {\n                index = 0;\n            } else if (index >= dataList.length) {\n                index = dataList.length - 1;\n            }\n            count = dataList.length - index;\n        }\n\n        if (this._isRendering) {\n            dataList.splice(index, count);\n            if (TypeUtils.isNull(this._cacheRenderItemStartIndex)) {\n                this._cacheRenderItemStartIndex = index;\n            } else if (this._cacheRenderItemStartIndex > index) {\n                this._cacheRenderItemStartIndex = index;\n            }\n            ++this._renderingOperateCount;\n        } else {\n            dataList.splice(index, count);\n            this._renderItemStartIndex = index;\n            this._renderItemEndIndex = Math.max(this._itemDataList.length, this.content.childrenCount);\n            this.updateListItem();\n        }\n    }\n\n    public clear(): void {\n        this.remove(0);\n    }\n\n    public getChildCount(): number {\n        return this.content.childrenCount;\n    }\n\n    public getChildNode(startIndex: number, endIndex: number): cc.Node[] {\n        return this.content.children.slice(startIndex, endIndex);\n    }\n\n    public getChildNodeByIndex(index: number): cc.Node {\n        return this.content.children[index];\n    }\n\n    /**\n     * 刷新列表项\n     */\n    private updateListItem(): void {\n        if (!this._isLoaded) {\n            return;\n        }\n\n        this.setRendering(true);\n\n        this.content.setContentSize(this.getInnerEstimateSize());\n\n        if (this.mode === ComponentDefine.ListViewLoadMode.ENDLESS) {\n\n        } else {\n            let putIndexList: number[] = [];\n            let isFrameLoad: boolean = false;\n            for (let i: number = this._renderItemStartIndex; i < this._renderItemEndIndex; ++i) {\n                let itemNode: cc.Node = this.content.children[i];\n                let itemData: unknown = this._itemDataList[i];\n\n                if (!TypeUtils.isNull(itemNode) && this._itemDataList.hasOwnProperty(i)) {\n                    if (this.clickItemEventHandler) {\n                        itemNode.getComponent(cc.Button).node.off(\"click\");\n                        itemNode.getComponent(cc.Button).node.on(\"click\", this.onClickItem.bind(this, itemNode, itemData));\n                    }\n                    let itemSrc: ComponentInterface.ListViewItemClass = itemNode.getComponent(itemNode.name);\n                    itemSrc.onShow && itemSrc.onShow(itemData);\n                } else if (TypeUtils.isNull(itemNode) && !this._itemDataList.hasOwnProperty(i)) {\n                    continue;\n                } else if (!this._itemDataList.hasOwnProperty(i)) {\n                    putIndexList.push(i);\n                } else if (TypeUtils.isNull(itemNode)) {\n                    let itemsData: unknown[] = this._itemDataList.slice(i, this._itemDataList.length);;\n                    if (this.mode === ComponentDefine.ListViewLoadMode.FRAME) {\n                        let nodePoolSize: number = this._itemNodePool.size();\n                        if (nodePoolSize > 0) {\n                            let directLoadEndIndex: number = i + nodePoolSize;\n                            itemsData = this._itemDataList.slice(i, directLoadEndIndex);\n                            this.directLoadItem(itemsData);\n                            if (directLoadEndIndex < this._renderItemEndIndex) {\n                                itemsData = this._itemDataList.slice(directLoadEndIndex, this._renderItemEndIndex);\n                                this.frameLoadItem(itemsData);\n                                isFrameLoad = true;\n                            }\n                        } else {\n                            this.frameLoadItem(itemsData);\n                            isFrameLoad = true;\n                        }\n                    } else if (this.mode === ComponentDefine.ListViewLoadMode.NONE) {\n                        this.directLoadItem(itemsData);\n                    }\n                    break;\n                }\n            }\n\n            for (let i: number = putIndexList.length - 1; i >= 0; --i) {\n                let itemNode: cc.Node = this.content.children[putIndexList[i]];\n                this.putNode(itemNode);\n            }\n\n            if (!isFrameLoad) {\n                this.setRendering(false);\n            }\n        }\n    }\n\n    /**\n     * 刷新缓存数据列表项\n     */\n    private updateCacheDataList(): void {\n        this.setData(this._itemDataList, this._itemCacheDataList);\n        this._itemCacheDataList.length = 0;\n        this._renderItemStartIndex = this._cacheRenderItemStartIndex;\n        this._renderItemEndIndex = Math.max(this._itemDataList.length, this.content.childrenCount);\n        this.updateListItem();\n    }\n\n    private initData(): void {\n        this._isLoaded = true;\n    }\n\n    private register(): void {\n        // this.node.on(\"scroll-to-top\", this.onScrollToTop, this);\n        // this.node.on(\"scroll-to-bottom\", this.onScrollToBottom, this);\n        // this.node.on(\"scroll-to-left\", this.onScrollToLeft, this);\n        // this.node.on(\"scroll-to-right\", this.onScrollToRight, this);\n\n        // this.node.on(\"bounce-bottom\", this.onBounceBottom, this);\n        // this.node.on(\"bounce-top\", this.onBounceTop, this);\n        // this.node.on(\"bounce-left\", this.onBounceLeft, this);\n        // this.node.on(\"bounce-right\", this.onBounceRight, this);\n\n        // this.node.on(\"scrolling\", this.onScrolling, this);\n        // this.node.on(\"scroll-ended\", this.onScrollEnded, this);\n        // this.node.on(\"touch-up\", this.onTouchUp, this);\n        // this.node.on(\"scroll-began\", this.onScrollBegan, this);\n    }\n\n    private unregister(): void {\n        // this.node.off(\"scroll-to-top\", this.onScrollToTop, this);\n        // this.node.off(\"scroll-to-bottom\", this.onScrollToBottom, this);\n        // this.node.off(\"scroll-to-left\", this.onScrollToLeft, this);\n        // this.node.off(\"scroll-to-right\", this.onScrollToRight, this);\n\n        // this.node.off(\"bounce-bottom\", this.onBounceBottom, this);\n        // this.node.off(\"bounce-top\", this.onBounceTop, this);\n        // this.node.off(\"bounce-left\", this.onBounceLeft, this);\n        // this.node.off(\"bounce-right\", this.onBounceRight, this);\n\n        // this.node.off(\"scrolling\", this.onScrolling, this);\n        // this.node.off(\"scroll-ended\", this.onScrollEnded, this);\n        // this.node.off(\"touch-up\", this.onTouchUp, this);\n        // this.node.off(\"scroll-began\", this.onScrollBegan, this);\n    }\n\n    private initView(): void {\n        let poolNodeCount: number = 0;\n\n        switch (this.direction) {\n            case ComponentDefine.DirectionType.HORIZONTAL: {\n                if (this.content.anchorX === 0.5) {\n                    this.content.anchorX = 0;\n                    this.content.x = this.content.x - (this.content.width * 0.5);\n                }\n                this.content.anchorY = 0.5;\n                poolNodeCount = Math.ceil((this.node.width - this.spacingX) / (this.itemPrefab.data.width + this.spacingX)) + 2;\n            }\n                break;\n            case ComponentDefine.DirectionType.VERTICAL: {\n                if (this.content.anchorY === 0.5) {\n                    this.content.anchorY = 1;\n                    this.content.y = this.content.y + (this.content.height * 0.5);\n                }\n                this.content.anchorX = 0.5;\n                poolNodeCount = Math.ceil((this.node.height - this.spacingY) / (this.itemPrefab.data.height + this.spacingY)) + 2;\n            }\n                break;\n        }\n\n        if (this.mode === ComponentDefine.ListViewLoadMode.ENDLESS) {\n            for (let i: number = 0; i < poolNodeCount; ++i) {\n                this.putNode(this.getNode());\n            }\n        }\n\n        if (this._itemDataList.length > 0) {\n            this.updateListItem();\n        }\n    }\n\n    /**\n     * 设置渲染中状态\n     * @param isRendering {boolean} 是否正在渲染项\n     */\n    private setRendering(isRendering: boolean): void {\n        this._isRendering = isRendering;\n        if (!isRendering) {\n            this.onRendered();\n        }\n    }\n\n    /**\n     * 获取列表项节点\n     * @returns {cc.Node} 节点\n     */\n    private getNode(): cc.Node | null {\n        if (!this.itemPrefab) {\n            G.Logger.error(`请在 ListView 添加预制项 prefab`);\n            return null;\n        }\n\n        let node: cc.Node = this._itemNodePool.get();\n        if (!node) {\n            node = cc.instantiate(this.itemPrefab);\n\n            if (this.clickItemEventHandler) {\n                let button: cc.Button = node.getComponent(cc.Button);\n                if (!button) {\n                    button = node.addComponent(cc.Button);\n                }\n            }\n        }\n\n        return node;\n    }\n\n    /**\n     * 放入列表项节点\n     * @param node {cc.Node} 节点\n     */\n    private putNode(node: cc.Node): void {\n        if (!node || node.name !== this.itemPrefab.data.name) {\n            G.Logger.warn(`请不要放入与 ${node.name} 不相关的节点`);\n            return null;\n        }\n\n        if (this.clickItemEventHandler) {\n            node.getComponent(cc.Button).node.off(\"click\");\n        }\n\n        node.removeFromParent();\n\n        let src: ComponentInterface.ListViewItemClass = node.getComponent(node.name);\n        src.reset();\n\n        this.scheduleOnce(() => {\n            this._itemNodePool.put(node);\n        });\n    }\n\n    private initItemPos(node: cc.Node): void {\n        let innerCount: number = this.content.childrenCount - 1;\n        if (this.direction === ComponentDefine.DirectionType.HORIZONTAL) {\n            node.setPosition(this.left + (this.itemPrefab.data.width * 0.5) + (innerCount * this.itemPrefab.data.width) + (innerCount * this.spacingX), 0);\n        } else if (this.direction === ComponentDefine.DirectionType.VERTICAL) {\n            node.setPosition(0, 0 - this.top - (this.itemPrefab.data.height * 0.5) - (innerCount * this.itemPrefab.data.height) - (innerCount * this.spacingY));\n        }\n    }\n\n    /**\n     * 生产列表项\n     * @param itemData {T} 泛型数据\n     */\n    private makeItem<T>(itemData: T): void {\n        let itemNode: cc.Node = this.getNode();\n        this.content.addChild(itemNode);\n        let itemSrc: ComponentInterface.ListViewItemClass = itemNode.getComponent(itemNode.name);\n        if (itemSrc && !TypeUtils.isNull(itemData)) {\n            if (this.clickItemEventHandler) {\n                itemNode.getComponent(cc.Button).node.on(\"click\", this.onClickItem.bind(this, itemNode, itemData));\n            }\n            itemSrc.onShow && itemSrc.onShow(itemData);\n        }\n\n        this.initItemPos(itemNode);\n    }\n\n    private *makeGeneratorItem<T>(itemsData: T[]): Generator {\n        for (let i: number = 0; i < itemsData.length; ++i) {\n            yield this.makeItem(itemsData[i]);\n        }\n    }\n\n    /**\n     * 执行协程加载列表项\n     * @param generator {Generator} 协程\n     * @param duration {number} 每次协程占用时间（单位：毫秒）\n     * @returns {Promise<void>}\n     */\n    private async execGeneratorItem(generator: Generator, duration: number): Promise<void> {\n        return new Promise((resolve: (value: void | PromiseLike<void>) => void, reject: (reason?: any) => void) => {\n            let exec: Function = () => {\n                let startTime = Date.now();\n                for (let iterator = generator.next(); ; iterator = generator.next()) {\n                    if (iterator == null || iterator.done) {\n                        resolve();\n                        break;\n                    }\n\n                    if (Date.now() - startTime > duration) {\n                        this.scheduleOnce(() => {\n                            exec();\n                        });\n                        break;\n                    }\n                }\n            }\n\n            exec();\n        });\n    }\n\n    /**\n     * 分帧加载\n     * @param itemsData {itemsData: T[]} 列表项数据\n     * @returns {Promise<void>}\n     */\n    private async frameLoadItem<T>(itemsData: T[]): Promise<void> {\n        await this.execGeneratorItem(this.makeGeneratorItem(itemsData), EXEC_GENERATOR_TIME);\n        this.setRendering(false);\n    }\n\n    /**\n     * 直接加载\n     * @param itemsData {itemsData: T[]} 列表项数据\n     */\n    private directLoadItem<T>(itemsData: T[]): void {\n        for (let i: number = 0; i < itemsData.length; ++i) {\n            this.makeItem(itemsData[i]);\n        }\n    }\n\n    // /**\n    //  * 获取左边缓存矩形区域\n    //  * @returns {cc.Rect} 矩形\n    //  */\n    // private getCacheRectLeft(): cc.Rect {\n    //     let rect: cc.Rect = null;\n    //     let point: cc.Vec2 = this.content.parent.convertToWorldSpace(cc.v2(0, 0));\n    //     point.x -= this.content.parent.width;\n    //     rect = cc.rect(point.x, point.y, this.content.parent.width, this.content.parent.height);\n    //     return rect;\n    // }\n\n    // /**\n    //  * 获取右边缓存矩形区域\n    //  * @returns {cc.Rect} 矩形\n    //  */\n    // private getCacheRectRight(): cc.Rect {\n    //     let rect: cc.Rect = null;\n    //     let point: cc.Vec2 = this.content.parent.convertToWorldSpace(cc.v2(0, 0));\n    //     point.x += this.content.parent.width;\n    //     rect = cc.rect(point.x, point.y, this.content.parent.width, this.content.parent.height);\n    //     return rect;\n    // }\n\n    // /**\n    //  * 获取顶部缓存矩形区域\n    //  * @returns {cc.Rect} 矩形\n    //  */\n    // private getCacheRectTop(): cc.Rect {\n    //     let rect: cc.Rect = null;\n    //     let point: cc.Vec2 = this.content.parent.convertToWorldSpace(cc.v2(0, 0));\n    //     point.y += this.content.parent.height;\n    //     rect = cc.rect(point.x, point.y, this.content.parent.width, this.content.parent.height);\n    //     return rect;\n    // }\n\n    // /**\n    //  * 获取底部缓存矩形区域\n    //  * @returns {cc.Rect} 矩形\n    //  */\n    // private getCacheRectBottom(): cc.Rect {\n    //     let rect: cc.Rect = null;\n    //     let point: cc.Vec2 = this.content.parent.convertToWorldSpace(cc.v2(0, 0));\n    //     point.y -= this.content.parent.height;\n    //     rect = cc.rect(point.x, point.y, this.content.parent.width, this.content.parent.height);\n    //     return rect;\n    // }\n\n    // /**\n    //  * 获取左右缓存矩形区域\n    //  * @returns {cc.Rect} 矩形\n    //  */\n    // private getCacheRectLeftRight(): cc.Rect {\n    //     let rect: cc.Rect = null;\n    //     let point: cc.Vec2 = this.content.parent.convertToWorldSpace(cc.v2(0, 0));\n    //     point.x -= this.content.parent.width;\n    //     rect = cc.rect(point.x, point.y, this.content.parent.width * 3, this.content.parent.height);\n    //     return rect;\n    // }\n\n    // /**\n    //  * 获取上下缓存矩形区域\n    //  * @returns {cc.Rect} 矩形\n    //  */\n    // private getCacheRectTopBottom(): cc.Rect {\n    //     let rect: cc.Rect = null;\n    //     let point: cc.Vec2 = this.content.parent.convertToWorldSpace(cc.v2(0, 0));\n    //     point.y -= this.content.parent.height;\n    //     rect = cc.rect(point.x, point.y, this.content.parent.width, this.content.parent.height * 3);\n    //     return rect;\n    // }\n\n    // /**\n    //  * 获取中间可视矩形区域\n    //  * @returns {cc.Rect} 矩形\n    //  */\n    // private getVisibleRectCenter(): cc.Rect {\n    //     let rect: cc.Rect = null;\n    //     let point: cc.Vec2 = this.content.parent.convertToWorldSpace(cc.v2(0, 0));\n    //     rect = cc.rect(point.x, point.y, this.content.parent.width, this.content.parent.height);\n    //     return rect;\n    // }\n\n    // /**\n    //  * 获取子项列表的矩形大小\n    //  * @param items {ScrollViewInterface.ItemData[]} 子项列表\n    //  * @returns {cc.Size}\n    //  */\n    // private getItemsRectSize(items: ScrollViewInterface.ItemData[]): cc.Size {\n    //     let rectSize: cc.Size = new cc.Size(0, 0);\n\n    //     if (items) {\n    //         if (!(items instanceof Array)) {\n    //             items = [].concat(items);\n    //         }\n\n    //         for (let i: number = 0; i < items.length; ++i) {\n    //             let item: ScrollViewInterface.ItemData = items[i];\n    //             rectSize.width += item.prefab.data.width;\n    //             rectSize.height += item.prefab.data.height;\n    //         }\n    //     }\n\n    //     return rectSize;\n    // }\n\n    /**\n     * 获取边距\n     * @returns {number} 边距\n     */\n    private getPadding(): number {\n        let padding: number = 0;\n        if (this.direction === ComponentDefine.DirectionType.HORIZONTAL) {\n            padding += this.left + this.right;\n        } else if (this.direction === ComponentDefine.DirectionType.VERTICAL) {\n            padding += this.top + this.bottom;\n        }\n        return padding;\n    }\n\n    /**\n     * 获取间距\n     * @returns {number} 间距\n     */\n    private getSpacing(): number {\n        let spacing: number = 0;\n        if (this.direction === ComponentDefine.DirectionType.HORIZONTAL) {\n            spacing = this.spacingX;\n        } else if (this.direction === ComponentDefine.DirectionType.VERTICAL) {\n            spacing = this.spacingY;\n        }\n        return spacing;\n    }\n\n    /**\n     * 获取内容器预估大小\n     * @returns {cc.Size} 内容器预估大小\n     */\n    private getInnerEstimateSize(): cc.Size {\n        let size: cc.Size = this.content.parent.getContentSize();\n        if (this.direction === ComponentDefine.DirectionType.HORIZONTAL) {\n            size.width = this.getPadding() + (this.getSpacing() * (this._itemDataList.length - 1)) + (this._itemDataList.length * this.itemPrefab.data.width);\n            if (size.width < this.content.parent.width) {\n                size.width = this.content.parent.width;\n            }\n        } else if (this.direction === ComponentDefine.DirectionType.VERTICAL) {\n            size.height = this.getPadding() + (this.getSpacing() * (this._itemDataList.length - 1)) + (this._itemDataList.length * this.itemPrefab.data.height);\n            if (size.height < this.content.parent.height) {\n                size.height = this.content.parent.height;\n            }\n        }\n        return size;\n    }\n\n    // private onScrollToTop(target: ListView): void {\n    //     if (!this.isPaging) {\n    //         return;\n    //     }\n\n    //     if (this.pullTopEventHandler) {\n    //         this.pullTopEventHandler.emit([target]);\n    //     }\n    // }\n\n    // private onScrollToBottom(target: ListView): void {\n    //     if (!this.isPaging) {\n    //         return;\n    //     }\n\n    //     if (this.pullBottomEventHandler) {\n    //         this.pullBottomEventHandler.emit([target]);\n    //     }\n    // }\n\n    // private onScrollToLeft(target: ListView): void {\n    //     if (!this.isPaging) {\n    //         return;\n    //     }\n\n    //     if (this.pullLeftEventHandler) {\n    //         this.pullLeftEventHandler.emit([target]);\n    //     }\n    // }\n\n    // private onScrollToRight(target: ListView): void {\n    //     if (!this.isPaging) {\n    //         return;\n    //     }\n\n    //     if (this.pullRightEventHandler) {\n    //         this.pullRightEventHandler.emit([target]);\n    //     }\n    // }\n\n    // private onScrolling(target: ListView): void {\n    //     // for (let i: number = 0; i < this.content.childrenCount; ++i) {\n    //     //     let itemNode: cc.Node = this.content.children[i];\n    //     //     let itemRect: cc.Rect = itemNode.getBoundingBoxToWorld();\n\n    //     //     if (itemRect.intersects(this.m_cacheRect)) {\n\n    //     //     } else {\n    //     //         if (this.direction === ComponentDefine.DirectionType.HORIZONTAL) {\n    //     //             if (itemNode.convertToWorldSpace(cc.v2(0, 0)).x > this.content.parent.convertToWorldSpaceAR(cc.v2(0, 0)).x) {\n    //     //                 --this.m_lastIndex;\n    //     //             }\n    //     //         } else if (this.direction === ComponentDefine.DirectionType.VERTICAL) {\n    //     //             if (itemNode.convertToWorldSpace(cc.v2(0, 0)).y < this.content.parent.convertToWorldSpaceAR(cc.v2(0, 0)).x) {\n    //     //                 --this.m_lastIndex;\n    //     //             }\n    //     //         }\n    //     //         this.putNode(itemNode);\n    //     //     }\n\n    //     // }\n    //     // G.LogMgr.log(\"Scrolling\", target);\n    // }\n\n    // private onBounceBottom(target: ListView): void {\n    //     if (!this.brake) {\n    //         return;\n    //     }\n\n    //     // G.LogMgr.log(\"BounceBottom\");\n    // }\n\n    // private onBounceTop(target: ListView): void {\n    //     if (!this.brake) {\n    //         return;\n    //     }\n\n    //     // G.LogMgr.log(\"BounceTop\");\n    // }\n\n    // private onBounceLeft(target: ListView): void {\n    //     if (!this.brake) {\n    //         return;\n    //     }\n\n    //     // G.LogMgr.log(\"BounceLeft\");\n    // }\n\n    // private onBounceRight(target: ListView): void {\n    //     if (!this.brake) {\n    //         return;\n    //     }\n\n    //     // G.LogMgr.log(\"BounceRight\");\n    // }\n\n    // private onScrollEnded(target: ListView): void {\n    //     // G.LogMgr.log(\"ScrollEnded\");\n    // }\n\n    // private onTouchUp(target: ListView): void {\n    //     // G.LogMgr.log(\"TouchUp\");\n    // }\n\n    // private onScrollBegan(target: ListView): void {\n    //     // G.LogMgr.log(\"ScrollBegan\");\n    // }\n\n    /**\n     * 加载渲染完成 回调\n     */\n    private onRendered(): void {\n        this._renderingOperateCount = 0;\n\n        if (this._itemCacheDataList.length <= 0) {\n            this._cacheRenderItemStartIndex = null;\n            return;\n        }\n\n        this.updateCacheDataList();\n    }\n\n    update(dt: number) {\n\n    }\n\n    private onClickItem<T>(node: cc.Node, data: T): void {\n        this.clickItemEventHandler.emit([node, data]);\n    }\n\n    protected onDestroy(): void {\n\n        this.unregister();\n    }\n\n}\n"]}
{"version":3,"sources":["assets/script/recharge/GoodsItem.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA4C;AAI5C,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,SAAS,GAA9B,MAAqB,SAAU,SAAQ,EAAE,CAAC,SAAS;IAAnD;;QAGI,aAAQ,GAAc,IAAI,CAAA;QAG1B,YAAO,GAAgB,IAAI,CAAA;QAG3B,YAAO,GAAa,IAAI,CAAA;QAGxB,cAAS,GAAqB,EAAE,CAAA;QAEhC,kBAAa,GAAiB,IAAI,CAAA;QAElC,YAAO,GAAW,CAAC,CAAA;QA0BnB,YAAY;QAEZ,iBAAiB;IACrB,CAAC;IA3BG,MAAM;IAEN,CAAC;IAED,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,MAAM;QAC/B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAA;QACjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QAErB,IAAI,QAAQ,CAAC,IAAI,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,MAAM,GAAE,iBAAiB,GAAC,iBAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAC,uBAAuB,GAAC,iBAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAC,UAAU,CAAA;SAClJ;aAAI;YACD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;SAC3D;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QAE5D,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QAC7G,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAA;IAC3C,CAAC;IAED,WAAW;QACP,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACrD,CAAC;CAKJ,CAAA;AA1CG;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;2CACM;AAG1B;IADC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;0CACK;AAG3B;IADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;0CACK;AAGxB;IADC,QAAQ,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;4CACK;AAZf,SAAS;IAD7B,OAAO;GACa,SAAS,CA6C7B;kBA7CoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import { UtilMgr } from \"../global/UtilMgr\";\nimport RechargeView from \"./RechargeView\";\nimport { protoPackage, serverType } from \"../common/net/CommonService\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GoodsItem extends cc.Component {\n\n    @property(cc.Sprite)\n    chipIcon: cc.Sprite = null\n\n    @property(cc.RichText)\n    amount1: cc.RichText = null\n\n    @property(cc.Label)\n    amount2: cc.Label = null\n\n    @property([cc.SpriteFrame])\n    chipFrame: cc.SpriteFrame[] = []\n\n    _rechargeView: RechargeView = null\n\n    _itemId: number = 0\n\n    onLoad() {\n\n    }\n\n    init(rechargeView, itemData, itemId) {\n        this._rechargeView = rechargeView\n        this._itemId = itemId\n\n        if (itemData.give) {\n            this.amount1.string ='<color=#ffffff>'+UtilMgr.changeMoney(itemData.gold)+'+ </c><color=#EFED30>'+UtilMgr.changeMoney(itemData.give)+'</color>'\n        }else{\n            this.amount1.string = UtilMgr.changeMoney(itemData.gold)\n        }\n      \n        this.amount2.string = UtilMgr.changeMoney(itemData.nowPrice)\n\n        let spriteFrame = this.chipFrame[itemId] ? this.chipFrame[itemId] : this.chipFrame[this.chipFrame.length - 1]\n        this.chipIcon.spriteFrame = spriteFrame\n    }\n\n    onClickItem() {\n        this._rechargeView.onClickGoodsItem(this._itemId)\n    }\n\n    //start() {}\n\n    // update (dt) {}\n}\n"]}
{"version":3,"sources":["assets/script/login/LoginLogic.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Logic } from \"../common/base/Logic\";\nimport { LogicType, LogicEvent } from \"../common/event/LogicEvent\";\nimport { BUNDLE_RESOURCES } from \"../framework/base/Defines\";\nimport { Manager } from \"../common/manager/Manager\";\nimport { LobbyService } from \"../common/net/LobbyService\";\nimport { Config } from \"../common/config/Config\";\nimport { EventApi } from \"../framework/event/EventApi\";\nimport { MST } from \"../framework/external/protoc\";\nimport * as LocalStoreageDefine from \"../common/define/LocalStorageDefine\";\nimport HallData from \"../data/HallData\";\nimport UserData from \"../data/UserData\";\nimport fbsdk from \"../sdk/fbsdk\";\nimport googlesdk from \"../sdk/googlesdk\";\nimport { Language } from \"../framework/base/Language\";\nimport PanelHelp from \"../msgbox/PanelHelp\";\nimport AppData from \"../data/AppData\";\n\nclass LoginLogic extends Logic {\n\n    logicType: LogicType = LogicType.LOGIN;\n\n    get bundle() {\n        return BUNDLE_RESOURCES;\n    }\n\n    bindingEvents() {\n        super.bindingEvents();\n        this.registerEvent(LogicEvent.ENTER_LOGIN, this.onEnterLogin);\n        this.registerEvent(EventApi.NetEvent.ON_OPEN, this.onOpen);\n        this.registerEvent('updateUserInfo', this.onUpdateUserInfo);\n        // this.addEvent(MST.OuterOpcode_Gate.G2C_LoginGate_Res, this.onG2C_LoginGate_Res);\n    }\n\n    onLoad() {\n        this._service = LobbyService.instance\n        super.onLoad();\n        //加载sdk\n        // fbsdk.instance.FB_Load()\n        // googlesdk.instance.Google_Load()\n\n        Language.Instance().change(cc.sys.LANGUAGE_HINDI);\n    }\n\n    // 系统类型 0-安卓 1-ios 2-windowsPC\n    private getOS(): number {\n        switch (cc.sys.os) {\n            case cc.sys.OS_ANDROID:\n                return 0;\n            case cc.sys.OS_IOS:\n                return 1;\n            default:\n                return 2;\n        }\n    }\n\n    private onOpen(): void {\n        // let req = MST.C2G_LoginGate_Req.create({\n        //     RpcId: Manager.netManager.getNewSeqId(),\n        //     MachineCode: \"\",\n        //     OS: this.getOS(),\n        //     Description: \"\",\n        // });\n        // let buffer = MST.C2G_LoginGate_Req.encode(req).finish();\n        // LobbyService.instance.sendMsg(MST.C2G_LoginGate_Req, MST.OuterOpcode_Gate.C2G_LoginGate_Req, buffer);\n\n        // // TODO 删除\n        // let config = new GameConfig(Config.games[\"Wingo\"].name, Config.games[\"Wingo\"].subName, 0);\n        // gameManager().enterGameNoUpdate(config);\n        // return;\n\n\n        let AuthKey = Manager.localStorage.getItem(LocalStoreageDefine.ACCOUNT_TOKEN);\n        if (AuthKey) {\n            let _appData = G.DataMgr.get(AppData);\n            let invcode = _appData.invcode;\n            let Password = '123456'\n            let ThirdId = 'test ThirdId'\n            // let imei = 'test imei' + Math.floor(Math.random() * 10000 + 1)\n            let imei = Manager.localStorage.getItem('IMEI');\n            if (!imei) {\n                imei = 'test imei' + Math.floor(Math.random() * 10000 + 1)\n                Manager.localStorage.setItem('IMEI', imei);\n            }\n            let req = MST.C2M_Auth_Req.create({\n                RpcId: Manager.netManager.getNewSeqId(),\n                AuthKey,\n                Password,\n                AuthType: 7,\n                ThirdId,\n                imei,\n                invcode\n            });\n            let buffer = MST.C2M_Auth_Req.encode(req).finish();\n            LobbyService.instance.sendMsg(MST.C2M_Auth_Req, MST.OuterOpcode_Map.C2M_Auth_Req, buffer);\n        } else {\n            this.removeEvent('updateUserInfo');\n            dispatch(LogicEvent.ENTER_HALL);\n        }\n        // dispatch(LogicEvent.ENTER_HALL);\n    }\n\n    private onEnterLogin() {\n        G.Logger.log('==onEnterLogin==');\n        LobbyService.instance.connect(Config.WS_URL);\n    }\n\n    private onG2C_LoginGate_Res(data: MST.G2C_LoginGate_Res): void {\n        let hallData = G.DataMgr.get(HallData);\n        //假数据\n        // let testRooms = [\n        //     { id: '0', Name: 'Crash' },\n        //     { id: '1', Name: 'Roulette' }\n        // ]\n        // hallData.gameList = testRooms;\n        // hallData.gameList = data.Rooms;\n\n        // let token: string = Manager.localStorage.getItem(LocalStoreageDefine.ACCOUNT_TOKEN);\n        // if (token) {\n        //     let AuthKey = 100000 + Math.floor(Math.random() * (999999 - 100000));\n        //     let Password = '123456'\n        //     let req = MST.C2M_Auth_Req.create({\n        //         RpcId: Manager.netManager.getNewSeqId(),\n        //         AuthKey: AuthKey.toString(),\n        //         Password,\n        //         AuthType: 6,\n        //     });\n        //     let buffer = MST.C2M_Auth_Req.encode(req).finish();\n        //     LobbyService.instance.sendMsg(MST.C2M_Auth_Req, MST.OuterOpcode_Map.C2M_Auth_Req, buffer);\n        // } else {\n        //     dispatch(LogicEvent.ENTER_HALL);\n        // }\n    }\n\n    onUpdateUserInfo() {\n        dispatch(LogicEvent.ENTER_HALL);\n        this.removeEvent('updateUserInfo');\n    }\n}\n\nManager.logicManager.push(LoginLogic);"]}
{"version":3,"sources":["assets/script/framework/extentions/Operation.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class Operation {\n\n    public static add(arg1, arg2) {\n        let digits1, digits2, maxDigits;\n        try { digits1 = arg1.toString().split(\".\")[1].length } catch (e) { digits1 = 0 }\n        try { digits2 = arg2.toString().split(\".\")[1].length } catch (e) { digits2 = 0 }\n        maxDigits = Math.pow(10, Math.max(digits1, digits2))\n        return (Math.ceil(arg1 * maxDigits) + Math.ceil(arg2 * maxDigits)) / maxDigits\n    }\n\n    public static sub(arg1, arg2) {\n        let digits1, digits2, maxDigits;\n        try { digits1 = arg1.toString().split(\".\")[1].length } catch (e) { digits1 = 0 }\n        try { digits2 = arg2.toString().split(\".\")[1].length } catch (e) { digits2 = 0 }\n        maxDigits = Math.pow(10, Math.max(digits1, digits2));\n        return (Math.ceil(arg1 * maxDigits) - Math.ceil(arg2 * maxDigits)) / maxDigits;\n    }\n\n    public static mul(arg1, arg2) {\n        let digits = 0, s1 = arg1.toString(), s2 = arg2.toString();\n        try { digits += s1.split(\".\")[1].length } catch (e) { }\n        try { digits += s2.split(\".\")[1].length } catch (e) { }\n        return Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\")) / Math.pow(10, digits);\n    }\n\n    public static div(arg1, arg2) {\n        let int1 = 0, int2 = 0, digits1, digits2;\n        try { digits1 = arg1.toString().split(\".\")[1].length } catch (e) { digits1 = 0 }\n        try { digits2 = arg2.toString().split(\".\")[1].length } catch (e) { digits2 = 0 }\n\n        int1 = Number(arg1.toString().replace(\".\", \"\"))\n        int2 = Number(arg2.toString().replace(\".\", \"\"))\n        return (int1 / int2) * Math.pow(10, digits2 - digits1);\n    }\n}"]}